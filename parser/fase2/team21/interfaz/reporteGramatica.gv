digraph structs {
	node [shape=plaintext]
stack [label =  <<TABLE><TR>
<TD>PRODUCCIONES</TD>
<TD>SEMANTICO</TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion ::= select2 PTCOMA</TD>
<TD>instruccion = select2</TD>
</TR><TR>
<TD>select2 ::= SELECT select_list FROM subquery inner orderby limit</TD>
<TD>select2 = Select(3, False, None, select_list, subquery, inner, orderby, limit, None)</TD>
</TR><TR>
<TD>limit ::= </TD>
<TD>limit =  </TD>
</TR><TR>
<TD>orderby ::= </TD>
<TD>orderby =  </TD>
</TR><TR>
<TD>inner ::= compSelect</TD>
<TD>inner = compSelect </TD>
</TR><TR>
<TD>compSelect ::= list</TD>
<TD>compSelect = list</TD>
</TR><TR>
<TD>list ::= columna</TD>
<TD>list = [columna]</TD>
</TR><TR>
<TD>columna ::=  prim</TD>
<TD>columna   = prim</TD>
</TR><TR>
<TD>prim ::=  var</TD>
<TD>prim = var </TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>var ::= ID</TD>
<TD>var = Id(ID)</TD>
</TR><TR>
<TD>subquery ::= </TD>
<TD>subquery = </TD>
</TR><TR>
<TD>select_list ::= MULT</TD>
<TD>select_list =MULT</TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= CADENA</TD>
<TD>valores = Primitivo(CADENA) </TD>
</TR><TR>
<TD>listaExpresiones :: = E</TD>
<TD>listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion :: = INSERT INTO ID VALUES value PTCOMA</TD>
<TD>instruccion = InsertInto(2,ID, None, value)</TD>
</TR><TR>
<TD>value :: = PARIZQ listaExpresiones PARDR</TD>
<TD>value = listaExpresiones </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= Time</TD>
<TD>valores = Time </TD>
</TR><TR>
<TD>Time ::= NOW PARIZQ PARDR</TD>
<TD>Time =  Time(2, None, None, None)</TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= CADENA</TD>
<TD>valores = Primitivo(CADENA) </TD>
</TR><TR>
<TD>listaExpresiones :: = E</TD>
<TD>listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion :: = INSERT INTO ID VALUES value PTCOMA</TD>
<TD>instruccion = InsertInto(2,ID, None, value)</TD>
</TR><TR>
<TD>value :: = PARIZQ listaExpresiones PARDR</TD>
<TD>value = listaExpresiones </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= Time</TD>
<TD>valores = Time </TD>
</TR><TR>
<TD>Time ::= NOW PARIZQ PARDR</TD>
<TD>Time =  Time(2, None, None, None)</TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= CADENA</TD>
<TD>valores = Primitivo(CADENA) </TD>
</TR><TR>
<TD>listaExpresiones :: = E</TD>
<TD>listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion :: = INSERT INTO ID VALUES value PTCOMA</TD>
<TD>instruccion = InsertInto(2,ID, None, value)</TD>
</TR><TR>
<TD>value :: = PARIZQ listaExpresiones PARDR</TD>
<TD>value = listaExpresiones </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= Time</TD>
<TD>valores = Time </TD>
</TR><TR>
<TD>Time ::= NOW PARIZQ PARDR</TD>
<TD>Time =  Time(2, None, None, None)</TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= CADENA</TD>
<TD>valores = Primitivo(CADENA) </TD>
</TR><TR>
<TD>listaExpresiones :: = E</TD>
<TD>listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion :: = INSERT INTO ID VALUES value PTCOMA</TD>
<TD>instruccion = InsertInto(2,ID, None, value)</TD>
</TR><TR>
<TD>value :: = PARIZQ listaExpresiones PARDR</TD>
<TD>value = listaExpresiones </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= Time</TD>
<TD>valores = Time </TD>
</TR><TR>
<TD>Time ::= NOW PARIZQ PARDR</TD>
<TD>Time =  Time(2, None, None, None)</TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= CADENA</TD>
<TD>valores = Primitivo(CADENA) </TD>
</TR><TR>
<TD>listaExpresiones :: = E</TD>
<TD>listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion :: = INSERT INTO ID VALUES value PTCOMA</TD>
<TD>instruccion = InsertInto(2,ID, None, value)</TD>
</TR><TR>
<TD>value :: = PARIZQ listaExpresiones PARDR</TD>
<TD>value = listaExpresiones </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= Time</TD>
<TD>valores = Time </TD>
</TR><TR>
<TD>Time ::= NOW PARIZQ PARDR</TD>
<TD>Time =  Time(2, None, None, None)</TD>
</TR><TR>
<TD>listaExpresiones :: = listaExpresiones COMA E</TD>
<TD>listaExpresiones = listaExpresiones; listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= CADENA</TD>
<TD>valores = Primitivo(CADENA) </TD>
</TR><TR>
<TD>listaExpresiones :: = E</TD>
<TD>listaExpresiones.append(E)</TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= ENTERO</TD>
<TD>valores = Primitivo(ENTERO) </TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion ::= CREATE UNIQUE INDEX ID ON ID PARIZQ listaID PARDR PTCOMA</TD>
<TD>instruccion = Index(3, ID, ID, listaID)</TD>
</TR><TR>
<TD>listaID :: = var</TD>
<TD>listaID = var</TD>
</TR><TR>
<TD>var ::= ID</TD>
<TD>var = Id(ID)</TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion :: = CREATE TABLE ID PARIZQ campos PARDR PTCOMA</TD>
<TD>instruccion :: = CreateTable(ID,campos,None) </TD>
</TR><TR>
<TD>campos :: = campos COMA campo</TD>
<TD>campos = campos; campos.append(campo)</TD>
</TR><TR>
<TD>campo :: = ID tipo acompaniamiento</TD>
<TD>campo = Campo(1,ID,tipo,acompaniamiento,None,None,None) </TD>
</TR><TR>
<TD>acompaniamiento :: = acom</TD>
<TD>acompaniamiento.append([acom]) </TD>
</TR><TR>
<TD>acom :: = NOT NULL</TD>
<TD>acom = Acompaniamiento(NOTNULL, None) </TD>
</TR><TR>
<TD>tipo :: =INTEGER</TD>
<TD>tipo = Tipo(INTEGER.upper(), None)</TD>
</TR><TR>
<TD>campos :: = campos COMA campo</TD>
<TD>campos = campos; campos.append(campo)</TD>
</TR><TR>
<TD>campo :: = ID tipo acompaniamiento</TD>
<TD>campo = Campo(1,ID,tipo,acompaniamiento,None,None,None) </TD>
</TR><TR>
<TD>acompaniamiento :: = acom</TD>
<TD>acompaniamiento.append([acom]) </TD>
</TR><TR>
<TD>acom :: = NOT NULL</TD>
<TD>acom = Acompaniamiento(NOTNULL, None) </TD>
</TR><TR>
<TD>tipo :: = VARCHAR(100)</TD>
<TD>tipo =  Tipo(VARCHAR- ENTERO,PRIMITIVO(100)</TD>
</TR><TR>
<TD>campos :: = campo</TD>
<TD> campos = campo</TD>
</TR><TR>
<TD>campo :: = ID tipo acompaniamiento</TD>
<TD>campo = Campo(1,ID,tipo,acompaniamiento,None,None,None) </TD>
</TR><TR>
<TD>acompaniamiento :: = acompaniamiento acom</TD>
<TD> acompaniamiento = acompaniamiento; acompaniamiento.append(acom) </TD>
</TR><TR>
<TD>acom :: = PRIMARY KEY</TD>
<TD>acom = Acompaniamiento(PRIMARYKEY, None)</TD>
</TR><TR>
<TD>acompaniamiento :: = acom</TD>
<TD>acompaniamiento.append([acom]) </TD>
</TR><TR>
<TD>acom :: = NOT NULL</TD>
<TD>acom = Acompaniamiento(NOTNULL, None) </TD>
</TR><TR>
<TD>tipo :: =INTEGER</TD>
<TD>tipo = Tipo(INTEGER.upper(), None)</TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion ::= CREATE UNIQUE INDEX ID ON ID PARIZQ listaID PARDR PTCOMA</TD>
<TD>instruccion = Index(3, ID, ID, listaID)</TD>
</TR><TR>
<TD>listaID :: = var</TD>
<TD>listaID = var</TD>
</TR><TR>
<TD>var ::= ID</TD>
<TD>var = Id(ID)</TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion :: = CREATE TABLE ID PARIZQ campos PARDR PTCOMA</TD>
<TD>instruccion :: = CreateTable(ID,campos,None) </TD>
</TR><TR>
<TD>campos :: = campos COMA campo</TD>
<TD>campos = campos; campos.append(campo)</TD>
</TR><TR>
<TD>campo :: = ID tipo</TD>
<TD>campo = Campo(1,ID,Tipo,None,None,None,None)</TD>
</TR><TR>
<TD>tipo :: =INTEGER</TD>
<TD>tipo = Tipo(INTEGER.upper(), None)</TD>
</TR><TR>
<TD>campos :: = campos COMA campo</TD>
<TD>campos = campos; campos.append(campo)</TD>
</TR><TR>
<TD>campo :: = ID tipo acompaniamiento</TD>
<TD>campo = Campo(1,ID,tipo,acompaniamiento,None,None,None) </TD>
</TR><TR>
<TD>acompaniamiento :: = acom</TD>
<TD>acompaniamiento.append([acom]) </TD>
</TR><TR>
<TD>acom :: = NOT NULL</TD>
<TD>acom = Acompaniamiento(NOTNULL, None) </TD>
</TR><TR>
<TD>tipo :: =DATE</TD>
<TD>tipo = Tipo(DATE.upper(), None)</TD>
</TR><TR>
<TD>campos :: = campos COMA campo</TD>
<TD>campos = campos; campos.append(campo)</TD>
</TR><TR>
<TD>campo :: = ID tipo acompaniamiento</TD>
<TD>campo = Campo(1,ID,tipo,acompaniamiento,None,None,None) </TD>
</TR><TR>
<TD>acompaniamiento :: = acom</TD>
<TD>acompaniamiento.append([acom]) </TD>
</TR><TR>
<TD>acom :: = NOT NULL</TD>
<TD>acom = Acompaniamiento(NOTNULL, None) </TD>
</TR><TR>
<TD>tipo :: = VARCHAR(150)</TD>
<TD>tipo =  Tipo(VARCHAR- ENTERO,PRIMITIVO(150)</TD>
</TR><TR>
<TD>campos :: = campo</TD>
<TD> campos = campo</TD>
</TR><TR>
<TD>campo :: = ID tipo acompaniamiento</TD>
<TD>campo = Campo(1,ID,tipo,acompaniamiento,None,None,None) </TD>
</TR><TR>
<TD>acompaniamiento :: = acompaniamiento acom</TD>
<TD> acompaniamiento = acompaniamiento; acompaniamiento.append(acom) </TD>
</TR><TR>
<TD>acom :: = PRIMARY KEY</TD>
<TD>acom = Acompaniamiento(PRIMARYKEY, None)</TD>
</TR><TR>
<TD>acompaniamiento :: = acom</TD>
<TD>acompaniamiento.append([acom]) </TD>
</TR><TR>
<TD>acom :: = NOT NULL</TD>
<TD>acom = Acompaniamiento(NOTNULL, None) </TD>
</TR><TR>
<TD>tipo :: =INTEGER</TD>
<TD>tipo = Tipo(INTEGER.upper(), None)</TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion ::= select2 PTCOMA</TD>
<TD>instruccion = select2</TD>
</TR><TR>
<TD>select2 ::= SELECT select_list</TD>
<TD>select2 = Select(4, False, None, select_list, None, None, None, None, None) </TD>
</TR><TR>
<TD>select_list ::= list</TD>
<TD>select_list = list </TD>
</TR><TR>
<TD>list ::= columna</TD>
<TD>list = [columna]</TD>
</TR><TR>
<TD>columna ::=  prim</TD>
<TD>columna   = prim</TD>
</TR><TR>
<TD>prim ::=  var</TD>
<TD>prim = var </TD>
</TR><TR>
<TD>E ::= valores </TD>
<TD>E = valores </TD>
</TR><TR>
<TD>valores ::= CADENA</TD>
<TD>valores = Primitivo(CADENA) </TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion ::= USE DATABASE ID PTCOMA</TD>
<TD>instruccion = Use(ID) </TD>
</TR><TR>
<TD>s ::= intrucciones</TD>
<TD>. </TD>
</TR><TR>
<TD>instrucciones ::= instrucciones instruccion</TD>
<TD>intrucciones=[instruccion] </TD>
</TR><TR>
<TD>instruccion ::=  opcionCR ID PTCOMA</TD>
<TD>instruccion = CreateReplace(opcionR, False, ID, None)</TD>
</TR><TR>
<TD>opcionCR ::=  CREATE DATABASE</TD>
<TD>opcionCR = 1</TD>
</TR></TABLE>>, ];
}
