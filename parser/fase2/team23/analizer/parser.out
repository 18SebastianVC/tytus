Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OC_AND
    OC_NOT
    OC_OR
    OC_SHIFTL
    OC_SHIFTR
    OC_XOR

Grammar

Rule 0     S' -> init
Rule 1     init -> stmtList
Rule 2     stmtList -> stmtList stmt
Rule 3     stmtList -> stmt
Rule 4     stmt -> createStmt S_PUNTOCOMA
Rule 5     stmt -> showStmt S_PUNTOCOMA
Rule 6     stmt -> alterStmt S_PUNTOCOMA
Rule 7     stmt -> dropStmt S_PUNTOCOMA
Rule 8     stmt -> insertStmt S_PUNTOCOMA
Rule 9     stmt -> updateStmt S_PUNTOCOMA
Rule 10    stmt -> deleteStmt S_PUNTOCOMA
Rule 11    stmt -> truncateStmt S_PUNTOCOMA
Rule 12    stmt -> useStmt S_PUNTOCOMA
Rule 13    stmt -> selectStmt S_PUNTOCOMA
Rule 14    idOrString -> ID
Rule 15    idOrString -> STRING
Rule 16    idOrString -> CHARACTER
Rule 17    createStmt -> R_CREATE createBody
Rule 18    createBody -> createOpts
Rule 19    createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
Rule 20    createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode
Rule 21    orReplace -> R_OR R_REPLACE
Rule 22    orReplace -> <empty>
Rule 23    createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
Rule 24    ifNotExists -> R_IF R_NOT R_EXISTS
Rule 25    ifNotExists -> <empty>
Rule 26    inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER
Rule 27    inheritsOpt -> <empty>
Rule 28    createOwner -> R_OWNER ID
Rule 29    createOwner -> R_OWNER STRING
Rule 30    createOwner -> R_OWNER S_IGUAL ID
Rule 31    createOwner -> R_OWNER S_IGUAL STRING
Rule 32    createOwner -> <empty>
Rule 33    createMode -> R_MODE INTEGER
Rule 34    createMode -> R_MODE S_IGUAL INTEGER
Rule 35    createMode -> <empty>
Rule 36    createTableList -> createTableList S_COMA createTable
Rule 37    createTableList -> createTable
Rule 38    createTable -> ID types createColumns
Rule 39    createTable -> createConstraint
Rule 40    createTable -> createUnique
Rule 41    createTable -> createPrimary
Rule 42    createTable -> createForeign
Rule 43    createColumns -> colOptionsList
Rule 44    createColumns -> <empty>
Rule 45    createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 46    createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER
Rule 47    createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
Rule 48    createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
Rule 49    constrName -> R_CONSTRAINT ID
Rule 50    constrName -> <empty>
Rule 51    idList -> idList S_COMA ID
Rule 52    idList -> ID
Rule 53    types -> ID
Rule 54    types -> T_SMALLINT
Rule 55    types -> T_INTEGER
Rule 56    types -> T_BIGINT
Rule 57    types -> T_REAL
Rule 58    types -> T_DOUBLE T_PRECISION
Rule 59    types -> T_MONEY
Rule 60    types -> T_TEXT
Rule 61    types -> T_BOOLEAN
Rule 62    types -> R_TIMESTAMP
Rule 63    types -> T_DATE
Rule 64    types -> T_TIME
Rule 65    types -> T_DECIMAL optParams
Rule 66    types -> T_NUMERIC optParams
Rule 67    types -> T_VARCHAR optParams
Rule 68    types -> T_CHARACTER optParams
Rule 69    types -> T_CHAR optParams
Rule 70    types -> T_CHARACTER T_VARYING optParams
Rule 71    types -> R_INTERVAL intervalFields
Rule 72    intervalFields -> R_YEAR
Rule 73    intervalFields -> R_MONTH
Rule 74    intervalFields -> R_DAY
Rule 75    intervalFields -> R_HOUR
Rule 76    intervalFields -> R_MINUTE
Rule 77    intervalFields -> R_SECOND
Rule 78    intervalFields -> <empty>
Rule 79    optParams -> S_PARIZQ literalList S_PARDER
Rule 80    optParams -> <empty>
Rule 81    colOptionsList -> colOptionsList colOptions
Rule 82    colOptionsList -> colOptions
Rule 83    colOptions -> defaultVal
Rule 84    colOptions -> nullOpt
Rule 85    colOptions -> constraintOpt
Rule 86    colOptions -> primaryOpt
Rule 87    colOptions -> referencesOpt
Rule 88    defaultVal -> R_DEFAULT literal
Rule 89    nullOpt -> R_NOT R_NULL
Rule 90    nullOpt -> R_NULL
Rule 91    constraintOpt -> constrName R_UNIQUE
Rule 92    constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 93    primaryOpt -> R_PRIMARY R_KEY
Rule 94    referencesOpt -> R_REFERENCES ID
Rule 95    expresion -> datatype
Rule 96    expresion -> expBool
Rule 97    expresion -> S_PARIZQ selectStmt S_PARDER
Rule 98    funcCall -> ID S_PARIZQ paramsList S_PARDER
Rule 99    funcCall -> ID S_PARIZQ S_PARDER
Rule 100   funcCall -> R_NOW S_PARIZQ S_PARDER
Rule 101   funcCall -> R_COUNT S_PARIZQ datatype S_PARDER
Rule 102   funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
Rule 103   funcCall -> R_SUM S_PARIZQ datatype S_PARDER
Rule 104   funcCall -> R_PROM S_PARIZQ datatype S_PARDER
Rule 105   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
Rule 106   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
Rule 107   timeStamp -> R_TIMESTAMP STRING
Rule 108   timeStamp -> R_INTERVAL STRING
Rule 109   optsExtract -> R_YEAR
Rule 110   optsExtract -> R_MONTH
Rule 111   optsExtract -> R_DAY
Rule 112   optsExtract -> R_HOUR
Rule 113   optsExtract -> R_MINUTE
Rule 114   optsExtract -> R_SECOND
Rule 115   datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
Rule 116   dateSource -> R_TIMESTAMP STRING
Rule 117   dateSource -> T_DATE STRING
Rule 118   dateSource -> T_TIME STRING
Rule 119   dateSource -> R_INTERVAL STRING
Rule 120   dateSource -> R_NOW S_PARIZQ S_PARDER
Rule 121   current -> R_CURRENT_DATE
Rule 122   current -> R_CURRENT_TIME
Rule 123   current -> timeStamp
Rule 124   literalList -> literalList S_COMA literal
Rule 125   literalList -> literal
Rule 126   literal -> INTEGER
Rule 127   literal -> STRING
Rule 128   literal -> DECIMAL
Rule 129   literal -> CHARACTER
Rule 130   literal -> R_TRUE
Rule 131   literal -> R_FALSE
Rule 132   literal -> R_NULL
Rule 133   paramsList -> paramsList S_COMA datatype
Rule 134   paramsList -> datatype
Rule 135   datatype -> datatype O_SUMA datatype
Rule 136   datatype -> datatype O_RESTA datatype
Rule 137   datatype -> datatype O_PRODUCTO datatype
Rule 138   datatype -> datatype O_DIVISION datatype
Rule 139   datatype -> datatype O_EXPONENTE datatype
Rule 140   datatype -> datatype O_MODULAR datatype
Rule 141   datatype -> datatype OC_CONCATENAR datatype
Rule 142   datatype -> R_CASE caseList optElse R_END
Rule 143   caseList -> caseList caseWhen
Rule 144   caseList -> caseWhen
Rule 145   caseWhen -> R_WHEN expBool R_THEN literal
Rule 146   optElse -> R_ELSE literal
Rule 147   optElse -> <empty>
Rule 148   datatype -> O_RESTA datatype
Rule 149   datatype -> O_SUMA datatype
Rule 150   datatype -> columnName
Rule 151   datatype -> literal
Rule 152   datatype -> funcCall
Rule 153   datatype -> extract
Rule 154   datatype -> datePart
Rule 155   datatype -> current
Rule 156   datatype -> S_PARIZQ datatype S_PARDER
Rule 157   expComp -> datatype OL_MENORQUE datatype
Rule 158   expComp -> datatype OL_MAYORQUE datatype
Rule 159   expComp -> datatype OL_MAYORIGUALQUE datatype
Rule 160   expComp -> datatype OL_MENORIGUALQUE datatype
Rule 161   expComp -> datatype S_IGUAL datatype
Rule 162   expComp -> datatype OL_DISTINTODE datatype
Rule 163   expComp -> datatype R_IS R_DISTINCT R_FROM datatype
Rule 164   expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype
Rule 165   expComp -> datatype R_BETWEEN datatype R_AND datatype
Rule 166   expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype
Rule 167   expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
Rule 168   expComp -> datatype R_ISNULL
Rule 169   expComp -> datatype R_NOTNULL
Rule 170   expComp -> datatype R_IS R_NULL
Rule 171   expComp -> datatype R_IS R_TRUE
Rule 172   expComp -> datatype R_IS R_FALSE
Rule 173   expComp -> datatype R_IS R_UNKNOWN
Rule 174   expComp -> datatype R_IS R_NOT R_NULL
Rule 175   expComp -> datatype R_IS R_NOT R_TRUE
Rule 176   expComp -> datatype R_IS R_NOT R_FALSE
Rule 177   expComp -> datatype R_IS R_NOT R_UNKNOWN
Rule 178   expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 179   expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 180   expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 181   expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 182   expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
Rule 183   expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
Rule 184   expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 185   expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 186   expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 187   expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 188   expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 189   expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 190   expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 191   expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 192   expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 193   expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 194   expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 195   expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 196   expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 197   expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 198   expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 199   expSubq -> stringExp R_LIKE STRING
Rule 200   stringExp -> STRING
Rule 201   stringExp -> columnName
Rule 202   subqValues -> R_ALL
Rule 203   subqValues -> R_ANY
Rule 204   subqValues -> R_SOME
Rule 205   boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER
Rule 206   boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER
Rule 207   boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
Rule 208   boolean -> expComp
Rule 209   boolean -> expSubq
Rule 210   expBool -> expBool R_AND expBool
Rule 211   expBool -> expBool R_OR expBool
Rule 212   expBool -> R_NOT expBool
Rule 213   expBool -> S_PARIZQ expBool S_PARDER
Rule 214   expBool -> expBool optBoolPredicate
Rule 215   expBool -> boolean
Rule 216   optBoolPredicate -> R_IS R_TRUE
Rule 217   optBoolPredicate -> R_IS R_FALSE
Rule 218   optBoolPredicate -> R_IS R_UNKNOWN
Rule 219   optBoolPredicate -> R_IS R_NOT R_TRUE
Rule 220   optBoolPredicate -> R_IS R_NOT R_FALSE
Rule 221   optBoolPredicate -> R_IS R_NOT R_UNKNOWN
Rule 222   columnName -> ID
Rule 223   columnName -> ID S_PUNTO ID
Rule 224   booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral
Rule 225   booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral
Rule 226   booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral
Rule 227   booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral
Rule 228   booleanCheck -> idOrLiteral S_IGUAL idOrLiteral
Rule 229   booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral
Rule 230   booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
Rule 231   booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
Rule 232   idOrLiteral -> ID
Rule 233   idOrLiteral -> INTEGER
Rule 234   idOrLiteral -> STRING
Rule 235   idOrLiteral -> DECIMAL
Rule 236   idOrLiteral -> CHARACTER
Rule 237   idOrLiteral -> R_TRUE
Rule 238   idOrLiteral -> R_FALSE
Rule 239   alterStmt -> R_ALTER R_DATABASE idOrString alterDb
Rule 240   alterStmt -> R_ALTER R_TABLE idOrString alterTableList
Rule 241   alterDb -> R_RENAME R_TO idOrString
Rule 242   alterDb -> R_OWNER R_TO ownerOPts
Rule 243   ownerOPts -> idOrString
Rule 244   ownerOPts -> R_CURRENT_USER
Rule 245   ownerOPts -> R_SESSION_USER
Rule 246   alterTableList -> alterTableList S_COMA alterTable
Rule 247   alterTableList -> alterTable
Rule 248   alterTable -> R_ADD alterAdd
Rule 249   alterTable -> R_ALTER alterAlter
Rule 250   alterTable -> R_DROP alterDrop
Rule 251   alterTable -> R_RENAME alterRename
Rule 252   alterAdd -> R_COLUMN ID types
Rule 253   alterAdd -> createConstraint
Rule 254   alterAdd -> createPrimary
Rule 255   alterAdd -> createForeign
Rule 256   alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER
Rule 257   alterAlter -> R_COLUMN ID R_SET nullOpt
Rule 258   alterAlter -> R_COLUMN ID R_SET defaultVal
Rule 259   alterAlter -> R_COLUMN ID R_TYPE types
Rule 260   alterDrop -> R_CONSTRAINT ID
Rule 261   alterDrop -> R_COLUMN ID
Rule 262   alterRename -> R_COLUMN ID R_TO ID
Rule 263   dropStmt -> R_DROP R_TABLE ifExists idOrString
Rule 264   dropStmt -> R_DROP R_DATABASE ifExists idOrString
Rule 265   ifExists -> R_IF R_EXISTS
Rule 266   ifExists -> <empty>
Rule 267   selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
Rule 268   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl
Rule 269   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
Rule 270   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 271   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
Rule 272   selectStmt -> selectStmt R_UNION allOpt selectStmt
Rule 273   selectStmt -> selectStmt R_INTERSECT allOpt selectStmt
Rule 274   selectStmt -> selectStmt R_EXCEPT allOpt selectStmt
Rule 275   selectStmt -> S_PARIZQ selectStmt S_PARDER
Rule 276   fromCl -> R_FROM tableExp
Rule 277   selectStmt -> R_SELECT selectParams
Rule 278   allOpt -> R_ALL
Rule 279   allOpt -> <empty>
Rule 280   selectParams -> O_PRODUCTO
Rule 281   selectParams -> selectList
Rule 282   selectList -> selectList S_COMA selectListParams optAlias
Rule 283   selectList -> selectListParams optAlias
Rule 284   selectListParams -> expresion
Rule 285   selectListParams -> ID S_PUNTO O_PRODUCTO
Rule 286   optAlias -> R_AS idOrString
Rule 287   optAlias -> idOrString
Rule 288   optAlias -> <empty>
Rule 289   tableExp -> tableExp S_COMA fromBody
Rule 290   tableExp -> fromBody
Rule 291   fromBody -> ID optAlias
Rule 292   fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString
Rule 293   joinList -> joinList2
Rule 294   joinList2 -> joinList2 joinCl
Rule 295   joinList2 -> joinCl
Rule 296   joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool
Rule 297   joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
Rule 298   joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias
Rule 299   nameList -> nameList S_COMA columnName
Rule 300   nameList -> columnName
Rule 301   joinOpt -> R_INNER
Rule 302   joinOpt -> R_LEFT
Rule 303   joinOpt -> R_LEFT R_OUTER
Rule 304   joinOpt -> R_RIGHT
Rule 305   joinOpt -> R_RIGHT R_OUTER
Rule 306   joinOpt -> R_FULL
Rule 307   joinOpt -> R_FULL R_OUTER
Rule 308   whereCl -> R_WHERE expBool
Rule 309   whereCl -> <empty>
Rule 310   groupByCl -> R_GROUP R_BY groupList havingCl
Rule 311   groupByCl -> <empty>
Rule 312   groupList -> groupList S_COMA columnName
Rule 313   groupList -> groupList S_COMA INTEGER
Rule 314   groupList -> columnName
Rule 315   groupList -> INTEGER
Rule 316   havingCl -> R_HAVING expBool
Rule 317   havingCl -> <empty>
Rule 318   orderByCl -> R_ORDER R_BY orderList
Rule 319   orderList -> orderList S_COMA orderByElem
Rule 320   orderList -> orderByElem
Rule 321   orderByElem -> columnName orderOpts orderNull
Rule 322   orderByElem -> INTEGER orderOpts orderNull
Rule 323   orderOpts -> R_ASC
Rule 324   orderOpts -> R_DESC
Rule 325   orderOpts -> <empty>
Rule 326   orderNull -> R_NULL R_FIRST
Rule 327   orderNull -> R_NULL R_LAST
Rule 328   orderNull -> <empty>
Rule 329   limitCl -> R_LIMIT INTEGER offsetLimit
Rule 330   limitCl -> R_LIMIT R_ALL offsetLimit
Rule 331   limitCl -> <empty>
Rule 332   offsetLimit -> R_OFFSET INTEGER
Rule 333   offsetLimit -> <empty>
Rule 334   insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
Rule 335   paramsColumn -> S_PARIZQ idList S_PARDER
Rule 336   paramsColumn -> <empty>
Rule 337   updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl
Rule 338   updateCols -> updateCols S_COMA updateVals
Rule 339   updateCols -> updateVals
Rule 340   updateVals -> ID S_IGUAL updateExp
Rule 341   updateExp -> datatype
Rule 342   updateExp -> R_DEFAULT
Rule 343   deleteStmt -> R_DELETE fromCl whereCl
Rule 344   truncateStmt -> R_TRUNCATE tableOpt ID
Rule 345   tableOpt -> R_TABLE
Rule 346   tableOpt -> <empty>
Rule 347   showStmt -> R_SHOW R_DATABASES likeOpt
Rule 348   likeOpt -> R_LIKE STRING
Rule 349   likeOpt -> <empty>
Rule 350   useStmt -> R_USE ID

Terminals, with rules where they appear

CHARACTER            : 16 129 236
COMMENT              : 
DECIMAL              : 128 235
ID                   : 14 23 26 28 30 38 48 49 51 52 53 94 98 99 222 223 223 232 252 256 257 258 259 260 261 262 262 285 291 334 340 344 350
INTEGER              : 33 34 126 233 313 315 322 329 332
OC_AND               : 
OC_CONCATENAR        : 141
OC_NOT               : 
OC_OR                : 
OC_SHIFTL            : 
OC_SHIFTR            : 
OC_XOR               : 
OL_DISTINTODE        : 162 183 229
OL_ESIGUAL           : 182
OL_MAYORIGUALQUE     : 159 180 226
OL_MAYORQUE          : 158 179 225
OL_MENORIGUALQUE     : 160 181 227
OL_MENORQUE          : 157 178 224
O_DIVISION           : 138
O_EXPONENTE          : 139
O_MODULAR            : 140
O_PRODUCTO           : 102 137 280 285
O_RESTA              : 136 148
O_SUMA               : 135 149
R_ADD                : 248
R_ALL                : 202 278 330
R_ALTER              : 239 240 249
R_AND                : 165 166 167 184 185 186 210
R_ANY                : 203
R_AS                 : 23 286 292
R_ASC                : 323
R_BETWEEN            : 165 166 167 184 185 186
R_BY                 : 310 318
R_CASE               : 142
R_CHECK              : 45 92
R_COLUMN             : 252 257 258 259 261 262
R_CONSTRAINT         : 49 260
R_COUNT              : 101 102
R_CREATE             : 17
R_CURRENT_DATE       : 121
R_CURRENT_TIME       : 122
R_CURRENT_USER       : 244
R_DATABASE           : 20 239 264
R_DATABASES          : 347
R_DATE_PART          : 115
R_DAY                : 74 111
R_DEFAULT            : 88 342
R_DELETE             : 343
R_DESC               : 324
R_DISTINCT           : 163 164 187 188 230 231 267
R_DROP               : 250 263 264
R_ELSE               : 146
R_END                : 142
R_ENUM               : 23
R_EXCEPT             : 274
R_EXISTS             : 24 205 265
R_EXTRACT            : 105 106
R_FALSE              : 131 172 176 195 196 217 220 238
R_FIRST              : 326
R_FOREIGN            : 48
R_FROM               : 105 106 163 164 187 188 230 231 276
R_FULL               : 306 307
R_GROUP              : 310
R_HAVING             : 316
R_HOUR               : 75 112
R_IF                 : 24 265
R_IN                 : 206 207
R_INHERITS           : 26
R_INNER              : 301
R_INSERT             : 334
R_INTERSECT          : 273
R_INTERVAL           : 71 108 119
R_INTO               : 334
R_IS                 : 163 164 170 171 172 173 174 175 176 177 187 188 189 190 193 194 195 196 197 198 216 217 218 219 220 221 230 231
R_ISNULL             : 168 191
R_JOIN               : 296 297 298
R_KEY                : 47 48 93
R_LAST               : 327
R_LEFT               : 302 303
R_LIKE               : 199 348
R_LIMIT              : 329 330
R_MINUTE             : 76 113
R_MODE               : 33 34
R_MONTH              : 73 110
R_NATURAL            : 298
R_NOT                : 24 89 164 166 174 175 176 177 185 188 190 194 196 198 207 212 219 220 221 231
R_NOTNULL            : 169 192
R_NOW                : 100 120
R_NULL               : 89 90 132 170 174 189 190 326 327
R_OFFSET             : 332
R_ON                 : 296
R_OR                 : 21 211
R_ORDER              : 318
R_OUTER              : 303 305 307
R_OWNER              : 28 29 30 31 242
R_PRIMARY            : 47 93
R_PROM               : 104
R_REFERENCES         : 48 94
R_RENAME             : 241 251
R_REPLACE            : 21
R_RIGHT              : 304 305
R_SECOND             : 77 114
R_SELECT             : 267 268 269 270 271 277
R_SESSION_USER       : 245
R_SET                : 257 258 337
R_SHOW               : 347
R_SOME               : 204
R_SUM                : 103
R_SYMMETRIC          : 167 186
R_TABLE              : 19 240 263 345
R_THEN               : 145
R_TIMESTAMP          : 62 107 116
R_TO                 : 241 242 262
R_TRUE               : 130 171 175 193 194 216 219 237
R_TRUNCATE           : 344
R_TYPE               : 23 259
R_UNION              : 272
R_UNIQUE             : 46 91 256
R_UNKNOWN            : 173 177 197 198 218 221
R_UPDATE             : 337
R_USE                : 350
R_USING              : 297
R_VALUES             : 334
R_WHEN               : 145
R_WHERE              : 308
R_YEAR               : 72 109
STRING               : 15 29 31 107 108 115 116 117 118 119 127 199 200 234 348
S_COMA               : 36 51 115 124 133 246 282 289 299 312 313 319 338
S_IGUAL              : 30 31 34 161 228 340
S_PARDER             : 19 23 26 45 46 47 48 48 79 92 97 98 99 100 101 102 103 104 105 106 115 120 156 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 205 206 207 213 256 275 292 297 334 335
S_PARIZQ             : 19 23 26 45 46 47 48 48 79 92 97 98 99 100 101 102 103 104 105 106 115 120 156 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 205 206 207 213 256 275 292 297 334 335
S_PUNTO              : 223 285
S_PUNTOCOMA          : 4 5 6 7 8 9 10 11 12 13
T_BIGINT             : 56
T_BOOLEAN            : 61
T_CHAR               : 69
T_CHARACTER          : 68 70
T_DATE               : 63 117
T_DECIMAL            : 65
T_DOUBLE             : 58
T_INTEGER            : 55
T_MONEY              : 59
T_NUMERIC            : 66
T_PRECISION          : 58
T_REAL               : 57
T_SMALLINT           : 54
T_TEXT               : 60
T_TIME               : 64 118
T_VARCHAR            : 67
T_VARYING            : 70
error                : 

Nonterminals, with rules where they appear

allOpt               : 272 273 274
alterAdd             : 248
alterAlter           : 249
alterDb              : 239
alterDrop            : 250
alterRename          : 251
alterStmt            : 6
alterTable           : 246 247
alterTableList       : 240 246
boolean              : 215
booleanCheck         : 45 92
caseList             : 142 143
caseWhen             : 143 144
colOptions           : 81 82
colOptionsList       : 43 81
columnName           : 106 150 201 296 297 298 299 300 312 314 321
constrName           : 45 48 91 92 256
constraintOpt        : 85
createBody           : 17
createColumns        : 38
createConstraint     : 39 253
createForeign        : 42 255
createMode           : 20
createOpts           : 18
createOwner          : 20
createPrimary        : 41 254
createStmt           : 4
createTable          : 36 37
createTableList      : 19 36
createUnique         : 40
current              : 155
datatype             : 95 101 103 104 133 134 135 135 136 136 137 137 138 138 139 139 140 140 141 141 148 149 156 157 157 158 158 159 159 160 160 161 161 162 162 163 163 164 164 165 165 165 166 166 166 167 167 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 184 184 185 185 185 186 186 186 187 187 188 188 189 190 191 192 193 194 195 196 197 198 206 207 341
datePart             : 154
dateSource           : 115
defaultVal           : 83 258
deleteStmt           : 10
dropStmt             : 7
expBool              : 96 145 210 210 211 211 212 213 214 296 308 316
expComp              : 208
expSubq              : 209
expresion            : 284
extract              : 153
fromBody             : 289 290 337
fromCl               : 267 268 269 270 271 343
funcCall             : 152
groupByCl            : 267 268 269 270 271
groupList            : 310 312 313
havingCl             : 310
idList               : 46 47 48 48 51 335
idOrLiteral          : 224 224 225 225 226 226 227 227 228 228 229 229 230 230 231 231
idOrString           : 19 20 239 240 241 243 263 264 286 287 292
ifExists             : 263 264
ifNotExists          : 19 20 23
inheritsOpt          : 19
init                 : 0
insertStmt           : 8
intervalFields       : 71
joinCl               : 294 295
joinList             : 269 271
joinList2            : 293 294
joinOpt              : 296 297 298
likeOpt              : 347
limitCl              : 267 268 269 270 271
literal              : 88 124 125 145 146 151
literalList          : 79 124
nameList             : 297 299
nullOpt              : 84 257
offsetLimit          : 329 330
optAlias             : 282 283 291 296 297 298
optBoolPredicate     : 214
optElse              : 142
optParams            : 65 66 67 68 69 70
optsExtract          : 105 106
orReplace            : 20
orderByCl            : 269 270
orderByElem          : 319 320
orderList            : 318 319
orderNull            : 321 322
orderOpts            : 321 322
ownerOPts            : 242
paramsColumn         : 334
paramsList           : 23 98 133 334
primaryOpt           : 86
referencesOpt        : 87
selectList           : 281 282
selectListParams     : 282 283
selectParams         : 267 268 269 270 271 277
selectStmt           : 13 97 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 205 206 207 272 272 273 273 274 274 275 292
showStmt             : 5
stmt                 : 2 3
stmtList             : 1 2
stringExp            : 199
subqValues           : 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198
tableExp             : 276 289
tableOpt             : 344
timeStamp            : 105 123
truncateStmt         : 11
types                : 38 252 259
updateCols           : 337 338
updateExp            : 340
updateStmt           : 9
updateVals           : 338 339
useStmt              : 12
whereCl              : 267 268 269 270 271 337 343

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . stmtList
    (2) stmtList -> . stmtList stmt
    (3) stmtList -> . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (17) createStmt -> . R_CREATE createBody
    (347) showStmt -> . R_SHOW R_DATABASES likeOpt
    (239) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (240) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (263) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (264) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (334) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (337) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (343) deleteStmt -> . R_DELETE fromCl whereCl
    (344) truncateStmt -> . R_TRUNCATE tableOpt ID
    (350) useStmt -> . R_USE ID
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_CREATE        shift and go to state 14
    R_SHOW          shift and go to state 15
    R_ALTER         shift and go to state 16
    R_DROP          shift and go to state 17
    R_INSERT        shift and go to state 18
    R_UPDATE        shift and go to state 20
    R_DELETE        shift and go to state 21
    R_TRUNCATE      shift and go to state 22
    R_USE           shift and go to state 23
    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    init                           shift and go to state 1
    stmtList                       shift and go to state 2
    stmt                           shift and go to state 3
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13

state 1

    (0) S' -> init .



state 2

    (1) init -> stmtList .
    (2) stmtList -> stmtList . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (17) createStmt -> . R_CREATE createBody
    (347) showStmt -> . R_SHOW R_DATABASES likeOpt
    (239) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (240) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (263) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (264) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (334) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (337) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (343) deleteStmt -> . R_DELETE fromCl whereCl
    (344) truncateStmt -> . R_TRUNCATE tableOpt ID
    (350) useStmt -> . R_USE ID
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    $end            reduce using rule 1 (init -> stmtList .)
    R_CREATE        shift and go to state 14
    R_SHOW          shift and go to state 15
    R_ALTER         shift and go to state 16
    R_DROP          shift and go to state 17
    R_INSERT        shift and go to state 18
    R_UPDATE        shift and go to state 20
    R_DELETE        shift and go to state 21
    R_TRUNCATE      shift and go to state 22
    R_USE           shift and go to state 23
    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    stmt                           shift and go to state 25
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13

state 3

    (3) stmtList -> stmt .

    R_CREATE        reduce using rule 3 (stmtList -> stmt .)
    R_SHOW          reduce using rule 3 (stmtList -> stmt .)
    R_ALTER         reduce using rule 3 (stmtList -> stmt .)
    R_DROP          reduce using rule 3 (stmtList -> stmt .)
    R_INSERT        reduce using rule 3 (stmtList -> stmt .)
    R_UPDATE        reduce using rule 3 (stmtList -> stmt .)
    R_DELETE        reduce using rule 3 (stmtList -> stmt .)
    R_TRUNCATE      reduce using rule 3 (stmtList -> stmt .)
    R_USE           reduce using rule 3 (stmtList -> stmt .)
    R_SELECT        reduce using rule 3 (stmtList -> stmt .)
    S_PARIZQ        reduce using rule 3 (stmtList -> stmt .)
    $end            reduce using rule 3 (stmtList -> stmt .)


state 4

    (4) stmt -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 26


state 5

    (5) stmt -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 27


state 6

    (6) stmt -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 28


state 7

    (7) stmt -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 29


state 8

    (8) stmt -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 30


state 9

    (9) stmt -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 31


state 10

    (10) stmt -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 32


state 11

    (11) stmt -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 33


state 12

    (12) stmt -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 34


state 13

    (13) stmt -> selectStmt . S_PUNTOCOMA
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 35
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 14

    (17) createStmt -> R_CREATE . createBody
    (18) createBody -> . createOpts
    (19) createOpts -> . R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (20) createOpts -> . orReplace R_DATABASE ifNotExists idOrString createOwner createMode
    (23) createOpts -> . R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (21) orReplace -> . R_OR R_REPLACE
    (22) orReplace -> .

    R_TABLE         shift and go to state 41
    R_TYPE          shift and go to state 43
    R_OR            shift and go to state 44
    R_DATABASE      reduce using rule 22 (orReplace -> .)

    createBody                     shift and go to state 39
    createOpts                     shift and go to state 40
    orReplace                      shift and go to state 42

state 15

    (347) showStmt -> R_SHOW . R_DATABASES likeOpt

    R_DATABASES     shift and go to state 45


state 16

    (239) alterStmt -> R_ALTER . R_DATABASE idOrString alterDb
    (240) alterStmt -> R_ALTER . R_TABLE idOrString alterTableList

    R_DATABASE      shift and go to state 46
    R_TABLE         shift and go to state 47


state 17

    (263) dropStmt -> R_DROP . R_TABLE ifExists idOrString
    (264) dropStmt -> R_DROP . R_DATABASE ifExists idOrString

    R_TABLE         shift and go to state 48
    R_DATABASE      shift and go to state 49


state 18

    (334) insertStmt -> R_INSERT . R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    R_INTO          shift and go to state 50


state 19

    (275) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 51

state 20

    (337) updateStmt -> R_UPDATE . fromBody R_SET updateCols whereCl
    (291) fromBody -> . ID optAlias
    (292) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 53
    S_PARIZQ        shift and go to state 54

    fromBody                       shift and go to state 52

state 21

    (343) deleteStmt -> R_DELETE . fromCl whereCl
    (276) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 56

    fromCl                         shift and go to state 55

state 22

    (344) truncateStmt -> R_TRUNCATE . tableOpt ID
    (345) tableOpt -> . R_TABLE
    (346) tableOpt -> .

    R_TABLE         shift and go to state 58
    ID              reduce using rule 346 (tableOpt -> .)

    tableOpt                       shift and go to state 57

state 23

    (350) useStmt -> R_USE . ID

    ID              shift and go to state 59


state 24

    (267) selectStmt -> R_SELECT . R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl limitCl
    (277) selectStmt -> R_SELECT . selectParams
    (280) selectParams -> . O_PRODUCTO
    (281) selectParams -> . selectList
    (282) selectList -> . selectList S_COMA selectListParams optAlias
    (283) selectList -> . selectListParams optAlias
    (284) selectListParams -> . expresion
    (285) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (95) expresion -> . datatype
    (96) expresion -> . expBool
    (97) expresion -> . S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName

    R_DISTINCT      shift and go to state 60
    O_PRODUCTO      shift and go to state 62
    ID              shift and go to state 66
    S_PARIZQ        shift and go to state 69
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    R_NOT           shift and go to state 79
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_EXISTS        shift and go to state 97
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    selectParams                   shift and go to state 61
    selectList                     shift and go to state 63
    selectListParams               shift and go to state 64
    expresion                      shift and go to state 65
    datatype                       shift and go to state 67
    expBool                        shift and go to state 68
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    boolean                        shift and go to state 80
    timeStamp                      shift and go to state 93
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    stringExp                      shift and go to state 102

state 25

    (2) stmtList -> stmtList stmt .

    R_CREATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SHOW          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_ALTER         reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DROP          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_INSERT        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_UPDATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DELETE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_TRUNCATE      reduce using rule 2 (stmtList -> stmtList stmt .)
    R_USE           reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SELECT        reduce using rule 2 (stmtList -> stmtList stmt .)
    S_PARIZQ        reduce using rule 2 (stmtList -> stmtList stmt .)
    $end            reduce using rule 2 (stmtList -> stmtList stmt .)


state 26

    (4) stmt -> createStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    $end            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)


state 27

    (5) stmt -> showStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    $end            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)


state 28

    (6) stmt -> alterStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    $end            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)


state 29

    (7) stmt -> dropStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    $end            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)


state 30

    (8) stmt -> insertStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    $end            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)


state 31

    (9) stmt -> updateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    $end            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)


state 32

    (10) stmt -> deleteStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    $end            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)


state 33

    (11) stmt -> truncateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    $end            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)


state 34

    (12) stmt -> useStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    $end            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)


state 35

    (13) stmt -> selectStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    $end            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)


state 36

    (272) selectStmt -> selectStmt R_UNION . allOpt selectStmt
    (278) allOpt -> . R_ALL
    (279) allOpt -> .

    R_ALL           shift and go to state 104
    R_SELECT        reduce using rule 279 (allOpt -> .)
    S_PARIZQ        reduce using rule 279 (allOpt -> .)

    allOpt                         shift and go to state 103

state 37

    (273) selectStmt -> selectStmt R_INTERSECT . allOpt selectStmt
    (278) allOpt -> . R_ALL
    (279) allOpt -> .

    R_ALL           shift and go to state 104
    R_SELECT        reduce using rule 279 (allOpt -> .)
    S_PARIZQ        reduce using rule 279 (allOpt -> .)

    allOpt                         shift and go to state 105

state 38

    (274) selectStmt -> selectStmt R_EXCEPT . allOpt selectStmt
    (278) allOpt -> . R_ALL
    (279) allOpt -> .

    R_ALL           shift and go to state 104
    R_SELECT        reduce using rule 279 (allOpt -> .)
    S_PARIZQ        reduce using rule 279 (allOpt -> .)

    allOpt                         shift and go to state 106

state 39

    (17) createStmt -> R_CREATE createBody .

    S_PUNTOCOMA     reduce using rule 17 (createStmt -> R_CREATE createBody .)


state 40

    (18) createBody -> createOpts .

    S_PUNTOCOMA     reduce using rule 18 (createBody -> createOpts .)


state 41

    (19) createOpts -> R_TABLE . ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (24) ifNotExists -> . R_IF R_NOT R_EXISTS
    (25) ifNotExists -> .

    R_IF            shift and go to state 108
    ID              reduce using rule 25 (ifNotExists -> .)
    STRING          reduce using rule 25 (ifNotExists -> .)
    CHARACTER       reduce using rule 25 (ifNotExists -> .)

    ifNotExists                    shift and go to state 107

state 42

    (20) createOpts -> orReplace . R_DATABASE ifNotExists idOrString createOwner createMode

    R_DATABASE      shift and go to state 109


state 43

    (23) createOpts -> R_TYPE . ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (24) ifNotExists -> . R_IF R_NOT R_EXISTS
    (25) ifNotExists -> .

    R_IF            shift and go to state 108
    ID              reduce using rule 25 (ifNotExists -> .)

    ifNotExists                    shift and go to state 110

state 44

    (21) orReplace -> R_OR . R_REPLACE

    R_REPLACE       shift and go to state 111


state 45

    (347) showStmt -> R_SHOW R_DATABASES . likeOpt
    (348) likeOpt -> . R_LIKE STRING
    (349) likeOpt -> .

    R_LIKE          shift and go to state 113
    S_PUNTOCOMA     reduce using rule 349 (likeOpt -> .)

    likeOpt                        shift and go to state 112

state 46

    (239) alterStmt -> R_ALTER R_DATABASE . idOrString alterDb
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 114

state 47

    (240) alterStmt -> R_ALTER R_TABLE . idOrString alterTableList
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 118

state 48

    (263) dropStmt -> R_DROP R_TABLE . ifExists idOrString
    (265) ifExists -> . R_IF R_EXISTS
    (266) ifExists -> .

    R_IF            shift and go to state 120
    ID              reduce using rule 266 (ifExists -> .)
    STRING          reduce using rule 266 (ifExists -> .)
    CHARACTER       reduce using rule 266 (ifExists -> .)

    ifExists                       shift and go to state 119

state 49

    (264) dropStmt -> R_DROP R_DATABASE . ifExists idOrString
    (265) ifExists -> . R_IF R_EXISTS
    (266) ifExists -> .

    R_IF            shift and go to state 120
    ID              reduce using rule 266 (ifExists -> .)
    STRING          reduce using rule 266 (ifExists -> .)
    CHARACTER       reduce using rule 266 (ifExists -> .)

    ifExists                       shift and go to state 121

state 50

    (334) insertStmt -> R_INSERT R_INTO . ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 122


state 51

    (275) selectStmt -> S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 123
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 52

    (337) updateStmt -> R_UPDATE fromBody . R_SET updateCols whereCl

    R_SET           shift and go to state 124


state 53

    (291) fromBody -> ID . optAlias
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 126
    R_SET           reduce using rule 288 (optAlias -> .)
    S_COMA          reduce using rule 288 (optAlias -> .)
    R_WHERE         reduce using rule 288 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> .)
    R_NATURAL       reduce using rule 288 (optAlias -> .)
    R_INNER         reduce using rule 288 (optAlias -> .)
    R_LEFT          reduce using rule 288 (optAlias -> .)
    R_RIGHT         reduce using rule 288 (optAlias -> .)
    R_FULL          reduce using rule 288 (optAlias -> .)
    R_GROUP         reduce using rule 288 (optAlias -> .)
    R_LIMIT         reduce using rule 288 (optAlias -> .)
    R_ORDER         reduce using rule 288 (optAlias -> .)
    R_UNION         reduce using rule 288 (optAlias -> .)
    R_INTERSECT     reduce using rule 288 (optAlias -> .)
    R_EXCEPT        reduce using rule 288 (optAlias -> .)
    S_PARDER        reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    optAlias                       shift and go to state 125
    idOrString                     shift and go to state 127

state 54

    (292) fromBody -> S_PARIZQ . selectStmt S_PARDER R_AS idOrString
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 128

state 55

    (343) deleteStmt -> R_DELETE fromCl . whereCl
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .

    R_WHERE         shift and go to state 130
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)

    whereCl                        shift and go to state 129

state 56

    (276) fromCl -> R_FROM . tableExp
    (289) tableExp -> . tableExp S_COMA fromBody
    (290) tableExp -> . fromBody
    (291) fromBody -> . ID optAlias
    (292) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 53
    S_PARIZQ        shift and go to state 54

    tableExp                       shift and go to state 131
    fromBody                       shift and go to state 132

state 57

    (344) truncateStmt -> R_TRUNCATE tableOpt . ID

    ID              shift and go to state 133


state 58

    (345) tableOpt -> R_TABLE .

    ID              reduce using rule 345 (tableOpt -> R_TABLE .)


state 59

    (350) useStmt -> R_USE ID .

    S_PUNTOCOMA     reduce using rule 350 (useStmt -> R_USE ID .)


state 60

    (267) selectStmt -> R_SELECT R_DISTINCT . selectParams fromCl whereCl groupByCl limitCl
    (280) selectParams -> . O_PRODUCTO
    (281) selectParams -> . selectList
    (282) selectList -> . selectList S_COMA selectListParams optAlias
    (283) selectList -> . selectListParams optAlias
    (284) selectListParams -> . expresion
    (285) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (95) expresion -> . datatype
    (96) expresion -> . expBool
    (97) expresion -> . S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName

    O_PRODUCTO      shift and go to state 62
    ID              shift and go to state 66
    S_PARIZQ        shift and go to state 69
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    R_NOT           shift and go to state 79
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_EXISTS        shift and go to state 97
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    selectParams                   shift and go to state 134
    selectList                     shift and go to state 63
    selectListParams               shift and go to state 64
    expresion                      shift and go to state 65
    datatype                       shift and go to state 67
    expBool                        shift and go to state 68
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    boolean                        shift and go to state 80
    timeStamp                      shift and go to state 93
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    stringExp                      shift and go to state 102

state 61

    (268) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl limitCl
    (269) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl limitCl
    (277) selectStmt -> R_SELECT selectParams .
    (276) fromCl -> . R_FROM tableExp

    S_PUNTOCOMA     reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    R_UNION         reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    R_INTERSECT     reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    R_EXCEPT        reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    S_PARDER        reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    R_FROM          shift and go to state 56

    fromCl                         shift and go to state 135

state 62

    (280) selectParams -> O_PRODUCTO .

    R_FROM          reduce using rule 280 (selectParams -> O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 280 (selectParams -> O_PRODUCTO .)
    R_UNION         reduce using rule 280 (selectParams -> O_PRODUCTO .)
    R_INTERSECT     reduce using rule 280 (selectParams -> O_PRODUCTO .)
    R_EXCEPT        reduce using rule 280 (selectParams -> O_PRODUCTO .)
    S_PARDER        reduce using rule 280 (selectParams -> O_PRODUCTO .)


state 63

    (281) selectParams -> selectList .
    (282) selectList -> selectList . S_COMA selectListParams optAlias

    R_FROM          reduce using rule 281 (selectParams -> selectList .)
    S_PUNTOCOMA     reduce using rule 281 (selectParams -> selectList .)
    R_UNION         reduce using rule 281 (selectParams -> selectList .)
    R_INTERSECT     reduce using rule 281 (selectParams -> selectList .)
    R_EXCEPT        reduce using rule 281 (selectParams -> selectList .)
    S_PARDER        reduce using rule 281 (selectParams -> selectList .)
    S_COMA          shift and go to state 136


state 64

    (283) selectList -> selectListParams . optAlias
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 126
    S_COMA          reduce using rule 288 (optAlias -> .)
    R_FROM          reduce using rule 288 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> .)
    R_UNION         reduce using rule 288 (optAlias -> .)
    R_INTERSECT     reduce using rule 288 (optAlias -> .)
    R_EXCEPT        reduce using rule 288 (optAlias -> .)
    S_PARDER        reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    optAlias                       shift and go to state 137
    idOrString                     shift and go to state 127

state 65

    (284) selectListParams -> expresion .

    R_AS            reduce using rule 284 (selectListParams -> expresion .)
    ID              reduce using rule 284 (selectListParams -> expresion .)
    STRING          reduce using rule 284 (selectListParams -> expresion .)
    CHARACTER       reduce using rule 284 (selectListParams -> expresion .)
    S_COMA          reduce using rule 284 (selectListParams -> expresion .)
    R_FROM          reduce using rule 284 (selectListParams -> expresion .)
    S_PUNTOCOMA     reduce using rule 284 (selectListParams -> expresion .)
    R_UNION         reduce using rule 284 (selectListParams -> expresion .)
    R_INTERSECT     reduce using rule 284 (selectListParams -> expresion .)
    R_EXCEPT        reduce using rule 284 (selectListParams -> expresion .)
    S_PARDER        reduce using rule 284 (selectListParams -> expresion .)


state 66

    (285) selectListParams -> ID . S_PUNTO O_PRODUCTO
    (222) columnName -> ID .
    (223) columnName -> ID . S_PUNTO ID
    (98) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (99) funcCall -> ID . S_PARIZQ S_PARDER

    S_PUNTO         shift and go to state 138
    O_SUMA          reduce using rule 222 (columnName -> ID .)
    O_RESTA         reduce using rule 222 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 222 (columnName -> ID .)
    O_DIVISION      reduce using rule 222 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 222 (columnName -> ID .)
    O_MODULAR       reduce using rule 222 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 222 (columnName -> ID .)
    R_IN            reduce using rule 222 (columnName -> ID .)
    R_NOT           reduce using rule 222 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 222 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 222 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 222 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 222 (columnName -> ID .)
    S_IGUAL         reduce using rule 222 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 222 (columnName -> ID .)
    R_IS            reduce using rule 222 (columnName -> ID .)
    R_BETWEEN       reduce using rule 222 (columnName -> ID .)
    R_ISNULL        reduce using rule 222 (columnName -> ID .)
    R_NOTNULL       reduce using rule 222 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 222 (columnName -> ID .)
    R_AS            reduce using rule 222 (columnName -> ID .)
    ID              reduce using rule 222 (columnName -> ID .)
    STRING          reduce using rule 222 (columnName -> ID .)
    CHARACTER       reduce using rule 222 (columnName -> ID .)
    S_COMA          reduce using rule 222 (columnName -> ID .)
    R_FROM          reduce using rule 222 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 222 (columnName -> ID .)
    R_UNION         reduce using rule 222 (columnName -> ID .)
    R_INTERSECT     reduce using rule 222 (columnName -> ID .)
    R_EXCEPT        reduce using rule 222 (columnName -> ID .)
    S_PARDER        reduce using rule 222 (columnName -> ID .)
    R_LIKE          reduce using rule 222 (columnName -> ID .)
    S_PARIZQ        shift and go to state 139


state 67

    (95) expresion -> datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype
    (206) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (157) expComp -> datatype . OL_MENORQUE datatype
    (158) expComp -> datatype . OL_MAYORQUE datatype
    (159) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (160) expComp -> datatype . OL_MENORIGUALQUE datatype
    (161) expComp -> datatype . S_IGUAL datatype
    (162) expComp -> datatype . OL_DISTINTODE datatype
    (163) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (166) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> datatype . R_ISNULL
    (169) expComp -> datatype . R_NOTNULL
    (170) expComp -> datatype . R_IS R_NULL
    (171) expComp -> datatype . R_IS R_TRUE
    (172) expComp -> datatype . R_IS R_FALSE
    (173) expComp -> datatype . R_IS R_UNKNOWN
    (174) expComp -> datatype . R_IS R_NOT R_NULL
    (175) expComp -> datatype . R_IS R_NOT R_TRUE
    (176) expComp -> datatype . R_IS R_NOT R_FALSE
    (177) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (178) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_AS            reduce using rule 95 (expresion -> datatype .)
    ID              reduce using rule 95 (expresion -> datatype .)
    STRING          reduce using rule 95 (expresion -> datatype .)
    CHARACTER       reduce using rule 95 (expresion -> datatype .)
    S_COMA          reduce using rule 95 (expresion -> datatype .)
    R_FROM          reduce using rule 95 (expresion -> datatype .)
    S_PUNTOCOMA     reduce using rule 95 (expresion -> datatype .)
    R_UNION         reduce using rule 95 (expresion -> datatype .)
    R_INTERSECT     reduce using rule 95 (expresion -> datatype .)
    R_EXCEPT        reduce using rule 95 (expresion -> datatype .)
    S_PARDER        reduce using rule 95 (expresion -> datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146
    R_IN            shift and go to state 147
    R_NOT           shift and go to state 148
    OL_MENORQUE     shift and go to state 149
    OL_MAYORQUE     shift and go to state 150
    OL_MAYORIGUALQUE shift and go to state 151
    OL_MENORIGUALQUE shift and go to state 152
    S_IGUAL         shift and go to state 153
    OL_DISTINTODE   shift and go to state 154
    R_IS            shift and go to state 155
    R_BETWEEN       shift and go to state 156
    R_ISNULL        shift and go to state 157
    R_NOTNULL       shift and go to state 158
    OL_ESIGUAL      shift and go to state 159


state 68

    (96) expresion -> expBool .
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 96 (expresion -> expBool .)
    ID              reduce using rule 96 (expresion -> expBool .)
    STRING          reduce using rule 96 (expresion -> expBool .)
    CHARACTER       reduce using rule 96 (expresion -> expBool .)
    S_COMA          reduce using rule 96 (expresion -> expBool .)
    R_FROM          reduce using rule 96 (expresion -> expBool .)
    S_PUNTOCOMA     reduce using rule 96 (expresion -> expBool .)
    R_UNION         reduce using rule 96 (expresion -> expBool .)
    R_INTERSECT     reduce using rule 96 (expresion -> expBool .)
    R_EXCEPT        reduce using rule 96 (expresion -> expBool .)
    S_PARDER        reduce using rule 96 (expresion -> expBool .)
    R_AND           shift and go to state 160
    R_OR            shift and go to state 161
    R_IS            shift and go to state 163

    optBoolPredicate               shift and go to state 162

state 69

    (97) expresion -> S_PARIZQ . selectStmt S_PARDER
    (156) datatype -> S_PARIZQ . datatype S_PARDER
    (213) expBool -> S_PARIZQ . expBool S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 164
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    R_NOT           shift and go to state 79
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_EXISTS        shift and go to state 97
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    selectStmt                     shift and go to state 165
    datatype                       shift and go to state 166
    expBool                        shift and go to state 167
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    boolean                        shift and go to state 80
    timeStamp                      shift and go to state 93
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    stringExp                      shift and go to state 102

state 70

    (149) datatype -> O_SUMA . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 169
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 71

    (148) datatype -> O_RESTA . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 173
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 72

    (142) datatype -> R_CASE . caseList optElse R_END
    (143) caseList -> . caseList caseWhen
    (144) caseList -> . caseWhen
    (145) caseWhen -> . R_WHEN expBool R_THEN literal

    R_WHEN          shift and go to state 176

    caseList                       shift and go to state 174
    caseWhen                       shift and go to state 175

state 73

    (150) datatype -> columnName .
    (201) stringExp -> columnName .

    O_SUMA          reduce using rule 150 (datatype -> columnName .)
    O_RESTA         reduce using rule 150 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 150 (datatype -> columnName .)
    O_DIVISION      reduce using rule 150 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 150 (datatype -> columnName .)
    O_MODULAR       reduce using rule 150 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 150 (datatype -> columnName .)
    R_IN            reduce using rule 150 (datatype -> columnName .)
    R_NOT           reduce using rule 150 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 150 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 150 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 150 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 150 (datatype -> columnName .)
    S_IGUAL         reduce using rule 150 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 150 (datatype -> columnName .)
    R_IS            reduce using rule 150 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 150 (datatype -> columnName .)
    R_ISNULL        reduce using rule 150 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 150 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 150 (datatype -> columnName .)
    R_AS            reduce using rule 150 (datatype -> columnName .)
    ID              reduce using rule 150 (datatype -> columnName .)
    STRING          reduce using rule 150 (datatype -> columnName .)
    CHARACTER       reduce using rule 150 (datatype -> columnName .)
    S_COMA          reduce using rule 150 (datatype -> columnName .)
    R_FROM          reduce using rule 150 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 150 (datatype -> columnName .)
    R_UNION         reduce using rule 150 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 150 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 150 (datatype -> columnName .)
    S_PARDER        reduce using rule 150 (datatype -> columnName .)
    R_LIKE          reduce using rule 201 (stringExp -> columnName .)


state 74

    (151) datatype -> literal .

    O_SUMA          reduce using rule 151 (datatype -> literal .)
    O_RESTA         reduce using rule 151 (datatype -> literal .)
    O_PRODUCTO      reduce using rule 151 (datatype -> literal .)
    O_DIVISION      reduce using rule 151 (datatype -> literal .)
    O_EXPONENTE     reduce using rule 151 (datatype -> literal .)
    O_MODULAR       reduce using rule 151 (datatype -> literal .)
    OC_CONCATENAR   reduce using rule 151 (datatype -> literal .)
    R_IN            reduce using rule 151 (datatype -> literal .)
    R_NOT           reduce using rule 151 (datatype -> literal .)
    OL_MENORQUE     reduce using rule 151 (datatype -> literal .)
    OL_MAYORQUE     reduce using rule 151 (datatype -> literal .)
    OL_MAYORIGUALQUE reduce using rule 151 (datatype -> literal .)
    OL_MENORIGUALQUE reduce using rule 151 (datatype -> literal .)
    S_IGUAL         reduce using rule 151 (datatype -> literal .)
    OL_DISTINTODE   reduce using rule 151 (datatype -> literal .)
    R_IS            reduce using rule 151 (datatype -> literal .)
    R_BETWEEN       reduce using rule 151 (datatype -> literal .)
    R_ISNULL        reduce using rule 151 (datatype -> literal .)
    R_NOTNULL       reduce using rule 151 (datatype -> literal .)
    OL_ESIGUAL      reduce using rule 151 (datatype -> literal .)
    R_AS            reduce using rule 151 (datatype -> literal .)
    ID              reduce using rule 151 (datatype -> literal .)
    STRING          reduce using rule 151 (datatype -> literal .)
    CHARACTER       reduce using rule 151 (datatype -> literal .)
    S_COMA          reduce using rule 151 (datatype -> literal .)
    R_FROM          reduce using rule 151 (datatype -> literal .)
    S_PUNTOCOMA     reduce using rule 151 (datatype -> literal .)
    R_UNION         reduce using rule 151 (datatype -> literal .)
    R_INTERSECT     reduce using rule 151 (datatype -> literal .)
    R_EXCEPT        reduce using rule 151 (datatype -> literal .)
    S_PARDER        reduce using rule 151 (datatype -> literal .)
    R_AND           reduce using rule 151 (datatype -> literal .)
    R_OR            reduce using rule 151 (datatype -> literal .)
    R_GROUP         reduce using rule 151 (datatype -> literal .)
    R_LIMIT         reduce using rule 151 (datatype -> literal .)
    R_ORDER         reduce using rule 151 (datatype -> literal .)
    R_THEN          reduce using rule 151 (datatype -> literal .)
    R_NATURAL       reduce using rule 151 (datatype -> literal .)
    R_INNER         reduce using rule 151 (datatype -> literal .)
    R_LEFT          reduce using rule 151 (datatype -> literal .)
    R_RIGHT         reduce using rule 151 (datatype -> literal .)
    R_FULL          reduce using rule 151 (datatype -> literal .)
    R_WHERE         reduce using rule 151 (datatype -> literal .)
    R_ALL           reduce using rule 151 (datatype -> literal .)
    R_ANY           reduce using rule 151 (datatype -> literal .)
    R_SOME          reduce using rule 151 (datatype -> literal .)


state 75

    (152) datatype -> funcCall .

    O_SUMA          reduce using rule 152 (datatype -> funcCall .)
    O_RESTA         reduce using rule 152 (datatype -> funcCall .)
    O_PRODUCTO      reduce using rule 152 (datatype -> funcCall .)
    O_DIVISION      reduce using rule 152 (datatype -> funcCall .)
    O_EXPONENTE     reduce using rule 152 (datatype -> funcCall .)
    O_MODULAR       reduce using rule 152 (datatype -> funcCall .)
    OC_CONCATENAR   reduce using rule 152 (datatype -> funcCall .)
    R_IN            reduce using rule 152 (datatype -> funcCall .)
    R_NOT           reduce using rule 152 (datatype -> funcCall .)
    OL_MENORQUE     reduce using rule 152 (datatype -> funcCall .)
    OL_MAYORQUE     reduce using rule 152 (datatype -> funcCall .)
    OL_MAYORIGUALQUE reduce using rule 152 (datatype -> funcCall .)
    OL_MENORIGUALQUE reduce using rule 152 (datatype -> funcCall .)
    S_IGUAL         reduce using rule 152 (datatype -> funcCall .)
    OL_DISTINTODE   reduce using rule 152 (datatype -> funcCall .)
    R_IS            reduce using rule 152 (datatype -> funcCall .)
    R_BETWEEN       reduce using rule 152 (datatype -> funcCall .)
    R_ISNULL        reduce using rule 152 (datatype -> funcCall .)
    R_NOTNULL       reduce using rule 152 (datatype -> funcCall .)
    OL_ESIGUAL      reduce using rule 152 (datatype -> funcCall .)
    R_AS            reduce using rule 152 (datatype -> funcCall .)
    ID              reduce using rule 152 (datatype -> funcCall .)
    STRING          reduce using rule 152 (datatype -> funcCall .)
    CHARACTER       reduce using rule 152 (datatype -> funcCall .)
    S_COMA          reduce using rule 152 (datatype -> funcCall .)
    R_FROM          reduce using rule 152 (datatype -> funcCall .)
    S_PUNTOCOMA     reduce using rule 152 (datatype -> funcCall .)
    R_UNION         reduce using rule 152 (datatype -> funcCall .)
    R_INTERSECT     reduce using rule 152 (datatype -> funcCall .)
    R_EXCEPT        reduce using rule 152 (datatype -> funcCall .)
    S_PARDER        reduce using rule 152 (datatype -> funcCall .)
    R_AND           reduce using rule 152 (datatype -> funcCall .)
    R_OR            reduce using rule 152 (datatype -> funcCall .)
    R_GROUP         reduce using rule 152 (datatype -> funcCall .)
    R_LIMIT         reduce using rule 152 (datatype -> funcCall .)
    R_ORDER         reduce using rule 152 (datatype -> funcCall .)
    R_THEN          reduce using rule 152 (datatype -> funcCall .)
    R_NATURAL       reduce using rule 152 (datatype -> funcCall .)
    R_INNER         reduce using rule 152 (datatype -> funcCall .)
    R_LEFT          reduce using rule 152 (datatype -> funcCall .)
    R_RIGHT         reduce using rule 152 (datatype -> funcCall .)
    R_FULL          reduce using rule 152 (datatype -> funcCall .)
    R_WHERE         reduce using rule 152 (datatype -> funcCall .)
    R_ALL           reduce using rule 152 (datatype -> funcCall .)
    R_ANY           reduce using rule 152 (datatype -> funcCall .)
    R_SOME          reduce using rule 152 (datatype -> funcCall .)


state 76

    (153) datatype -> extract .

    O_SUMA          reduce using rule 153 (datatype -> extract .)
    O_RESTA         reduce using rule 153 (datatype -> extract .)
    O_PRODUCTO      reduce using rule 153 (datatype -> extract .)
    O_DIVISION      reduce using rule 153 (datatype -> extract .)
    O_EXPONENTE     reduce using rule 153 (datatype -> extract .)
    O_MODULAR       reduce using rule 153 (datatype -> extract .)
    OC_CONCATENAR   reduce using rule 153 (datatype -> extract .)
    R_IN            reduce using rule 153 (datatype -> extract .)
    R_NOT           reduce using rule 153 (datatype -> extract .)
    OL_MENORQUE     reduce using rule 153 (datatype -> extract .)
    OL_MAYORQUE     reduce using rule 153 (datatype -> extract .)
    OL_MAYORIGUALQUE reduce using rule 153 (datatype -> extract .)
    OL_MENORIGUALQUE reduce using rule 153 (datatype -> extract .)
    S_IGUAL         reduce using rule 153 (datatype -> extract .)
    OL_DISTINTODE   reduce using rule 153 (datatype -> extract .)
    R_IS            reduce using rule 153 (datatype -> extract .)
    R_BETWEEN       reduce using rule 153 (datatype -> extract .)
    R_ISNULL        reduce using rule 153 (datatype -> extract .)
    R_NOTNULL       reduce using rule 153 (datatype -> extract .)
    OL_ESIGUAL      reduce using rule 153 (datatype -> extract .)
    R_AS            reduce using rule 153 (datatype -> extract .)
    ID              reduce using rule 153 (datatype -> extract .)
    STRING          reduce using rule 153 (datatype -> extract .)
    CHARACTER       reduce using rule 153 (datatype -> extract .)
    S_COMA          reduce using rule 153 (datatype -> extract .)
    R_FROM          reduce using rule 153 (datatype -> extract .)
    S_PUNTOCOMA     reduce using rule 153 (datatype -> extract .)
    R_UNION         reduce using rule 153 (datatype -> extract .)
    R_INTERSECT     reduce using rule 153 (datatype -> extract .)
    R_EXCEPT        reduce using rule 153 (datatype -> extract .)
    S_PARDER        reduce using rule 153 (datatype -> extract .)
    R_AND           reduce using rule 153 (datatype -> extract .)
    R_OR            reduce using rule 153 (datatype -> extract .)
    R_GROUP         reduce using rule 153 (datatype -> extract .)
    R_LIMIT         reduce using rule 153 (datatype -> extract .)
    R_ORDER         reduce using rule 153 (datatype -> extract .)
    R_THEN          reduce using rule 153 (datatype -> extract .)
    R_NATURAL       reduce using rule 153 (datatype -> extract .)
    R_INNER         reduce using rule 153 (datatype -> extract .)
    R_LEFT          reduce using rule 153 (datatype -> extract .)
    R_RIGHT         reduce using rule 153 (datatype -> extract .)
    R_FULL          reduce using rule 153 (datatype -> extract .)
    R_WHERE         reduce using rule 153 (datatype -> extract .)
    R_ALL           reduce using rule 153 (datatype -> extract .)
    R_ANY           reduce using rule 153 (datatype -> extract .)
    R_SOME          reduce using rule 153 (datatype -> extract .)


state 77

    (154) datatype -> datePart .

    O_SUMA          reduce using rule 154 (datatype -> datePart .)
    O_RESTA         reduce using rule 154 (datatype -> datePart .)
    O_PRODUCTO      reduce using rule 154 (datatype -> datePart .)
    O_DIVISION      reduce using rule 154 (datatype -> datePart .)
    O_EXPONENTE     reduce using rule 154 (datatype -> datePart .)
    O_MODULAR       reduce using rule 154 (datatype -> datePart .)
    OC_CONCATENAR   reduce using rule 154 (datatype -> datePart .)
    R_IN            reduce using rule 154 (datatype -> datePart .)
    R_NOT           reduce using rule 154 (datatype -> datePart .)
    OL_MENORQUE     reduce using rule 154 (datatype -> datePart .)
    OL_MAYORQUE     reduce using rule 154 (datatype -> datePart .)
    OL_MAYORIGUALQUE reduce using rule 154 (datatype -> datePart .)
    OL_MENORIGUALQUE reduce using rule 154 (datatype -> datePart .)
    S_IGUAL         reduce using rule 154 (datatype -> datePart .)
    OL_DISTINTODE   reduce using rule 154 (datatype -> datePart .)
    R_IS            reduce using rule 154 (datatype -> datePart .)
    R_BETWEEN       reduce using rule 154 (datatype -> datePart .)
    R_ISNULL        reduce using rule 154 (datatype -> datePart .)
    R_NOTNULL       reduce using rule 154 (datatype -> datePart .)
    OL_ESIGUAL      reduce using rule 154 (datatype -> datePart .)
    R_AS            reduce using rule 154 (datatype -> datePart .)
    ID              reduce using rule 154 (datatype -> datePart .)
    STRING          reduce using rule 154 (datatype -> datePart .)
    CHARACTER       reduce using rule 154 (datatype -> datePart .)
    S_COMA          reduce using rule 154 (datatype -> datePart .)
    R_FROM          reduce using rule 154 (datatype -> datePart .)
    S_PUNTOCOMA     reduce using rule 154 (datatype -> datePart .)
    R_UNION         reduce using rule 154 (datatype -> datePart .)
    R_INTERSECT     reduce using rule 154 (datatype -> datePart .)
    R_EXCEPT        reduce using rule 154 (datatype -> datePart .)
    S_PARDER        reduce using rule 154 (datatype -> datePart .)
    R_AND           reduce using rule 154 (datatype -> datePart .)
    R_OR            reduce using rule 154 (datatype -> datePart .)
    R_GROUP         reduce using rule 154 (datatype -> datePart .)
    R_LIMIT         reduce using rule 154 (datatype -> datePart .)
    R_ORDER         reduce using rule 154 (datatype -> datePart .)
    R_THEN          reduce using rule 154 (datatype -> datePart .)
    R_NATURAL       reduce using rule 154 (datatype -> datePart .)
    R_INNER         reduce using rule 154 (datatype -> datePart .)
    R_LEFT          reduce using rule 154 (datatype -> datePart .)
    R_RIGHT         reduce using rule 154 (datatype -> datePart .)
    R_FULL          reduce using rule 154 (datatype -> datePart .)
    R_WHERE         reduce using rule 154 (datatype -> datePart .)
    R_ALL           reduce using rule 154 (datatype -> datePart .)
    R_ANY           reduce using rule 154 (datatype -> datePart .)
    R_SOME          reduce using rule 154 (datatype -> datePart .)


state 78

    (155) datatype -> current .

    O_SUMA          reduce using rule 155 (datatype -> current .)
    O_RESTA         reduce using rule 155 (datatype -> current .)
    O_PRODUCTO      reduce using rule 155 (datatype -> current .)
    O_DIVISION      reduce using rule 155 (datatype -> current .)
    O_EXPONENTE     reduce using rule 155 (datatype -> current .)
    O_MODULAR       reduce using rule 155 (datatype -> current .)
    OC_CONCATENAR   reduce using rule 155 (datatype -> current .)
    R_IN            reduce using rule 155 (datatype -> current .)
    R_NOT           reduce using rule 155 (datatype -> current .)
    OL_MENORQUE     reduce using rule 155 (datatype -> current .)
    OL_MAYORQUE     reduce using rule 155 (datatype -> current .)
    OL_MAYORIGUALQUE reduce using rule 155 (datatype -> current .)
    OL_MENORIGUALQUE reduce using rule 155 (datatype -> current .)
    S_IGUAL         reduce using rule 155 (datatype -> current .)
    OL_DISTINTODE   reduce using rule 155 (datatype -> current .)
    R_IS            reduce using rule 155 (datatype -> current .)
    R_BETWEEN       reduce using rule 155 (datatype -> current .)
    R_ISNULL        reduce using rule 155 (datatype -> current .)
    R_NOTNULL       reduce using rule 155 (datatype -> current .)
    OL_ESIGUAL      reduce using rule 155 (datatype -> current .)
    R_AS            reduce using rule 155 (datatype -> current .)
    ID              reduce using rule 155 (datatype -> current .)
    STRING          reduce using rule 155 (datatype -> current .)
    CHARACTER       reduce using rule 155 (datatype -> current .)
    S_COMA          reduce using rule 155 (datatype -> current .)
    R_FROM          reduce using rule 155 (datatype -> current .)
    S_PUNTOCOMA     reduce using rule 155 (datatype -> current .)
    R_UNION         reduce using rule 155 (datatype -> current .)
    R_INTERSECT     reduce using rule 155 (datatype -> current .)
    R_EXCEPT        reduce using rule 155 (datatype -> current .)
    S_PARDER        reduce using rule 155 (datatype -> current .)
    R_AND           reduce using rule 155 (datatype -> current .)
    R_OR            reduce using rule 155 (datatype -> current .)
    R_GROUP         reduce using rule 155 (datatype -> current .)
    R_LIMIT         reduce using rule 155 (datatype -> current .)
    R_ORDER         reduce using rule 155 (datatype -> current .)
    R_THEN          reduce using rule 155 (datatype -> current .)
    R_NATURAL       reduce using rule 155 (datatype -> current .)
    R_INNER         reduce using rule 155 (datatype -> current .)
    R_LEFT          reduce using rule 155 (datatype -> current .)
    R_RIGHT         reduce using rule 155 (datatype -> current .)
    R_FULL          reduce using rule 155 (datatype -> current .)
    R_WHERE         reduce using rule 155 (datatype -> current .)
    R_ALL           reduce using rule 155 (datatype -> current .)
    R_ANY           reduce using rule 155 (datatype -> current .)
    R_SOME          reduce using rule 155 (datatype -> current .)


state 79

    (212) expBool -> R_NOT . expBool
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 79
    S_PARIZQ        shift and go to state 178
    R_EXISTS        shift and go to state 97
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    expBool                        shift and go to state 177
    boolean                        shift and go to state 80
    datatype                       shift and go to state 179
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    stringExp                      shift and go to state 102
    timeStamp                      shift and go to state 93

state 80

    (215) expBool -> boolean .

    R_AND           reduce using rule 215 (expBool -> boolean .)
    R_OR            reduce using rule 215 (expBool -> boolean .)
    R_IS            reduce using rule 215 (expBool -> boolean .)
    R_AS            reduce using rule 215 (expBool -> boolean .)
    ID              reduce using rule 215 (expBool -> boolean .)
    STRING          reduce using rule 215 (expBool -> boolean .)
    CHARACTER       reduce using rule 215 (expBool -> boolean .)
    S_COMA          reduce using rule 215 (expBool -> boolean .)
    R_FROM          reduce using rule 215 (expBool -> boolean .)
    S_PUNTOCOMA     reduce using rule 215 (expBool -> boolean .)
    R_UNION         reduce using rule 215 (expBool -> boolean .)
    R_INTERSECT     reduce using rule 215 (expBool -> boolean .)
    R_EXCEPT        reduce using rule 215 (expBool -> boolean .)
    S_PARDER        reduce using rule 215 (expBool -> boolean .)
    R_GROUP         reduce using rule 215 (expBool -> boolean .)
    R_LIMIT         reduce using rule 215 (expBool -> boolean .)
    R_ORDER         reduce using rule 215 (expBool -> boolean .)
    R_THEN          reduce using rule 215 (expBool -> boolean .)
    R_NATURAL       reduce using rule 215 (expBool -> boolean .)
    R_INNER         reduce using rule 215 (expBool -> boolean .)
    R_LEFT          reduce using rule 215 (expBool -> boolean .)
    R_RIGHT         reduce using rule 215 (expBool -> boolean .)
    R_FULL          reduce using rule 215 (expBool -> boolean .)
    R_WHERE         reduce using rule 215 (expBool -> boolean .)


state 81

    (126) literal -> INTEGER .

    O_SUMA          reduce using rule 126 (literal -> INTEGER .)
    O_RESTA         reduce using rule 126 (literal -> INTEGER .)
    O_PRODUCTO      reduce using rule 126 (literal -> INTEGER .)
    O_DIVISION      reduce using rule 126 (literal -> INTEGER .)
    O_EXPONENTE     reduce using rule 126 (literal -> INTEGER .)
    O_MODULAR       reduce using rule 126 (literal -> INTEGER .)
    OC_CONCATENAR   reduce using rule 126 (literal -> INTEGER .)
    R_IN            reduce using rule 126 (literal -> INTEGER .)
    R_NOT           reduce using rule 126 (literal -> INTEGER .)
    OL_MENORQUE     reduce using rule 126 (literal -> INTEGER .)
    OL_MAYORQUE     reduce using rule 126 (literal -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 126 (literal -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 126 (literal -> INTEGER .)
    S_IGUAL         reduce using rule 126 (literal -> INTEGER .)
    OL_DISTINTODE   reduce using rule 126 (literal -> INTEGER .)
    R_IS            reduce using rule 126 (literal -> INTEGER .)
    R_BETWEEN       reduce using rule 126 (literal -> INTEGER .)
    R_ISNULL        reduce using rule 126 (literal -> INTEGER .)
    R_NOTNULL       reduce using rule 126 (literal -> INTEGER .)
    OL_ESIGUAL      reduce using rule 126 (literal -> INTEGER .)
    R_AS            reduce using rule 126 (literal -> INTEGER .)
    ID              reduce using rule 126 (literal -> INTEGER .)
    STRING          reduce using rule 126 (literal -> INTEGER .)
    CHARACTER       reduce using rule 126 (literal -> INTEGER .)
    S_COMA          reduce using rule 126 (literal -> INTEGER .)
    R_FROM          reduce using rule 126 (literal -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 126 (literal -> INTEGER .)
    R_UNION         reduce using rule 126 (literal -> INTEGER .)
    R_INTERSECT     reduce using rule 126 (literal -> INTEGER .)
    R_EXCEPT        reduce using rule 126 (literal -> INTEGER .)
    S_PARDER        reduce using rule 126 (literal -> INTEGER .)
    R_AND           reduce using rule 126 (literal -> INTEGER .)
    R_OR            reduce using rule 126 (literal -> INTEGER .)
    R_GROUP         reduce using rule 126 (literal -> INTEGER .)
    R_LIMIT         reduce using rule 126 (literal -> INTEGER .)
    R_ORDER         reduce using rule 126 (literal -> INTEGER .)
    R_THEN          reduce using rule 126 (literal -> INTEGER .)
    R_NATURAL       reduce using rule 126 (literal -> INTEGER .)
    R_INNER         reduce using rule 126 (literal -> INTEGER .)
    R_LEFT          reduce using rule 126 (literal -> INTEGER .)
    R_RIGHT         reduce using rule 126 (literal -> INTEGER .)
    R_FULL          reduce using rule 126 (literal -> INTEGER .)
    R_WHERE         reduce using rule 126 (literal -> INTEGER .)
    R_ALL           reduce using rule 126 (literal -> INTEGER .)
    R_ANY           reduce using rule 126 (literal -> INTEGER .)
    R_SOME          reduce using rule 126 (literal -> INTEGER .)
    R_END           reduce using rule 126 (literal -> INTEGER .)
    R_ELSE          reduce using rule 126 (literal -> INTEGER .)
    R_WHEN          reduce using rule 126 (literal -> INTEGER .)
    R_DEFAULT       reduce using rule 126 (literal -> INTEGER .)
    R_NULL          reduce using rule 126 (literal -> INTEGER .)
    R_PRIMARY       reduce using rule 126 (literal -> INTEGER .)
    R_REFERENCES    reduce using rule 126 (literal -> INTEGER .)
    R_CONSTRAINT    reduce using rule 126 (literal -> INTEGER .)
    R_UNIQUE        reduce using rule 126 (literal -> INTEGER .)
    R_CHECK         reduce using rule 126 (literal -> INTEGER .)


state 82

    (127) literal -> STRING .
    (200) stringExp -> STRING .

    O_SUMA          reduce using rule 127 (literal -> STRING .)
    O_RESTA         reduce using rule 127 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 127 (literal -> STRING .)
    O_DIVISION      reduce using rule 127 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 127 (literal -> STRING .)
    O_MODULAR       reduce using rule 127 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 127 (literal -> STRING .)
    R_IN            reduce using rule 127 (literal -> STRING .)
    R_NOT           reduce using rule 127 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 127 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 127 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 127 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 127 (literal -> STRING .)
    S_IGUAL         reduce using rule 127 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 127 (literal -> STRING .)
    R_IS            reduce using rule 127 (literal -> STRING .)
    R_BETWEEN       reduce using rule 127 (literal -> STRING .)
    R_ISNULL        reduce using rule 127 (literal -> STRING .)
    R_NOTNULL       reduce using rule 127 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 127 (literal -> STRING .)
    R_AS            reduce using rule 127 (literal -> STRING .)
    ID              reduce using rule 127 (literal -> STRING .)
    STRING          reduce using rule 127 (literal -> STRING .)
    CHARACTER       reduce using rule 127 (literal -> STRING .)
    S_COMA          reduce using rule 127 (literal -> STRING .)
    R_FROM          reduce using rule 127 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 127 (literal -> STRING .)
    R_UNION         reduce using rule 127 (literal -> STRING .)
    R_INTERSECT     reduce using rule 127 (literal -> STRING .)
    R_EXCEPT        reduce using rule 127 (literal -> STRING .)
    S_PARDER        reduce using rule 127 (literal -> STRING .)
    R_LIKE          reduce using rule 200 (stringExp -> STRING .)


state 83

    (128) literal -> DECIMAL .

    O_SUMA          reduce using rule 128 (literal -> DECIMAL .)
    O_RESTA         reduce using rule 128 (literal -> DECIMAL .)
    O_PRODUCTO      reduce using rule 128 (literal -> DECIMAL .)
    O_DIVISION      reduce using rule 128 (literal -> DECIMAL .)
    O_EXPONENTE     reduce using rule 128 (literal -> DECIMAL .)
    O_MODULAR       reduce using rule 128 (literal -> DECIMAL .)
    OC_CONCATENAR   reduce using rule 128 (literal -> DECIMAL .)
    R_IN            reduce using rule 128 (literal -> DECIMAL .)
    R_NOT           reduce using rule 128 (literal -> DECIMAL .)
    OL_MENORQUE     reduce using rule 128 (literal -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 128 (literal -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 128 (literal -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 128 (literal -> DECIMAL .)
    S_IGUAL         reduce using rule 128 (literal -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 128 (literal -> DECIMAL .)
    R_IS            reduce using rule 128 (literal -> DECIMAL .)
    R_BETWEEN       reduce using rule 128 (literal -> DECIMAL .)
    R_ISNULL        reduce using rule 128 (literal -> DECIMAL .)
    R_NOTNULL       reduce using rule 128 (literal -> DECIMAL .)
    OL_ESIGUAL      reduce using rule 128 (literal -> DECIMAL .)
    R_AS            reduce using rule 128 (literal -> DECIMAL .)
    ID              reduce using rule 128 (literal -> DECIMAL .)
    STRING          reduce using rule 128 (literal -> DECIMAL .)
    CHARACTER       reduce using rule 128 (literal -> DECIMAL .)
    S_COMA          reduce using rule 128 (literal -> DECIMAL .)
    R_FROM          reduce using rule 128 (literal -> DECIMAL .)
    S_PUNTOCOMA     reduce using rule 128 (literal -> DECIMAL .)
    R_UNION         reduce using rule 128 (literal -> DECIMAL .)
    R_INTERSECT     reduce using rule 128 (literal -> DECIMAL .)
    R_EXCEPT        reduce using rule 128 (literal -> DECIMAL .)
    S_PARDER        reduce using rule 128 (literal -> DECIMAL .)
    R_AND           reduce using rule 128 (literal -> DECIMAL .)
    R_OR            reduce using rule 128 (literal -> DECIMAL .)
    R_GROUP         reduce using rule 128 (literal -> DECIMAL .)
    R_LIMIT         reduce using rule 128 (literal -> DECIMAL .)
    R_ORDER         reduce using rule 128 (literal -> DECIMAL .)
    R_THEN          reduce using rule 128 (literal -> DECIMAL .)
    R_NATURAL       reduce using rule 128 (literal -> DECIMAL .)
    R_INNER         reduce using rule 128 (literal -> DECIMAL .)
    R_LEFT          reduce using rule 128 (literal -> DECIMAL .)
    R_RIGHT         reduce using rule 128 (literal -> DECIMAL .)
    R_FULL          reduce using rule 128 (literal -> DECIMAL .)
    R_WHERE         reduce using rule 128 (literal -> DECIMAL .)
    R_ALL           reduce using rule 128 (literal -> DECIMAL .)
    R_ANY           reduce using rule 128 (literal -> DECIMAL .)
    R_SOME          reduce using rule 128 (literal -> DECIMAL .)
    R_END           reduce using rule 128 (literal -> DECIMAL .)
    R_ELSE          reduce using rule 128 (literal -> DECIMAL .)
    R_WHEN          reduce using rule 128 (literal -> DECIMAL .)
    R_DEFAULT       reduce using rule 128 (literal -> DECIMAL .)
    R_NULL          reduce using rule 128 (literal -> DECIMAL .)
    R_PRIMARY       reduce using rule 128 (literal -> DECIMAL .)
    R_REFERENCES    reduce using rule 128 (literal -> DECIMAL .)
    R_CONSTRAINT    reduce using rule 128 (literal -> DECIMAL .)
    R_UNIQUE        reduce using rule 128 (literal -> DECIMAL .)
    R_CHECK         reduce using rule 128 (literal -> DECIMAL .)


state 84

    (129) literal -> CHARACTER .

    O_SUMA          reduce using rule 129 (literal -> CHARACTER .)
    O_RESTA         reduce using rule 129 (literal -> CHARACTER .)
    O_PRODUCTO      reduce using rule 129 (literal -> CHARACTER .)
    O_DIVISION      reduce using rule 129 (literal -> CHARACTER .)
    O_EXPONENTE     reduce using rule 129 (literal -> CHARACTER .)
    O_MODULAR       reduce using rule 129 (literal -> CHARACTER .)
    OC_CONCATENAR   reduce using rule 129 (literal -> CHARACTER .)
    R_IN            reduce using rule 129 (literal -> CHARACTER .)
    R_NOT           reduce using rule 129 (literal -> CHARACTER .)
    OL_MENORQUE     reduce using rule 129 (literal -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 129 (literal -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 129 (literal -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 129 (literal -> CHARACTER .)
    S_IGUAL         reduce using rule 129 (literal -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 129 (literal -> CHARACTER .)
    R_IS            reduce using rule 129 (literal -> CHARACTER .)
    R_BETWEEN       reduce using rule 129 (literal -> CHARACTER .)
    R_ISNULL        reduce using rule 129 (literal -> CHARACTER .)
    R_NOTNULL       reduce using rule 129 (literal -> CHARACTER .)
    OL_ESIGUAL      reduce using rule 129 (literal -> CHARACTER .)
    R_AS            reduce using rule 129 (literal -> CHARACTER .)
    ID              reduce using rule 129 (literal -> CHARACTER .)
    STRING          reduce using rule 129 (literal -> CHARACTER .)
    CHARACTER       reduce using rule 129 (literal -> CHARACTER .)
    S_COMA          reduce using rule 129 (literal -> CHARACTER .)
    R_FROM          reduce using rule 129 (literal -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 129 (literal -> CHARACTER .)
    R_UNION         reduce using rule 129 (literal -> CHARACTER .)
    R_INTERSECT     reduce using rule 129 (literal -> CHARACTER .)
    R_EXCEPT        reduce using rule 129 (literal -> CHARACTER .)
    S_PARDER        reduce using rule 129 (literal -> CHARACTER .)
    R_AND           reduce using rule 129 (literal -> CHARACTER .)
    R_OR            reduce using rule 129 (literal -> CHARACTER .)
    R_GROUP         reduce using rule 129 (literal -> CHARACTER .)
    R_LIMIT         reduce using rule 129 (literal -> CHARACTER .)
    R_ORDER         reduce using rule 129 (literal -> CHARACTER .)
    R_THEN          reduce using rule 129 (literal -> CHARACTER .)
    R_NATURAL       reduce using rule 129 (literal -> CHARACTER .)
    R_INNER         reduce using rule 129 (literal -> CHARACTER .)
    R_LEFT          reduce using rule 129 (literal -> CHARACTER .)
    R_RIGHT         reduce using rule 129 (literal -> CHARACTER .)
    R_FULL          reduce using rule 129 (literal -> CHARACTER .)
    R_WHERE         reduce using rule 129 (literal -> CHARACTER .)
    R_ALL           reduce using rule 129 (literal -> CHARACTER .)
    R_ANY           reduce using rule 129 (literal -> CHARACTER .)
    R_SOME          reduce using rule 129 (literal -> CHARACTER .)
    R_END           reduce using rule 129 (literal -> CHARACTER .)
    R_ELSE          reduce using rule 129 (literal -> CHARACTER .)
    R_WHEN          reduce using rule 129 (literal -> CHARACTER .)
    R_DEFAULT       reduce using rule 129 (literal -> CHARACTER .)
    R_NULL          reduce using rule 129 (literal -> CHARACTER .)
    R_PRIMARY       reduce using rule 129 (literal -> CHARACTER .)
    R_REFERENCES    reduce using rule 129 (literal -> CHARACTER .)
    R_CONSTRAINT    reduce using rule 129 (literal -> CHARACTER .)
    R_UNIQUE        reduce using rule 129 (literal -> CHARACTER .)
    R_CHECK         reduce using rule 129 (literal -> CHARACTER .)


state 85

    (130) literal -> R_TRUE .

    O_SUMA          reduce using rule 130 (literal -> R_TRUE .)
    O_RESTA         reduce using rule 130 (literal -> R_TRUE .)
    O_PRODUCTO      reduce using rule 130 (literal -> R_TRUE .)
    O_DIVISION      reduce using rule 130 (literal -> R_TRUE .)
    O_EXPONENTE     reduce using rule 130 (literal -> R_TRUE .)
    O_MODULAR       reduce using rule 130 (literal -> R_TRUE .)
    OC_CONCATENAR   reduce using rule 130 (literal -> R_TRUE .)
    R_IN            reduce using rule 130 (literal -> R_TRUE .)
    R_NOT           reduce using rule 130 (literal -> R_TRUE .)
    OL_MENORQUE     reduce using rule 130 (literal -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 130 (literal -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 130 (literal -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 130 (literal -> R_TRUE .)
    S_IGUAL         reduce using rule 130 (literal -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 130 (literal -> R_TRUE .)
    R_IS            reduce using rule 130 (literal -> R_TRUE .)
    R_BETWEEN       reduce using rule 130 (literal -> R_TRUE .)
    R_ISNULL        reduce using rule 130 (literal -> R_TRUE .)
    R_NOTNULL       reduce using rule 130 (literal -> R_TRUE .)
    OL_ESIGUAL      reduce using rule 130 (literal -> R_TRUE .)
    R_AS            reduce using rule 130 (literal -> R_TRUE .)
    ID              reduce using rule 130 (literal -> R_TRUE .)
    STRING          reduce using rule 130 (literal -> R_TRUE .)
    CHARACTER       reduce using rule 130 (literal -> R_TRUE .)
    S_COMA          reduce using rule 130 (literal -> R_TRUE .)
    R_FROM          reduce using rule 130 (literal -> R_TRUE .)
    S_PUNTOCOMA     reduce using rule 130 (literal -> R_TRUE .)
    R_UNION         reduce using rule 130 (literal -> R_TRUE .)
    R_INTERSECT     reduce using rule 130 (literal -> R_TRUE .)
    R_EXCEPT        reduce using rule 130 (literal -> R_TRUE .)
    S_PARDER        reduce using rule 130 (literal -> R_TRUE .)
    R_AND           reduce using rule 130 (literal -> R_TRUE .)
    R_OR            reduce using rule 130 (literal -> R_TRUE .)
    R_GROUP         reduce using rule 130 (literal -> R_TRUE .)
    R_LIMIT         reduce using rule 130 (literal -> R_TRUE .)
    R_ORDER         reduce using rule 130 (literal -> R_TRUE .)
    R_THEN          reduce using rule 130 (literal -> R_TRUE .)
    R_NATURAL       reduce using rule 130 (literal -> R_TRUE .)
    R_INNER         reduce using rule 130 (literal -> R_TRUE .)
    R_LEFT          reduce using rule 130 (literal -> R_TRUE .)
    R_RIGHT         reduce using rule 130 (literal -> R_TRUE .)
    R_FULL          reduce using rule 130 (literal -> R_TRUE .)
    R_WHERE         reduce using rule 130 (literal -> R_TRUE .)
    R_ALL           reduce using rule 130 (literal -> R_TRUE .)
    R_ANY           reduce using rule 130 (literal -> R_TRUE .)
    R_SOME          reduce using rule 130 (literal -> R_TRUE .)
    R_END           reduce using rule 130 (literal -> R_TRUE .)
    R_ELSE          reduce using rule 130 (literal -> R_TRUE .)
    R_WHEN          reduce using rule 130 (literal -> R_TRUE .)
    R_DEFAULT       reduce using rule 130 (literal -> R_TRUE .)
    R_NULL          reduce using rule 130 (literal -> R_TRUE .)
    R_PRIMARY       reduce using rule 130 (literal -> R_TRUE .)
    R_REFERENCES    reduce using rule 130 (literal -> R_TRUE .)
    R_CONSTRAINT    reduce using rule 130 (literal -> R_TRUE .)
    R_UNIQUE        reduce using rule 130 (literal -> R_TRUE .)
    R_CHECK         reduce using rule 130 (literal -> R_TRUE .)


state 86

    (131) literal -> R_FALSE .

    O_SUMA          reduce using rule 131 (literal -> R_FALSE .)
    O_RESTA         reduce using rule 131 (literal -> R_FALSE .)
    O_PRODUCTO      reduce using rule 131 (literal -> R_FALSE .)
    O_DIVISION      reduce using rule 131 (literal -> R_FALSE .)
    O_EXPONENTE     reduce using rule 131 (literal -> R_FALSE .)
    O_MODULAR       reduce using rule 131 (literal -> R_FALSE .)
    OC_CONCATENAR   reduce using rule 131 (literal -> R_FALSE .)
    R_IN            reduce using rule 131 (literal -> R_FALSE .)
    R_NOT           reduce using rule 131 (literal -> R_FALSE .)
    OL_MENORQUE     reduce using rule 131 (literal -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 131 (literal -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 131 (literal -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 131 (literal -> R_FALSE .)
    S_IGUAL         reduce using rule 131 (literal -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 131 (literal -> R_FALSE .)
    R_IS            reduce using rule 131 (literal -> R_FALSE .)
    R_BETWEEN       reduce using rule 131 (literal -> R_FALSE .)
    R_ISNULL        reduce using rule 131 (literal -> R_FALSE .)
    R_NOTNULL       reduce using rule 131 (literal -> R_FALSE .)
    OL_ESIGUAL      reduce using rule 131 (literal -> R_FALSE .)
    R_AS            reduce using rule 131 (literal -> R_FALSE .)
    ID              reduce using rule 131 (literal -> R_FALSE .)
    STRING          reduce using rule 131 (literal -> R_FALSE .)
    CHARACTER       reduce using rule 131 (literal -> R_FALSE .)
    S_COMA          reduce using rule 131 (literal -> R_FALSE .)
    R_FROM          reduce using rule 131 (literal -> R_FALSE .)
    S_PUNTOCOMA     reduce using rule 131 (literal -> R_FALSE .)
    R_UNION         reduce using rule 131 (literal -> R_FALSE .)
    R_INTERSECT     reduce using rule 131 (literal -> R_FALSE .)
    R_EXCEPT        reduce using rule 131 (literal -> R_FALSE .)
    S_PARDER        reduce using rule 131 (literal -> R_FALSE .)
    R_AND           reduce using rule 131 (literal -> R_FALSE .)
    R_OR            reduce using rule 131 (literal -> R_FALSE .)
    R_GROUP         reduce using rule 131 (literal -> R_FALSE .)
    R_LIMIT         reduce using rule 131 (literal -> R_FALSE .)
    R_ORDER         reduce using rule 131 (literal -> R_FALSE .)
    R_THEN          reduce using rule 131 (literal -> R_FALSE .)
    R_NATURAL       reduce using rule 131 (literal -> R_FALSE .)
    R_INNER         reduce using rule 131 (literal -> R_FALSE .)
    R_LEFT          reduce using rule 131 (literal -> R_FALSE .)
    R_RIGHT         reduce using rule 131 (literal -> R_FALSE .)
    R_FULL          reduce using rule 131 (literal -> R_FALSE .)
    R_WHERE         reduce using rule 131 (literal -> R_FALSE .)
    R_ALL           reduce using rule 131 (literal -> R_FALSE .)
    R_ANY           reduce using rule 131 (literal -> R_FALSE .)
    R_SOME          reduce using rule 131 (literal -> R_FALSE .)
    R_END           reduce using rule 131 (literal -> R_FALSE .)
    R_ELSE          reduce using rule 131 (literal -> R_FALSE .)
    R_WHEN          reduce using rule 131 (literal -> R_FALSE .)
    R_DEFAULT       reduce using rule 131 (literal -> R_FALSE .)
    R_NULL          reduce using rule 131 (literal -> R_FALSE .)
    R_PRIMARY       reduce using rule 131 (literal -> R_FALSE .)
    R_REFERENCES    reduce using rule 131 (literal -> R_FALSE .)
    R_CONSTRAINT    reduce using rule 131 (literal -> R_FALSE .)
    R_UNIQUE        reduce using rule 131 (literal -> R_FALSE .)
    R_CHECK         reduce using rule 131 (literal -> R_FALSE .)


state 87

    (132) literal -> R_NULL .

    O_SUMA          reduce using rule 132 (literal -> R_NULL .)
    O_RESTA         reduce using rule 132 (literal -> R_NULL .)
    O_PRODUCTO      reduce using rule 132 (literal -> R_NULL .)
    O_DIVISION      reduce using rule 132 (literal -> R_NULL .)
    O_EXPONENTE     reduce using rule 132 (literal -> R_NULL .)
    O_MODULAR       reduce using rule 132 (literal -> R_NULL .)
    OC_CONCATENAR   reduce using rule 132 (literal -> R_NULL .)
    R_IN            reduce using rule 132 (literal -> R_NULL .)
    R_NOT           reduce using rule 132 (literal -> R_NULL .)
    OL_MENORQUE     reduce using rule 132 (literal -> R_NULL .)
    OL_MAYORQUE     reduce using rule 132 (literal -> R_NULL .)
    OL_MAYORIGUALQUE reduce using rule 132 (literal -> R_NULL .)
    OL_MENORIGUALQUE reduce using rule 132 (literal -> R_NULL .)
    S_IGUAL         reduce using rule 132 (literal -> R_NULL .)
    OL_DISTINTODE   reduce using rule 132 (literal -> R_NULL .)
    R_IS            reduce using rule 132 (literal -> R_NULL .)
    R_BETWEEN       reduce using rule 132 (literal -> R_NULL .)
    R_ISNULL        reduce using rule 132 (literal -> R_NULL .)
    R_NOTNULL       reduce using rule 132 (literal -> R_NULL .)
    OL_ESIGUAL      reduce using rule 132 (literal -> R_NULL .)
    R_AS            reduce using rule 132 (literal -> R_NULL .)
    ID              reduce using rule 132 (literal -> R_NULL .)
    STRING          reduce using rule 132 (literal -> R_NULL .)
    CHARACTER       reduce using rule 132 (literal -> R_NULL .)
    S_COMA          reduce using rule 132 (literal -> R_NULL .)
    R_FROM          reduce using rule 132 (literal -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 132 (literal -> R_NULL .)
    R_UNION         reduce using rule 132 (literal -> R_NULL .)
    R_INTERSECT     reduce using rule 132 (literal -> R_NULL .)
    R_EXCEPT        reduce using rule 132 (literal -> R_NULL .)
    S_PARDER        reduce using rule 132 (literal -> R_NULL .)
    R_AND           reduce using rule 132 (literal -> R_NULL .)
    R_OR            reduce using rule 132 (literal -> R_NULL .)
    R_GROUP         reduce using rule 132 (literal -> R_NULL .)
    R_LIMIT         reduce using rule 132 (literal -> R_NULL .)
    R_ORDER         reduce using rule 132 (literal -> R_NULL .)
    R_THEN          reduce using rule 132 (literal -> R_NULL .)
    R_NATURAL       reduce using rule 132 (literal -> R_NULL .)
    R_INNER         reduce using rule 132 (literal -> R_NULL .)
    R_LEFT          reduce using rule 132 (literal -> R_NULL .)
    R_RIGHT         reduce using rule 132 (literal -> R_NULL .)
    R_FULL          reduce using rule 132 (literal -> R_NULL .)
    R_WHERE         reduce using rule 132 (literal -> R_NULL .)
    R_ALL           reduce using rule 132 (literal -> R_NULL .)
    R_ANY           reduce using rule 132 (literal -> R_NULL .)
    R_SOME          reduce using rule 132 (literal -> R_NULL .)
    R_END           reduce using rule 132 (literal -> R_NULL .)
    R_ELSE          reduce using rule 132 (literal -> R_NULL .)
    R_WHEN          reduce using rule 132 (literal -> R_NULL .)
    R_DEFAULT       reduce using rule 132 (literal -> R_NULL .)
    R_NULL          reduce using rule 132 (literal -> R_NULL .)
    R_PRIMARY       reduce using rule 132 (literal -> R_NULL .)
    R_REFERENCES    reduce using rule 132 (literal -> R_NULL .)
    R_CONSTRAINT    reduce using rule 132 (literal -> R_NULL .)
    R_UNIQUE        reduce using rule 132 (literal -> R_NULL .)
    R_CHECK         reduce using rule 132 (literal -> R_NULL .)


state 88

    (100) funcCall -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 180


state 89

    (101) funcCall -> R_COUNT . S_PARIZQ datatype S_PARDER
    (102) funcCall -> R_COUNT . S_PARIZQ O_PRODUCTO S_PARDER

    S_PARIZQ        shift and go to state 181


state 90

    (103) funcCall -> R_SUM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 182


state 91

    (104) funcCall -> R_PROM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 183


state 92

    (105) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM columnName S_PARDER

    S_PARIZQ        shift and go to state 184


state 93

    (123) current -> timeStamp .

    O_SUMA          reduce using rule 123 (current -> timeStamp .)
    O_RESTA         reduce using rule 123 (current -> timeStamp .)
    O_PRODUCTO      reduce using rule 123 (current -> timeStamp .)
    O_DIVISION      reduce using rule 123 (current -> timeStamp .)
    O_EXPONENTE     reduce using rule 123 (current -> timeStamp .)
    O_MODULAR       reduce using rule 123 (current -> timeStamp .)
    OC_CONCATENAR   reduce using rule 123 (current -> timeStamp .)
    R_IN            reduce using rule 123 (current -> timeStamp .)
    R_NOT           reduce using rule 123 (current -> timeStamp .)
    OL_MENORQUE     reduce using rule 123 (current -> timeStamp .)
    OL_MAYORQUE     reduce using rule 123 (current -> timeStamp .)
    OL_MAYORIGUALQUE reduce using rule 123 (current -> timeStamp .)
    OL_MENORIGUALQUE reduce using rule 123 (current -> timeStamp .)
    S_IGUAL         reduce using rule 123 (current -> timeStamp .)
    OL_DISTINTODE   reduce using rule 123 (current -> timeStamp .)
    R_IS            reduce using rule 123 (current -> timeStamp .)
    R_BETWEEN       reduce using rule 123 (current -> timeStamp .)
    R_ISNULL        reduce using rule 123 (current -> timeStamp .)
    R_NOTNULL       reduce using rule 123 (current -> timeStamp .)
    OL_ESIGUAL      reduce using rule 123 (current -> timeStamp .)
    R_AS            reduce using rule 123 (current -> timeStamp .)
    ID              reduce using rule 123 (current -> timeStamp .)
    STRING          reduce using rule 123 (current -> timeStamp .)
    CHARACTER       reduce using rule 123 (current -> timeStamp .)
    S_COMA          reduce using rule 123 (current -> timeStamp .)
    R_FROM          reduce using rule 123 (current -> timeStamp .)
    S_PUNTOCOMA     reduce using rule 123 (current -> timeStamp .)
    R_UNION         reduce using rule 123 (current -> timeStamp .)
    R_INTERSECT     reduce using rule 123 (current -> timeStamp .)
    R_EXCEPT        reduce using rule 123 (current -> timeStamp .)
    S_PARDER        reduce using rule 123 (current -> timeStamp .)
    R_AND           reduce using rule 123 (current -> timeStamp .)
    R_OR            reduce using rule 123 (current -> timeStamp .)
    R_GROUP         reduce using rule 123 (current -> timeStamp .)
    R_LIMIT         reduce using rule 123 (current -> timeStamp .)
    R_ORDER         reduce using rule 123 (current -> timeStamp .)
    R_THEN          reduce using rule 123 (current -> timeStamp .)
    R_NATURAL       reduce using rule 123 (current -> timeStamp .)
    R_INNER         reduce using rule 123 (current -> timeStamp .)
    R_LEFT          reduce using rule 123 (current -> timeStamp .)
    R_RIGHT         reduce using rule 123 (current -> timeStamp .)
    R_FULL          reduce using rule 123 (current -> timeStamp .)
    R_WHERE         reduce using rule 123 (current -> timeStamp .)
    R_ALL           reduce using rule 123 (current -> timeStamp .)
    R_ANY           reduce using rule 123 (current -> timeStamp .)
    R_SOME          reduce using rule 123 (current -> timeStamp .)


state 94

    (115) datePart -> R_DATE_PART . S_PARIZQ STRING S_COMA dateSource S_PARDER

    S_PARIZQ        shift and go to state 185


state 95

    (121) current -> R_CURRENT_DATE .

    O_SUMA          reduce using rule 121 (current -> R_CURRENT_DATE .)
    O_RESTA         reduce using rule 121 (current -> R_CURRENT_DATE .)
    O_PRODUCTO      reduce using rule 121 (current -> R_CURRENT_DATE .)
    O_DIVISION      reduce using rule 121 (current -> R_CURRENT_DATE .)
    O_EXPONENTE     reduce using rule 121 (current -> R_CURRENT_DATE .)
    O_MODULAR       reduce using rule 121 (current -> R_CURRENT_DATE .)
    OC_CONCATENAR   reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_IN            reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_NOT           reduce using rule 121 (current -> R_CURRENT_DATE .)
    OL_MENORQUE     reduce using rule 121 (current -> R_CURRENT_DATE .)
    OL_MAYORQUE     reduce using rule 121 (current -> R_CURRENT_DATE .)
    OL_MAYORIGUALQUE reduce using rule 121 (current -> R_CURRENT_DATE .)
    OL_MENORIGUALQUE reduce using rule 121 (current -> R_CURRENT_DATE .)
    S_IGUAL         reduce using rule 121 (current -> R_CURRENT_DATE .)
    OL_DISTINTODE   reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_IS            reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_BETWEEN       reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_ISNULL        reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_NOTNULL       reduce using rule 121 (current -> R_CURRENT_DATE .)
    OL_ESIGUAL      reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_AS            reduce using rule 121 (current -> R_CURRENT_DATE .)
    ID              reduce using rule 121 (current -> R_CURRENT_DATE .)
    STRING          reduce using rule 121 (current -> R_CURRENT_DATE .)
    CHARACTER       reduce using rule 121 (current -> R_CURRENT_DATE .)
    S_COMA          reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_FROM          reduce using rule 121 (current -> R_CURRENT_DATE .)
    S_PUNTOCOMA     reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_UNION         reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_INTERSECT     reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_EXCEPT        reduce using rule 121 (current -> R_CURRENT_DATE .)
    S_PARDER        reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_AND           reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_OR            reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_GROUP         reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_LIMIT         reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_ORDER         reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_THEN          reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_NATURAL       reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_INNER         reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_LEFT          reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_RIGHT         reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_FULL          reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_WHERE         reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_ALL           reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_ANY           reduce using rule 121 (current -> R_CURRENT_DATE .)
    R_SOME          reduce using rule 121 (current -> R_CURRENT_DATE .)


state 96

    (122) current -> R_CURRENT_TIME .

    O_SUMA          reduce using rule 122 (current -> R_CURRENT_TIME .)
    O_RESTA         reduce using rule 122 (current -> R_CURRENT_TIME .)
    O_PRODUCTO      reduce using rule 122 (current -> R_CURRENT_TIME .)
    O_DIVISION      reduce using rule 122 (current -> R_CURRENT_TIME .)
    O_EXPONENTE     reduce using rule 122 (current -> R_CURRENT_TIME .)
    O_MODULAR       reduce using rule 122 (current -> R_CURRENT_TIME .)
    OC_CONCATENAR   reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_IN            reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_NOT           reduce using rule 122 (current -> R_CURRENT_TIME .)
    OL_MENORQUE     reduce using rule 122 (current -> R_CURRENT_TIME .)
    OL_MAYORQUE     reduce using rule 122 (current -> R_CURRENT_TIME .)
    OL_MAYORIGUALQUE reduce using rule 122 (current -> R_CURRENT_TIME .)
    OL_MENORIGUALQUE reduce using rule 122 (current -> R_CURRENT_TIME .)
    S_IGUAL         reduce using rule 122 (current -> R_CURRENT_TIME .)
    OL_DISTINTODE   reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_IS            reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_BETWEEN       reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_ISNULL        reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_NOTNULL       reduce using rule 122 (current -> R_CURRENT_TIME .)
    OL_ESIGUAL      reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_AS            reduce using rule 122 (current -> R_CURRENT_TIME .)
    ID              reduce using rule 122 (current -> R_CURRENT_TIME .)
    STRING          reduce using rule 122 (current -> R_CURRENT_TIME .)
    CHARACTER       reduce using rule 122 (current -> R_CURRENT_TIME .)
    S_COMA          reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_FROM          reduce using rule 122 (current -> R_CURRENT_TIME .)
    S_PUNTOCOMA     reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_UNION         reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_INTERSECT     reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_EXCEPT        reduce using rule 122 (current -> R_CURRENT_TIME .)
    S_PARDER        reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_AND           reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_OR            reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_GROUP         reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_LIMIT         reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_ORDER         reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_THEN          reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_NATURAL       reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_INNER         reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_LEFT          reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_RIGHT         reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_FULL          reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_WHERE         reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_ALL           reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_ANY           reduce using rule 122 (current -> R_CURRENT_TIME .)
    R_SOME          reduce using rule 122 (current -> R_CURRENT_TIME .)


state 97

    (205) boolean -> R_EXISTS . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 186


state 98

    (208) boolean -> expComp .

    R_AND           reduce using rule 208 (boolean -> expComp .)
    R_OR            reduce using rule 208 (boolean -> expComp .)
    R_IS            reduce using rule 208 (boolean -> expComp .)
    R_AS            reduce using rule 208 (boolean -> expComp .)
    ID              reduce using rule 208 (boolean -> expComp .)
    STRING          reduce using rule 208 (boolean -> expComp .)
    CHARACTER       reduce using rule 208 (boolean -> expComp .)
    S_COMA          reduce using rule 208 (boolean -> expComp .)
    R_FROM          reduce using rule 208 (boolean -> expComp .)
    S_PUNTOCOMA     reduce using rule 208 (boolean -> expComp .)
    R_UNION         reduce using rule 208 (boolean -> expComp .)
    R_INTERSECT     reduce using rule 208 (boolean -> expComp .)
    R_EXCEPT        reduce using rule 208 (boolean -> expComp .)
    S_PARDER        reduce using rule 208 (boolean -> expComp .)
    R_GROUP         reduce using rule 208 (boolean -> expComp .)
    R_LIMIT         reduce using rule 208 (boolean -> expComp .)
    R_ORDER         reduce using rule 208 (boolean -> expComp .)
    R_THEN          reduce using rule 208 (boolean -> expComp .)
    R_NATURAL       reduce using rule 208 (boolean -> expComp .)
    R_INNER         reduce using rule 208 (boolean -> expComp .)
    R_LEFT          reduce using rule 208 (boolean -> expComp .)
    R_RIGHT         reduce using rule 208 (boolean -> expComp .)
    R_FULL          reduce using rule 208 (boolean -> expComp .)
    R_WHERE         reduce using rule 208 (boolean -> expComp .)


state 99

    (209) boolean -> expSubq .

    R_AND           reduce using rule 209 (boolean -> expSubq .)
    R_OR            reduce using rule 209 (boolean -> expSubq .)
    R_IS            reduce using rule 209 (boolean -> expSubq .)
    R_AS            reduce using rule 209 (boolean -> expSubq .)
    ID              reduce using rule 209 (boolean -> expSubq .)
    STRING          reduce using rule 209 (boolean -> expSubq .)
    CHARACTER       reduce using rule 209 (boolean -> expSubq .)
    S_COMA          reduce using rule 209 (boolean -> expSubq .)
    R_FROM          reduce using rule 209 (boolean -> expSubq .)
    S_PUNTOCOMA     reduce using rule 209 (boolean -> expSubq .)
    R_UNION         reduce using rule 209 (boolean -> expSubq .)
    R_INTERSECT     reduce using rule 209 (boolean -> expSubq .)
    R_EXCEPT        reduce using rule 209 (boolean -> expSubq .)
    S_PARDER        reduce using rule 209 (boolean -> expSubq .)
    R_GROUP         reduce using rule 209 (boolean -> expSubq .)
    R_LIMIT         reduce using rule 209 (boolean -> expSubq .)
    R_ORDER         reduce using rule 209 (boolean -> expSubq .)
    R_THEN          reduce using rule 209 (boolean -> expSubq .)
    R_NATURAL       reduce using rule 209 (boolean -> expSubq .)
    R_INNER         reduce using rule 209 (boolean -> expSubq .)
    R_LEFT          reduce using rule 209 (boolean -> expSubq .)
    R_RIGHT         reduce using rule 209 (boolean -> expSubq .)
    R_FULL          reduce using rule 209 (boolean -> expSubq .)
    R_WHERE         reduce using rule 209 (boolean -> expSubq .)


state 100

    (107) timeStamp -> R_TIMESTAMP . STRING

    STRING          shift and go to state 187


state 101

    (108) timeStamp -> R_INTERVAL . STRING

    STRING          shift and go to state 188


state 102

    (199) expSubq -> stringExp . R_LIKE STRING

    R_LIKE          shift and go to state 189


state 103

    (272) selectStmt -> selectStmt R_UNION allOpt . selectStmt
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 190

state 104

    (278) allOpt -> R_ALL .

    R_SELECT        reduce using rule 278 (allOpt -> R_ALL .)
    S_PARIZQ        reduce using rule 278 (allOpt -> R_ALL .)


state 105

    (273) selectStmt -> selectStmt R_INTERSECT allOpt . selectStmt
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 191

state 106

    (274) selectStmt -> selectStmt R_EXCEPT allOpt . selectStmt
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 192

state 107

    (19) createOpts -> R_TABLE ifNotExists . idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 193

state 108

    (24) ifNotExists -> R_IF . R_NOT R_EXISTS

    R_NOT           shift and go to state 194


state 109

    (20) createOpts -> orReplace R_DATABASE . ifNotExists idOrString createOwner createMode
    (24) ifNotExists -> . R_IF R_NOT R_EXISTS
    (25) ifNotExists -> .

    R_IF            shift and go to state 108
    ID              reduce using rule 25 (ifNotExists -> .)
    STRING          reduce using rule 25 (ifNotExists -> .)
    CHARACTER       reduce using rule 25 (ifNotExists -> .)

    ifNotExists                    shift and go to state 195

state 110

    (23) createOpts -> R_TYPE ifNotExists . ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 196


state 111

    (21) orReplace -> R_OR R_REPLACE .

    R_DATABASE      reduce using rule 21 (orReplace -> R_OR R_REPLACE .)


state 112

    (347) showStmt -> R_SHOW R_DATABASES likeOpt .

    S_PUNTOCOMA     reduce using rule 347 (showStmt -> R_SHOW R_DATABASES likeOpt .)


state 113

    (348) likeOpt -> R_LIKE . STRING

    STRING          shift and go to state 197


state 114

    (239) alterStmt -> R_ALTER R_DATABASE idOrString . alterDb
    (241) alterDb -> . R_RENAME R_TO idOrString
    (242) alterDb -> . R_OWNER R_TO ownerOPts

    R_RENAME        shift and go to state 199
    R_OWNER         shift and go to state 200

    alterDb                        shift and go to state 198

state 115

    (14) idOrString -> ID .

    R_RENAME        reduce using rule 14 (idOrString -> ID .)
    R_OWNER         reduce using rule 14 (idOrString -> ID .)
    R_ADD           reduce using rule 14 (idOrString -> ID .)
    R_ALTER         reduce using rule 14 (idOrString -> ID .)
    R_DROP          reduce using rule 14 (idOrString -> ID .)
    R_SET           reduce using rule 14 (idOrString -> ID .)
    S_COMA          reduce using rule 14 (idOrString -> ID .)
    R_WHERE         reduce using rule 14 (idOrString -> ID .)
    S_PUNTOCOMA     reduce using rule 14 (idOrString -> ID .)
    R_NATURAL       reduce using rule 14 (idOrString -> ID .)
    R_INNER         reduce using rule 14 (idOrString -> ID .)
    R_LEFT          reduce using rule 14 (idOrString -> ID .)
    R_RIGHT         reduce using rule 14 (idOrString -> ID .)
    R_FULL          reduce using rule 14 (idOrString -> ID .)
    R_GROUP         reduce using rule 14 (idOrString -> ID .)
    R_LIMIT         reduce using rule 14 (idOrString -> ID .)
    R_ORDER         reduce using rule 14 (idOrString -> ID .)
    R_UNION         reduce using rule 14 (idOrString -> ID .)
    R_INTERSECT     reduce using rule 14 (idOrString -> ID .)
    R_EXCEPT        reduce using rule 14 (idOrString -> ID .)
    S_PARDER        reduce using rule 14 (idOrString -> ID .)
    R_FROM          reduce using rule 14 (idOrString -> ID .)
    S_PARIZQ        reduce using rule 14 (idOrString -> ID .)
    R_ON            reduce using rule 14 (idOrString -> ID .)
    R_USING         reduce using rule 14 (idOrString -> ID .)
    R_MODE          reduce using rule 14 (idOrString -> ID .)


state 116

    (15) idOrString -> STRING .

    R_RENAME        reduce using rule 15 (idOrString -> STRING .)
    R_OWNER         reduce using rule 15 (idOrString -> STRING .)
    R_ADD           reduce using rule 15 (idOrString -> STRING .)
    R_ALTER         reduce using rule 15 (idOrString -> STRING .)
    R_DROP          reduce using rule 15 (idOrString -> STRING .)
    R_SET           reduce using rule 15 (idOrString -> STRING .)
    S_COMA          reduce using rule 15 (idOrString -> STRING .)
    R_WHERE         reduce using rule 15 (idOrString -> STRING .)
    S_PUNTOCOMA     reduce using rule 15 (idOrString -> STRING .)
    R_NATURAL       reduce using rule 15 (idOrString -> STRING .)
    R_INNER         reduce using rule 15 (idOrString -> STRING .)
    R_LEFT          reduce using rule 15 (idOrString -> STRING .)
    R_RIGHT         reduce using rule 15 (idOrString -> STRING .)
    R_FULL          reduce using rule 15 (idOrString -> STRING .)
    R_GROUP         reduce using rule 15 (idOrString -> STRING .)
    R_LIMIT         reduce using rule 15 (idOrString -> STRING .)
    R_ORDER         reduce using rule 15 (idOrString -> STRING .)
    R_UNION         reduce using rule 15 (idOrString -> STRING .)
    R_INTERSECT     reduce using rule 15 (idOrString -> STRING .)
    R_EXCEPT        reduce using rule 15 (idOrString -> STRING .)
    S_PARDER        reduce using rule 15 (idOrString -> STRING .)
    R_FROM          reduce using rule 15 (idOrString -> STRING .)
    S_PARIZQ        reduce using rule 15 (idOrString -> STRING .)
    R_ON            reduce using rule 15 (idOrString -> STRING .)
    R_USING         reduce using rule 15 (idOrString -> STRING .)
    R_MODE          reduce using rule 15 (idOrString -> STRING .)


state 117

    (16) idOrString -> CHARACTER .

    R_RENAME        reduce using rule 16 (idOrString -> CHARACTER .)
    R_OWNER         reduce using rule 16 (idOrString -> CHARACTER .)
    R_ADD           reduce using rule 16 (idOrString -> CHARACTER .)
    R_ALTER         reduce using rule 16 (idOrString -> CHARACTER .)
    R_DROP          reduce using rule 16 (idOrString -> CHARACTER .)
    R_SET           reduce using rule 16 (idOrString -> CHARACTER .)
    S_COMA          reduce using rule 16 (idOrString -> CHARACTER .)
    R_WHERE         reduce using rule 16 (idOrString -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 16 (idOrString -> CHARACTER .)
    R_NATURAL       reduce using rule 16 (idOrString -> CHARACTER .)
    R_INNER         reduce using rule 16 (idOrString -> CHARACTER .)
    R_LEFT          reduce using rule 16 (idOrString -> CHARACTER .)
    R_RIGHT         reduce using rule 16 (idOrString -> CHARACTER .)
    R_FULL          reduce using rule 16 (idOrString -> CHARACTER .)
    R_GROUP         reduce using rule 16 (idOrString -> CHARACTER .)
    R_LIMIT         reduce using rule 16 (idOrString -> CHARACTER .)
    R_ORDER         reduce using rule 16 (idOrString -> CHARACTER .)
    R_UNION         reduce using rule 16 (idOrString -> CHARACTER .)
    R_INTERSECT     reduce using rule 16 (idOrString -> CHARACTER .)
    R_EXCEPT        reduce using rule 16 (idOrString -> CHARACTER .)
    S_PARDER        reduce using rule 16 (idOrString -> CHARACTER .)
    R_FROM          reduce using rule 16 (idOrString -> CHARACTER .)
    S_PARIZQ        reduce using rule 16 (idOrString -> CHARACTER .)
    R_ON            reduce using rule 16 (idOrString -> CHARACTER .)
    R_USING         reduce using rule 16 (idOrString -> CHARACTER .)
    R_MODE          reduce using rule 16 (idOrString -> CHARACTER .)


state 118

    (240) alterStmt -> R_ALTER R_TABLE idOrString . alterTableList
    (246) alterTableList -> . alterTableList S_COMA alterTable
    (247) alterTableList -> . alterTable
    (248) alterTable -> . R_ADD alterAdd
    (249) alterTable -> . R_ALTER alterAlter
    (250) alterTable -> . R_DROP alterDrop
    (251) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 204
    R_ALTER         shift and go to state 201
    R_DROP          shift and go to state 205
    R_RENAME        shift and go to state 206

    alterTableList                 shift and go to state 202
    alterTable                     shift and go to state 203

state 119

    (263) dropStmt -> R_DROP R_TABLE ifExists . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 207

state 120

    (265) ifExists -> R_IF . R_EXISTS

    R_EXISTS        shift and go to state 208


state 121

    (264) dropStmt -> R_DROP R_DATABASE ifExists . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 209

state 122

    (334) insertStmt -> R_INSERT R_INTO ID . paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (335) paramsColumn -> . S_PARIZQ idList S_PARDER
    (336) paramsColumn -> .

    S_PARIZQ        shift and go to state 211
    R_VALUES        reduce using rule 336 (paramsColumn -> .)

    paramsColumn                   shift and go to state 210

state 123

    (275) selectStmt -> S_PARIZQ selectStmt S_PARDER .

    S_PUNTOCOMA     reduce using rule 275 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 275 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 275 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 275 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 275 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)


state 124

    (337) updateStmt -> R_UPDATE fromBody R_SET . updateCols whereCl
    (338) updateCols -> . updateCols S_COMA updateVals
    (339) updateCols -> . updateVals
    (340) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 214

    updateCols                     shift and go to state 212
    updateVals                     shift and go to state 213

state 125

    (291) fromBody -> ID optAlias .

    R_SET           reduce using rule 291 (fromBody -> ID optAlias .)
    S_COMA          reduce using rule 291 (fromBody -> ID optAlias .)
    R_WHERE         reduce using rule 291 (fromBody -> ID optAlias .)
    S_PUNTOCOMA     reduce using rule 291 (fromBody -> ID optAlias .)
    R_NATURAL       reduce using rule 291 (fromBody -> ID optAlias .)
    R_INNER         reduce using rule 291 (fromBody -> ID optAlias .)
    R_LEFT          reduce using rule 291 (fromBody -> ID optAlias .)
    R_RIGHT         reduce using rule 291 (fromBody -> ID optAlias .)
    R_FULL          reduce using rule 291 (fromBody -> ID optAlias .)
    R_GROUP         reduce using rule 291 (fromBody -> ID optAlias .)
    R_LIMIT         reduce using rule 291 (fromBody -> ID optAlias .)
    R_ORDER         reduce using rule 291 (fromBody -> ID optAlias .)
    R_UNION         reduce using rule 291 (fromBody -> ID optAlias .)
    R_INTERSECT     reduce using rule 291 (fromBody -> ID optAlias .)
    R_EXCEPT        reduce using rule 291 (fromBody -> ID optAlias .)
    S_PARDER        reduce using rule 291 (fromBody -> ID optAlias .)


state 126

    (286) optAlias -> R_AS . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 215

state 127

    (287) optAlias -> idOrString .

    R_SET           reduce using rule 287 (optAlias -> idOrString .)
    S_COMA          reduce using rule 287 (optAlias -> idOrString .)
    R_WHERE         reduce using rule 287 (optAlias -> idOrString .)
    S_PUNTOCOMA     reduce using rule 287 (optAlias -> idOrString .)
    R_NATURAL       reduce using rule 287 (optAlias -> idOrString .)
    R_INNER         reduce using rule 287 (optAlias -> idOrString .)
    R_LEFT          reduce using rule 287 (optAlias -> idOrString .)
    R_RIGHT         reduce using rule 287 (optAlias -> idOrString .)
    R_FULL          reduce using rule 287 (optAlias -> idOrString .)
    R_GROUP         reduce using rule 287 (optAlias -> idOrString .)
    R_LIMIT         reduce using rule 287 (optAlias -> idOrString .)
    R_ORDER         reduce using rule 287 (optAlias -> idOrString .)
    R_UNION         reduce using rule 287 (optAlias -> idOrString .)
    R_INTERSECT     reduce using rule 287 (optAlias -> idOrString .)
    R_EXCEPT        reduce using rule 287 (optAlias -> idOrString .)
    S_PARDER        reduce using rule 287 (optAlias -> idOrString .)
    R_FROM          reduce using rule 287 (optAlias -> idOrString .)
    R_ON            reduce using rule 287 (optAlias -> idOrString .)
    R_USING         reduce using rule 287 (optAlias -> idOrString .)


state 128

    (292) fromBody -> S_PARIZQ selectStmt . S_PARDER R_AS idOrString
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 216
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 129

    (343) deleteStmt -> R_DELETE fromCl whereCl .

    S_PUNTOCOMA     reduce using rule 343 (deleteStmt -> R_DELETE fromCl whereCl .)


state 130

    (308) whereCl -> R_WHERE . expBool
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 79
    S_PARIZQ        shift and go to state 178
    R_EXISTS        shift and go to state 97
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    expBool                        shift and go to state 217
    boolean                        shift and go to state 80
    datatype                       shift and go to state 179
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    stringExp                      shift and go to state 102
    timeStamp                      shift and go to state 93

state 131

    (276) fromCl -> R_FROM tableExp .
    (289) tableExp -> tableExp . S_COMA fromBody

    R_WHERE         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    S_PUNTOCOMA     reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_NATURAL       reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_INNER         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_LEFT          reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_RIGHT         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_FULL          reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_GROUP         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_LIMIT         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_ORDER         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_UNION         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_INTERSECT     reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_EXCEPT        reduce using rule 276 (fromCl -> R_FROM tableExp .)
    S_PARDER        reduce using rule 276 (fromCl -> R_FROM tableExp .)
    S_COMA          shift and go to state 218


state 132

    (290) tableExp -> fromBody .

    S_COMA          reduce using rule 290 (tableExp -> fromBody .)
    R_WHERE         reduce using rule 290 (tableExp -> fromBody .)
    S_PUNTOCOMA     reduce using rule 290 (tableExp -> fromBody .)
    R_NATURAL       reduce using rule 290 (tableExp -> fromBody .)
    R_INNER         reduce using rule 290 (tableExp -> fromBody .)
    R_LEFT          reduce using rule 290 (tableExp -> fromBody .)
    R_RIGHT         reduce using rule 290 (tableExp -> fromBody .)
    R_FULL          reduce using rule 290 (tableExp -> fromBody .)
    R_GROUP         reduce using rule 290 (tableExp -> fromBody .)
    R_LIMIT         reduce using rule 290 (tableExp -> fromBody .)
    R_ORDER         reduce using rule 290 (tableExp -> fromBody .)
    R_UNION         reduce using rule 290 (tableExp -> fromBody .)
    R_INTERSECT     reduce using rule 290 (tableExp -> fromBody .)
    R_EXCEPT        reduce using rule 290 (tableExp -> fromBody .)
    S_PARDER        reduce using rule 290 (tableExp -> fromBody .)


state 133

    (344) truncateStmt -> R_TRUNCATE tableOpt ID .

    S_PUNTOCOMA     reduce using rule 344 (truncateStmt -> R_TRUNCATE tableOpt ID .)


state 134

    (267) selectStmt -> R_SELECT R_DISTINCT selectParams . fromCl whereCl groupByCl limitCl
    (276) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 56

    fromCl                         shift and go to state 219

state 135

    (268) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl limitCl
    (269) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl limitCl
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .
    (293) joinList -> . joinList2
    (294) joinList2 -> . joinList2 joinCl
    (295) joinList2 -> . joinCl
    (296) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (297) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (298) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (301) joinOpt -> . R_INNER
    (302) joinOpt -> . R_LEFT
    (303) joinOpt -> . R_LEFT R_OUTER
    (304) joinOpt -> . R_RIGHT
    (305) joinOpt -> . R_RIGHT R_OUTER
    (306) joinOpt -> . R_FULL
    (307) joinOpt -> . R_FULL R_OUTER

    R_WHERE         shift and go to state 130
    R_GROUP         reduce using rule 309 (whereCl -> .)
    R_LIMIT         reduce using rule 309 (whereCl -> .)
    R_ORDER         reduce using rule 309 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)
    R_UNION         reduce using rule 309 (whereCl -> .)
    R_INTERSECT     reduce using rule 309 (whereCl -> .)
    R_EXCEPT        reduce using rule 309 (whereCl -> .)
    S_PARDER        reduce using rule 309 (whereCl -> .)
    R_NATURAL       shift and go to state 225
    R_INNER         shift and go to state 226
    R_LEFT          shift and go to state 227
    R_RIGHT         shift and go to state 228
    R_FULL          shift and go to state 229

    whereCl                        shift and go to state 220
    joinList                       shift and go to state 221
    joinList2                      shift and go to state 222
    joinCl                         shift and go to state 223
    joinOpt                        shift and go to state 224

state 136

    (282) selectList -> selectList S_COMA . selectListParams optAlias
    (284) selectListParams -> . expresion
    (285) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (95) expresion -> . datatype
    (96) expresion -> . expBool
    (97) expresion -> . S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName

    ID              shift and go to state 66
    S_PARIZQ        shift and go to state 69
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    R_NOT           shift and go to state 79
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_EXISTS        shift and go to state 97
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    selectListParams               shift and go to state 230
    expresion                      shift and go to state 65
    datatype                       shift and go to state 67
    expBool                        shift and go to state 68
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    boolean                        shift and go to state 80
    timeStamp                      shift and go to state 93
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    stringExp                      shift and go to state 102

state 137

    (283) selectList -> selectListParams optAlias .

    S_COMA          reduce using rule 283 (selectList -> selectListParams optAlias .)
    R_FROM          reduce using rule 283 (selectList -> selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 283 (selectList -> selectListParams optAlias .)
    R_UNION         reduce using rule 283 (selectList -> selectListParams optAlias .)
    R_INTERSECT     reduce using rule 283 (selectList -> selectListParams optAlias .)
    R_EXCEPT        reduce using rule 283 (selectList -> selectListParams optAlias .)
    S_PARDER        reduce using rule 283 (selectList -> selectListParams optAlias .)


state 138

    (285) selectListParams -> ID S_PUNTO . O_PRODUCTO
    (223) columnName -> ID S_PUNTO . ID

    O_PRODUCTO      shift and go to state 232
    ID              shift and go to state 231


state 139

    (98) funcCall -> ID S_PARIZQ . paramsList S_PARDER
    (99) funcCall -> ID S_PARIZQ . S_PARDER
    (133) paramsList -> . paramsList S_COMA datatype
    (134) paramsList -> . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    S_PARDER        shift and go to state 234
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    paramsList                     shift and go to state 233
    datatype                       shift and go to state 235
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 140

    (135) datatype -> datatype O_SUMA . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 236
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 141

    (136) datatype -> datatype O_RESTA . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 237
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 142

    (137) datatype -> datatype O_PRODUCTO . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 238
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 143

    (138) datatype -> datatype O_DIVISION . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 239
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 144

    (139) datatype -> datatype O_EXPONENTE . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 240
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 145

    (140) datatype -> datatype O_MODULAR . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 241
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 146

    (141) datatype -> datatype OC_CONCATENAR . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 242
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 147

    (206) boolean -> datatype R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 243


state 148

    (207) boolean -> datatype R_NOT . R_IN S_PARIZQ selectStmt S_PARDER
    (166) expComp -> datatype R_NOT . R_BETWEEN datatype R_AND datatype
    (185) expSubq -> datatype R_NOT . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 244
    R_BETWEEN       shift and go to state 245


state 149

    (157) expComp -> datatype OL_MENORQUE . datatype
    (178) expSubq -> datatype OL_MENORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 246
    subqValues                     shift and go to state 247
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 150

    (158) expComp -> datatype OL_MAYORQUE . datatype
    (179) expSubq -> datatype OL_MAYORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 251
    subqValues                     shift and go to state 252
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 151

    (159) expComp -> datatype OL_MAYORIGUALQUE . datatype
    (180) expSubq -> datatype OL_MAYORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 253
    subqValues                     shift and go to state 254
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 152

    (160) expComp -> datatype OL_MENORIGUALQUE . datatype
    (181) expSubq -> datatype OL_MENORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 255
    subqValues                     shift and go to state 256
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 153

    (161) expComp -> datatype S_IGUAL . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 257
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 154

    (162) expComp -> datatype OL_DISTINTODE . datatype
    (183) expSubq -> datatype OL_DISTINTODE . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 258
    subqValues                     shift and go to state 259
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 155

    (163) expComp -> datatype R_IS . R_DISTINCT R_FROM datatype
    (164) expComp -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype
    (170) expComp -> datatype R_IS . R_NULL
    (171) expComp -> datatype R_IS . R_TRUE
    (172) expComp -> datatype R_IS . R_FALSE
    (173) expComp -> datatype R_IS . R_UNKNOWN
    (174) expComp -> datatype R_IS . R_NOT R_NULL
    (175) expComp -> datatype R_IS . R_NOT R_TRUE
    (176) expComp -> datatype R_IS . R_NOT R_FALSE
    (177) expComp -> datatype R_IS . R_NOT R_UNKNOWN
    (187) expSubq -> datatype R_IS . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> datatype R_IS . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype R_IS . R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype R_IS . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype R_IS . R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype R_IS . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype R_IS . R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype R_IS . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype R_IS . R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 260
    R_NOT           shift and go to state 261
    R_NULL          shift and go to state 262
    R_TRUE          shift and go to state 263
    R_FALSE         shift and go to state 264
    R_UNKNOWN       shift and go to state 265


state 156

    (165) expComp -> datatype R_BETWEEN . datatype R_AND datatype
    (167) expComp -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype
    (184) expSubq -> datatype R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_SYMMETRIC     shift and go to state 267
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 266
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 157

    (168) expComp -> datatype R_ISNULL .
    (191) expSubq -> datatype R_ISNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_OR            reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_IS            reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_AS            reduce using rule 168 (expComp -> datatype R_ISNULL .)
    ID              reduce using rule 168 (expComp -> datatype R_ISNULL .)
    STRING          reduce using rule 168 (expComp -> datatype R_ISNULL .)
    CHARACTER       reduce using rule 168 (expComp -> datatype R_ISNULL .)
    S_COMA          reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_FROM          reduce using rule 168 (expComp -> datatype R_ISNULL .)
    S_PUNTOCOMA     reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_UNION         reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_INTERSECT     reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_EXCEPT        reduce using rule 168 (expComp -> datatype R_ISNULL .)
    S_PARDER        reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_GROUP         reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_LIMIT         reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_ORDER         reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_THEN          reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_NATURAL       reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_INNER         reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_LEFT          reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_RIGHT         reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_FULL          reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_WHERE         reduce using rule 168 (expComp -> datatype R_ISNULL .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 268

state 158

    (169) expComp -> datatype R_NOTNULL .
    (192) expSubq -> datatype R_NOTNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_OR            reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_IS            reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_AS            reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    ID              reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    STRING          reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    CHARACTER       reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    S_COMA          reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_FROM          reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    S_PUNTOCOMA     reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_UNION         reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_INTERSECT     reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_EXCEPT        reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    S_PARDER        reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_GROUP         reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_LIMIT         reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_ORDER         reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_THEN          reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_NATURAL       reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_INNER         reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_LEFT          reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_RIGHT         reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_FULL          reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_WHERE         reduce using rule 169 (expComp -> datatype R_NOTNULL .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 269

state 159

    (182) expSubq -> datatype OL_ESIGUAL . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 270

state 160

    (210) expBool -> expBool R_AND . expBool
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 79
    S_PARIZQ        shift and go to state 178
    R_EXISTS        shift and go to state 97
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    expBool                        shift and go to state 271
    boolean                        shift and go to state 80
    datatype                       shift and go to state 179
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    stringExp                      shift and go to state 102
    timeStamp                      shift and go to state 93

state 161

    (211) expBool -> expBool R_OR . expBool
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 79
    S_PARIZQ        shift and go to state 178
    R_EXISTS        shift and go to state 97
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    expBool                        shift and go to state 272
    boolean                        shift and go to state 80
    datatype                       shift and go to state 179
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    stringExp                      shift and go to state 102
    timeStamp                      shift and go to state 93

state 162

    (214) expBool -> expBool optBoolPredicate .

    R_AND           reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_OR            reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_IS            reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_AS            reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    ID              reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    STRING          reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    CHARACTER       reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    S_COMA          reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_FROM          reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    S_PUNTOCOMA     reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_UNION         reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_INTERSECT     reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_EXCEPT        reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    S_PARDER        reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_GROUP         reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_LIMIT         reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_ORDER         reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_THEN          reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_NATURAL       reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_INNER         reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_LEFT          reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_RIGHT         reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_FULL          reduce using rule 214 (expBool -> expBool optBoolPredicate .)
    R_WHERE         reduce using rule 214 (expBool -> expBool optBoolPredicate .)


state 163

    (216) optBoolPredicate -> R_IS . R_TRUE
    (217) optBoolPredicate -> R_IS . R_FALSE
    (218) optBoolPredicate -> R_IS . R_UNKNOWN
    (219) optBoolPredicate -> R_IS . R_NOT R_TRUE
    (220) optBoolPredicate -> R_IS . R_NOT R_FALSE
    (221) optBoolPredicate -> R_IS . R_NOT R_UNKNOWN

    R_TRUE          shift and go to state 273
    R_FALSE         shift and go to state 274
    R_UNKNOWN       shift and go to state 275
    R_NOT           shift and go to state 276


state 164

    (275) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (156) datatype -> S_PARIZQ . datatype S_PARDER
    (213) expBool -> S_PARIZQ . expBool S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 164
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    R_NOT           shift and go to state 79
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_EXISTS        shift and go to state 97
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    selectStmt                     shift and go to state 51
    datatype                       shift and go to state 166
    expBool                        shift and go to state 167
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    boolean                        shift and go to state 80
    timeStamp                      shift and go to state 93
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    stringExp                      shift and go to state 102

state 165

    (97) expresion -> S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 277
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 166

    (156) datatype -> S_PARIZQ datatype . S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype
    (206) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (157) expComp -> datatype . OL_MENORQUE datatype
    (158) expComp -> datatype . OL_MAYORQUE datatype
    (159) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (160) expComp -> datatype . OL_MENORIGUALQUE datatype
    (161) expComp -> datatype . S_IGUAL datatype
    (162) expComp -> datatype . OL_DISTINTODE datatype
    (163) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (166) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> datatype . R_ISNULL
    (169) expComp -> datatype . R_NOTNULL
    (170) expComp -> datatype . R_IS R_NULL
    (171) expComp -> datatype . R_IS R_TRUE
    (172) expComp -> datatype . R_IS R_FALSE
    (173) expComp -> datatype . R_IS R_UNKNOWN
    (174) expComp -> datatype . R_IS R_NOT R_NULL
    (175) expComp -> datatype . R_IS R_NOT R_TRUE
    (176) expComp -> datatype . R_IS R_NOT R_FALSE
    (177) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (178) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    S_PARDER        shift and go to state 278
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146
    R_IN            shift and go to state 147
    R_NOT           shift and go to state 148
    OL_MENORQUE     shift and go to state 149
    OL_MAYORQUE     shift and go to state 150
    OL_MAYORIGUALQUE shift and go to state 151
    OL_MENORIGUALQUE shift and go to state 152
    S_IGUAL         shift and go to state 153
    OL_DISTINTODE   shift and go to state 154
    R_IS            shift and go to state 155
    R_BETWEEN       shift and go to state 156
    R_ISNULL        shift and go to state 157
    R_NOTNULL       shift and go to state 158
    OL_ESIGUAL      shift and go to state 159


state 167

    (213) expBool -> S_PARIZQ expBool . S_PARDER
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PARDER        shift and go to state 279
    R_AND           shift and go to state 160
    R_OR            shift and go to state 161
    R_IS            shift and go to state 163

    optBoolPredicate               shift and go to state 162

state 168

    (222) columnName -> ID .
    (223) columnName -> ID . S_PUNTO ID
    (98) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (99) funcCall -> ID . S_PARIZQ S_PARDER

    S_PARDER        reduce using rule 222 (columnName -> ID .)
    O_SUMA          reduce using rule 222 (columnName -> ID .)
    O_RESTA         reduce using rule 222 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 222 (columnName -> ID .)
    O_DIVISION      reduce using rule 222 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 222 (columnName -> ID .)
    O_MODULAR       reduce using rule 222 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 222 (columnName -> ID .)
    R_IN            reduce using rule 222 (columnName -> ID .)
    R_NOT           reduce using rule 222 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 222 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 222 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 222 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 222 (columnName -> ID .)
    S_IGUAL         reduce using rule 222 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 222 (columnName -> ID .)
    R_IS            reduce using rule 222 (columnName -> ID .)
    R_BETWEEN       reduce using rule 222 (columnName -> ID .)
    R_ISNULL        reduce using rule 222 (columnName -> ID .)
    R_NOTNULL       reduce using rule 222 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 222 (columnName -> ID .)
    R_LIKE          reduce using rule 222 (columnName -> ID .)
    R_AS            reduce using rule 222 (columnName -> ID .)
    ID              reduce using rule 222 (columnName -> ID .)
    STRING          reduce using rule 222 (columnName -> ID .)
    CHARACTER       reduce using rule 222 (columnName -> ID .)
    S_COMA          reduce using rule 222 (columnName -> ID .)
    R_FROM          reduce using rule 222 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 222 (columnName -> ID .)
    R_UNION         reduce using rule 222 (columnName -> ID .)
    R_INTERSECT     reduce using rule 222 (columnName -> ID .)
    R_EXCEPT        reduce using rule 222 (columnName -> ID .)
    R_AND           reduce using rule 222 (columnName -> ID .)
    R_OR            reduce using rule 222 (columnName -> ID .)
    R_GROUP         reduce using rule 222 (columnName -> ID .)
    R_LIMIT         reduce using rule 222 (columnName -> ID .)
    R_ORDER         reduce using rule 222 (columnName -> ID .)
    R_THEN          reduce using rule 222 (columnName -> ID .)
    R_NATURAL       reduce using rule 222 (columnName -> ID .)
    R_INNER         reduce using rule 222 (columnName -> ID .)
    R_LEFT          reduce using rule 222 (columnName -> ID .)
    R_RIGHT         reduce using rule 222 (columnName -> ID .)
    R_FULL          reduce using rule 222 (columnName -> ID .)
    R_WHERE         reduce using rule 222 (columnName -> ID .)
    R_ALL           reduce using rule 222 (columnName -> ID .)
    R_ANY           reduce using rule 222 (columnName -> ID .)
    R_SOME          reduce using rule 222 (columnName -> ID .)
    S_PUNTO         shift and go to state 280
    S_PARIZQ        shift and go to state 139


state 169

    (149) datatype -> O_SUMA datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 149 (datatype -> O_SUMA datatype .)
    O_RESTA         reduce using rule 149 (datatype -> O_SUMA datatype .)
    O_PRODUCTO      reduce using rule 149 (datatype -> O_SUMA datatype .)
    O_DIVISION      reduce using rule 149 (datatype -> O_SUMA datatype .)
    O_MODULAR       reduce using rule 149 (datatype -> O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_IN            reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_NOT           reduce using rule 149 (datatype -> O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 149 (datatype -> O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 149 (datatype -> O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 149 (datatype -> O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 149 (datatype -> O_SUMA datatype .)
    S_IGUAL         reduce using rule 149 (datatype -> O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_IS            reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_BETWEEN       reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_ISNULL        reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_NOTNULL       reduce using rule 149 (datatype -> O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_AS            reduce using rule 149 (datatype -> O_SUMA datatype .)
    ID              reduce using rule 149 (datatype -> O_SUMA datatype .)
    STRING          reduce using rule 149 (datatype -> O_SUMA datatype .)
    CHARACTER       reduce using rule 149 (datatype -> O_SUMA datatype .)
    S_COMA          reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_FROM          reduce using rule 149 (datatype -> O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_UNION         reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_INTERSECT     reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_EXCEPT        reduce using rule 149 (datatype -> O_SUMA datatype .)
    S_PARDER        reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_AND           reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_OR            reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_GROUP         reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_LIMIT         reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_ORDER         reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_THEN          reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_NATURAL       reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_INNER         reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_LEFT          reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_RIGHT         reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_FULL          reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_WHERE         reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_ALL           reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_ANY           reduce using rule 149 (datatype -> O_SUMA datatype .)
    R_SOME          reduce using rule 149 (datatype -> O_SUMA datatype .)
    O_EXPONENTE     shift and go to state 144

  ! O_EXPONENTE     [ reduce using rule 149 (datatype -> O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 140 ]
  ! O_RESTA         [ shift and go to state 141 ]
  ! O_PRODUCTO      [ shift and go to state 142 ]
  ! O_DIVISION      [ shift and go to state 143 ]
  ! O_MODULAR       [ shift and go to state 145 ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 170

    (150) datatype -> columnName .

    O_SUMA          reduce using rule 150 (datatype -> columnName .)
    O_RESTA         reduce using rule 150 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 150 (datatype -> columnName .)
    O_DIVISION      reduce using rule 150 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 150 (datatype -> columnName .)
    O_MODULAR       reduce using rule 150 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 150 (datatype -> columnName .)
    R_IN            reduce using rule 150 (datatype -> columnName .)
    R_NOT           reduce using rule 150 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 150 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 150 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 150 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 150 (datatype -> columnName .)
    S_IGUAL         reduce using rule 150 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 150 (datatype -> columnName .)
    R_IS            reduce using rule 150 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 150 (datatype -> columnName .)
    R_ISNULL        reduce using rule 150 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 150 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 150 (datatype -> columnName .)
    R_AS            reduce using rule 150 (datatype -> columnName .)
    ID              reduce using rule 150 (datatype -> columnName .)
    STRING          reduce using rule 150 (datatype -> columnName .)
    CHARACTER       reduce using rule 150 (datatype -> columnName .)
    S_COMA          reduce using rule 150 (datatype -> columnName .)
    R_FROM          reduce using rule 150 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 150 (datatype -> columnName .)
    R_UNION         reduce using rule 150 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 150 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 150 (datatype -> columnName .)
    S_PARDER        reduce using rule 150 (datatype -> columnName .)
    R_AND           reduce using rule 150 (datatype -> columnName .)
    R_OR            reduce using rule 150 (datatype -> columnName .)
    R_GROUP         reduce using rule 150 (datatype -> columnName .)
    R_LIMIT         reduce using rule 150 (datatype -> columnName .)
    R_ORDER         reduce using rule 150 (datatype -> columnName .)
    R_THEN          reduce using rule 150 (datatype -> columnName .)
    R_NATURAL       reduce using rule 150 (datatype -> columnName .)
    R_INNER         reduce using rule 150 (datatype -> columnName .)
    R_LEFT          reduce using rule 150 (datatype -> columnName .)
    R_RIGHT         reduce using rule 150 (datatype -> columnName .)
    R_FULL          reduce using rule 150 (datatype -> columnName .)
    R_WHERE         reduce using rule 150 (datatype -> columnName .)
    R_ALL           reduce using rule 150 (datatype -> columnName .)
    R_ANY           reduce using rule 150 (datatype -> columnName .)
    R_SOME          reduce using rule 150 (datatype -> columnName .)


state 171

    (156) datatype -> S_PARIZQ . datatype S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 281
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 172

    (127) literal -> STRING .

    O_SUMA          reduce using rule 127 (literal -> STRING .)
    O_RESTA         reduce using rule 127 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 127 (literal -> STRING .)
    O_DIVISION      reduce using rule 127 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 127 (literal -> STRING .)
    O_MODULAR       reduce using rule 127 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 127 (literal -> STRING .)
    R_IN            reduce using rule 127 (literal -> STRING .)
    R_NOT           reduce using rule 127 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 127 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 127 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 127 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 127 (literal -> STRING .)
    S_IGUAL         reduce using rule 127 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 127 (literal -> STRING .)
    R_IS            reduce using rule 127 (literal -> STRING .)
    R_BETWEEN       reduce using rule 127 (literal -> STRING .)
    R_ISNULL        reduce using rule 127 (literal -> STRING .)
    R_NOTNULL       reduce using rule 127 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 127 (literal -> STRING .)
    R_AS            reduce using rule 127 (literal -> STRING .)
    ID              reduce using rule 127 (literal -> STRING .)
    STRING          reduce using rule 127 (literal -> STRING .)
    CHARACTER       reduce using rule 127 (literal -> STRING .)
    S_COMA          reduce using rule 127 (literal -> STRING .)
    R_FROM          reduce using rule 127 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 127 (literal -> STRING .)
    R_UNION         reduce using rule 127 (literal -> STRING .)
    R_INTERSECT     reduce using rule 127 (literal -> STRING .)
    R_EXCEPT        reduce using rule 127 (literal -> STRING .)
    S_PARDER        reduce using rule 127 (literal -> STRING .)
    R_AND           reduce using rule 127 (literal -> STRING .)
    R_OR            reduce using rule 127 (literal -> STRING .)
    R_GROUP         reduce using rule 127 (literal -> STRING .)
    R_LIMIT         reduce using rule 127 (literal -> STRING .)
    R_ORDER         reduce using rule 127 (literal -> STRING .)
    R_THEN          reduce using rule 127 (literal -> STRING .)
    R_NATURAL       reduce using rule 127 (literal -> STRING .)
    R_INNER         reduce using rule 127 (literal -> STRING .)
    R_LEFT          reduce using rule 127 (literal -> STRING .)
    R_RIGHT         reduce using rule 127 (literal -> STRING .)
    R_FULL          reduce using rule 127 (literal -> STRING .)
    R_WHERE         reduce using rule 127 (literal -> STRING .)
    R_ALL           reduce using rule 127 (literal -> STRING .)
    R_ANY           reduce using rule 127 (literal -> STRING .)
    R_SOME          reduce using rule 127 (literal -> STRING .)
    R_END           reduce using rule 127 (literal -> STRING .)
    R_ELSE          reduce using rule 127 (literal -> STRING .)
    R_WHEN          reduce using rule 127 (literal -> STRING .)
    R_DEFAULT       reduce using rule 127 (literal -> STRING .)
    R_NULL          reduce using rule 127 (literal -> STRING .)
    R_PRIMARY       reduce using rule 127 (literal -> STRING .)
    R_REFERENCES    reduce using rule 127 (literal -> STRING .)
    R_CONSTRAINT    reduce using rule 127 (literal -> STRING .)
    R_UNIQUE        reduce using rule 127 (literal -> STRING .)
    R_CHECK         reduce using rule 127 (literal -> STRING .)


state 173

    (148) datatype -> O_RESTA datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 148 (datatype -> O_RESTA datatype .)
    O_RESTA         reduce using rule 148 (datatype -> O_RESTA datatype .)
    O_PRODUCTO      reduce using rule 148 (datatype -> O_RESTA datatype .)
    O_DIVISION      reduce using rule 148 (datatype -> O_RESTA datatype .)
    O_MODULAR       reduce using rule 148 (datatype -> O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_IN            reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_NOT           reduce using rule 148 (datatype -> O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 148 (datatype -> O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 148 (datatype -> O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 148 (datatype -> O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 148 (datatype -> O_RESTA datatype .)
    S_IGUAL         reduce using rule 148 (datatype -> O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_IS            reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_BETWEEN       reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_ISNULL        reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_NOTNULL       reduce using rule 148 (datatype -> O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_AS            reduce using rule 148 (datatype -> O_RESTA datatype .)
    ID              reduce using rule 148 (datatype -> O_RESTA datatype .)
    STRING          reduce using rule 148 (datatype -> O_RESTA datatype .)
    CHARACTER       reduce using rule 148 (datatype -> O_RESTA datatype .)
    S_COMA          reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_FROM          reduce using rule 148 (datatype -> O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_UNION         reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_INTERSECT     reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_EXCEPT        reduce using rule 148 (datatype -> O_RESTA datatype .)
    S_PARDER        reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_AND           reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_OR            reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_GROUP         reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_LIMIT         reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_ORDER         reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_THEN          reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_NATURAL       reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_INNER         reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_LEFT          reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_RIGHT         reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_FULL          reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_WHERE         reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_ALL           reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_ANY           reduce using rule 148 (datatype -> O_RESTA datatype .)
    R_SOME          reduce using rule 148 (datatype -> O_RESTA datatype .)
    O_EXPONENTE     shift and go to state 144

  ! O_EXPONENTE     [ reduce using rule 148 (datatype -> O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 140 ]
  ! O_RESTA         [ shift and go to state 141 ]
  ! O_PRODUCTO      [ shift and go to state 142 ]
  ! O_DIVISION      [ shift and go to state 143 ]
  ! O_MODULAR       [ shift and go to state 145 ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 174

    (142) datatype -> R_CASE caseList . optElse R_END
    (143) caseList -> caseList . caseWhen
    (146) optElse -> . R_ELSE literal
    (147) optElse -> .
    (145) caseWhen -> . R_WHEN expBool R_THEN literal

    R_ELSE          shift and go to state 284
    R_END           reduce using rule 147 (optElse -> .)
    R_WHEN          shift and go to state 176

    optElse                        shift and go to state 282
    caseWhen                       shift and go to state 283

state 175

    (144) caseList -> caseWhen .

    R_ELSE          reduce using rule 144 (caseList -> caseWhen .)
    R_WHEN          reduce using rule 144 (caseList -> caseWhen .)
    R_END           reduce using rule 144 (caseList -> caseWhen .)


state 176

    (145) caseWhen -> R_WHEN . expBool R_THEN literal
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 79
    S_PARIZQ        shift and go to state 178
    R_EXISTS        shift and go to state 97
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    expBool                        shift and go to state 285
    literal                        shift and go to state 74
    boolean                        shift and go to state 80
    datatype                       shift and go to state 179
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    columnName                     shift and go to state 73
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    stringExp                      shift and go to state 102
    timeStamp                      shift and go to state 93

state 177

    (212) expBool -> R_NOT expBool .
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 212 (expBool -> R_NOT expBool .)
    ID              reduce using rule 212 (expBool -> R_NOT expBool .)
    STRING          reduce using rule 212 (expBool -> R_NOT expBool .)
    CHARACTER       reduce using rule 212 (expBool -> R_NOT expBool .)
    S_COMA          reduce using rule 212 (expBool -> R_NOT expBool .)
    R_FROM          reduce using rule 212 (expBool -> R_NOT expBool .)
    S_PUNTOCOMA     reduce using rule 212 (expBool -> R_NOT expBool .)
    R_UNION         reduce using rule 212 (expBool -> R_NOT expBool .)
    R_INTERSECT     reduce using rule 212 (expBool -> R_NOT expBool .)
    R_EXCEPT        reduce using rule 212 (expBool -> R_NOT expBool .)
    S_PARDER        reduce using rule 212 (expBool -> R_NOT expBool .)
    R_GROUP         reduce using rule 212 (expBool -> R_NOT expBool .)
    R_LIMIT         reduce using rule 212 (expBool -> R_NOT expBool .)
    R_ORDER         reduce using rule 212 (expBool -> R_NOT expBool .)
    R_THEN          reduce using rule 212 (expBool -> R_NOT expBool .)
    R_NATURAL       reduce using rule 212 (expBool -> R_NOT expBool .)
    R_INNER         reduce using rule 212 (expBool -> R_NOT expBool .)
    R_LEFT          reduce using rule 212 (expBool -> R_NOT expBool .)
    R_RIGHT         reduce using rule 212 (expBool -> R_NOT expBool .)
    R_FULL          reduce using rule 212 (expBool -> R_NOT expBool .)
    R_WHERE         reduce using rule 212 (expBool -> R_NOT expBool .)
    R_AND           shift and go to state 160
    R_OR            shift and go to state 161
    R_IS            shift and go to state 163

  ! R_AND           [ reduce using rule 212 (expBool -> R_NOT expBool .) ]
  ! R_OR            [ reduce using rule 212 (expBool -> R_NOT expBool .) ]
  ! R_IS            [ reduce using rule 212 (expBool -> R_NOT expBool .) ]

    optBoolPredicate               shift and go to state 162

state 178

    (213) expBool -> S_PARIZQ . expBool S_PARDER
    (156) datatype -> S_PARIZQ . datatype S_PARDER
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName

    R_NOT           shift and go to state 79
    S_PARIZQ        shift and go to state 178
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    R_EXISTS        shift and go to state 97
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    expBool                        shift and go to state 167
    datatype                       shift and go to state 166
    boolean                        shift and go to state 80
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    timeStamp                      shift and go to state 93
    stringExp                      shift and go to state 102

state 179

    (206) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype
    (157) expComp -> datatype . OL_MENORQUE datatype
    (158) expComp -> datatype . OL_MAYORQUE datatype
    (159) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (160) expComp -> datatype . OL_MENORIGUALQUE datatype
    (161) expComp -> datatype . S_IGUAL datatype
    (162) expComp -> datatype . OL_DISTINTODE datatype
    (163) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (166) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> datatype . R_ISNULL
    (169) expComp -> datatype . R_NOTNULL
    (170) expComp -> datatype . R_IS R_NULL
    (171) expComp -> datatype . R_IS R_TRUE
    (172) expComp -> datatype . R_IS R_FALSE
    (173) expComp -> datatype . R_IS R_UNKNOWN
    (174) expComp -> datatype . R_IS R_NOT R_NULL
    (175) expComp -> datatype . R_IS R_NOT R_TRUE
    (176) expComp -> datatype . R_IS R_NOT R_FALSE
    (177) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (178) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 147
    R_NOT           shift and go to state 148
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146
    OL_MENORQUE     shift and go to state 149
    OL_MAYORQUE     shift and go to state 150
    OL_MAYORIGUALQUE shift and go to state 151
    OL_MENORIGUALQUE shift and go to state 152
    S_IGUAL         shift and go to state 153
    OL_DISTINTODE   shift and go to state 154
    R_IS            shift and go to state 155
    R_BETWEEN       shift and go to state 156
    R_ISNULL        shift and go to state 157
    R_NOTNULL       shift and go to state 158
    OL_ESIGUAL      shift and go to state 159


state 180

    (100) funcCall -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 286


state 181

    (101) funcCall -> R_COUNT S_PARIZQ . datatype S_PARDER
    (102) funcCall -> R_COUNT S_PARIZQ . O_PRODUCTO S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    O_PRODUCTO      shift and go to state 288
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 287
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 182

    (103) funcCall -> R_SUM S_PARIZQ . datatype S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 289
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 183

    (104) funcCall -> R_PROM S_PARIZQ . datatype S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 290
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 184

    (105) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM columnName S_PARDER
    (109) optsExtract -> . R_YEAR
    (110) optsExtract -> . R_MONTH
    (111) optsExtract -> . R_DAY
    (112) optsExtract -> . R_HOUR
    (113) optsExtract -> . R_MINUTE
    (114) optsExtract -> . R_SECOND

    R_YEAR          shift and go to state 292
    R_MONTH         shift and go to state 293
    R_DAY           shift and go to state 294
    R_HOUR          shift and go to state 295
    R_MINUTE        shift and go to state 296
    R_SECOND        shift and go to state 297

    optsExtract                    shift and go to state 291

state 185

    (115) datePart -> R_DATE_PART S_PARIZQ . STRING S_COMA dateSource S_PARDER

    STRING          shift and go to state 298


state 186

    (205) boolean -> R_EXISTS S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 299

state 187

    (107) timeStamp -> R_TIMESTAMP STRING .

    O_SUMA          reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    O_RESTA         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    O_PRODUCTO      reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    O_DIVISION      reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    O_EXPONENTE     reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    O_MODULAR       reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    OC_CONCATENAR   reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_IN            reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOT           reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORQUE     reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORQUE     reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORIGUALQUE reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORIGUALQUE reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    S_IGUAL         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    OL_DISTINTODE   reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_IS            reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_BETWEEN       reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_ISNULL        reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOTNULL       reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    OL_ESIGUAL      reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_AS            reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    ID              reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    STRING          reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    CHARACTER       reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    S_COMA          reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_FROM          reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    S_PUNTOCOMA     reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_UNION         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_INTERSECT     reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_EXCEPT        reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    S_PARDER        reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_AND           reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_OR            reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_GROUP         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_LIMIT         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_ORDER         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_THEN          reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_NATURAL       reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_INNER         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_LEFT          reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_RIGHT         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_FULL          reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_WHERE         reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_ALL           reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_ANY           reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)
    R_SOME          reduce using rule 107 (timeStamp -> R_TIMESTAMP STRING .)


state 188

    (108) timeStamp -> R_INTERVAL STRING .

    O_SUMA          reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    O_RESTA         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    O_PRODUCTO      reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    O_DIVISION      reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    O_EXPONENTE     reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    O_MODULAR       reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    OC_CONCATENAR   reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_IN            reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_NOT           reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORQUE     reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORQUE     reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORIGUALQUE reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORIGUALQUE reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    S_IGUAL         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    OL_DISTINTODE   reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_IS            reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_BETWEEN       reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_ISNULL        reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_NOTNULL       reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    OL_ESIGUAL      reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_AS            reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    ID              reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    STRING          reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    CHARACTER       reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    S_COMA          reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_FROM          reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    S_PUNTOCOMA     reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_UNION         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_INTERSECT     reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_EXCEPT        reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    S_PARDER        reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_AND           reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_OR            reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_GROUP         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_LIMIT         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_ORDER         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_THEN          reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_NATURAL       reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_INNER         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_LEFT          reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_RIGHT         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_FULL          reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_WHERE         reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_ALL           reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_ANY           reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)
    R_SOME          reduce using rule 108 (timeStamp -> R_INTERVAL STRING .)


state 189

    (199) expSubq -> stringExp R_LIKE . STRING

    STRING          shift and go to state 300


state 190

    (272) selectStmt -> selectStmt R_UNION allOpt selectStmt .
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 272 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_UNION         reduce using rule 272 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_INTERSECT     reduce using rule 272 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_EXCEPT        reduce using rule 272 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    S_PARDER        reduce using rule 272 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 36 ]
  ! R_INTERSECT     [ shift and go to state 37 ]
  ! R_EXCEPT        [ shift and go to state 38 ]


state 191

    (273) selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 273 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_UNION         reduce using rule 273 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 273 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 273 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    S_PARDER        reduce using rule 273 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 36 ]
  ! R_INTERSECT     [ shift and go to state 37 ]
  ! R_EXCEPT        [ shift and go to state 38 ]


state 192

    (274) selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 274 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_UNION         reduce using rule 274 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 274 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 274 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    S_PARDER        reduce using rule 274 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 36 ]
  ! R_INTERSECT     [ shift and go to state 37 ]
  ! R_EXCEPT        [ shift and go to state 38 ]


state 193

    (19) createOpts -> R_TABLE ifNotExists idOrString . S_PARIZQ createTableList S_PARDER inheritsOpt

    S_PARIZQ        shift and go to state 301


state 194

    (24) ifNotExists -> R_IF R_NOT . R_EXISTS

    R_EXISTS        shift and go to state 302


state 195

    (20) createOpts -> orReplace R_DATABASE ifNotExists . idOrString createOwner createMode
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 303

state 196

    (23) createOpts -> R_TYPE ifNotExists ID . R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    R_AS            shift and go to state 304


state 197

    (348) likeOpt -> R_LIKE STRING .

    S_PUNTOCOMA     reduce using rule 348 (likeOpt -> R_LIKE STRING .)


state 198

    (239) alterStmt -> R_ALTER R_DATABASE idOrString alterDb .

    S_PUNTOCOMA     reduce using rule 239 (alterStmt -> R_ALTER R_DATABASE idOrString alterDb .)


state 199

    (241) alterDb -> R_RENAME . R_TO idOrString

    R_TO            shift and go to state 305


state 200

    (242) alterDb -> R_OWNER . R_TO ownerOPts

    R_TO            shift and go to state 306


state 201

    (249) alterTable -> R_ALTER . alterAlter
    (257) alterAlter -> . R_COLUMN ID R_SET nullOpt
    (258) alterAlter -> . R_COLUMN ID R_SET defaultVal
    (259) alterAlter -> . R_COLUMN ID R_TYPE types

    R_COLUMN        shift and go to state 308

    alterAlter                     shift and go to state 307

state 202

    (240) alterStmt -> R_ALTER R_TABLE idOrString alterTableList .
    (246) alterTableList -> alterTableList . S_COMA alterTable

    S_PUNTOCOMA     reduce using rule 240 (alterStmt -> R_ALTER R_TABLE idOrString alterTableList .)
    S_COMA          shift and go to state 309


state 203

    (247) alterTableList -> alterTable .

    S_COMA          reduce using rule 247 (alterTableList -> alterTable .)
    S_PUNTOCOMA     reduce using rule 247 (alterTableList -> alterTable .)


state 204

    (248) alterTable -> R_ADD . alterAdd
    (252) alterAdd -> . R_COLUMN ID types
    (253) alterAdd -> . createConstraint
    (254) alterAdd -> . createPrimary
    (255) alterAdd -> . createForeign
    (256) alterAdd -> . constrName R_UNIQUE S_PARIZQ ID S_PARDER
    (45) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (47) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (48) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (49) constrName -> . R_CONSTRAINT ID
    (50) constrName -> .

    R_COLUMN        shift and go to state 311
    R_PRIMARY       shift and go to state 316
    R_CONSTRAINT    shift and go to state 317
    R_UNIQUE        reduce using rule 50 (constrName -> .)
    R_CHECK         reduce using rule 50 (constrName -> .)
    R_FOREIGN       reduce using rule 50 (constrName -> .)

    alterAdd                       shift and go to state 310
    createConstraint               shift and go to state 312
    createPrimary                  shift and go to state 313
    createForeign                  shift and go to state 314
    constrName                     shift and go to state 315

state 205

    (250) alterTable -> R_DROP . alterDrop
    (260) alterDrop -> . R_CONSTRAINT ID
    (261) alterDrop -> . R_COLUMN ID

    R_CONSTRAINT    shift and go to state 319
    R_COLUMN        shift and go to state 320

    alterDrop                      shift and go to state 318

state 206

    (251) alterTable -> R_RENAME . alterRename
    (262) alterRename -> . R_COLUMN ID R_TO ID

    R_COLUMN        shift and go to state 322

    alterRename                    shift and go to state 321

state 207

    (263) dropStmt -> R_DROP R_TABLE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 263 (dropStmt -> R_DROP R_TABLE ifExists idOrString .)


state 208

    (265) ifExists -> R_IF R_EXISTS .

    ID              reduce using rule 265 (ifExists -> R_IF R_EXISTS .)
    STRING          reduce using rule 265 (ifExists -> R_IF R_EXISTS .)
    CHARACTER       reduce using rule 265 (ifExists -> R_IF R_EXISTS .)


state 209

    (264) dropStmt -> R_DROP R_DATABASE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 264 (dropStmt -> R_DROP R_DATABASE ifExists idOrString .)


state 210

    (334) insertStmt -> R_INSERT R_INTO ID paramsColumn . R_VALUES S_PARIZQ paramsList S_PARDER

    R_VALUES        shift and go to state 323


state 211

    (335) paramsColumn -> S_PARIZQ . idList S_PARDER
    (51) idList -> . idList S_COMA ID
    (52) idList -> . ID

    ID              shift and go to state 325

    idList                         shift and go to state 324

state 212

    (337) updateStmt -> R_UPDATE fromBody R_SET updateCols . whereCl
    (338) updateCols -> updateCols . S_COMA updateVals
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .

    S_COMA          shift and go to state 327
    R_WHERE         shift and go to state 130
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)

    whereCl                        shift and go to state 326

state 213

    (339) updateCols -> updateVals .

    S_COMA          reduce using rule 339 (updateCols -> updateVals .)
    R_WHERE         reduce using rule 339 (updateCols -> updateVals .)
    S_PUNTOCOMA     reduce using rule 339 (updateCols -> updateVals .)


state 214

    (340) updateVals -> ID . S_IGUAL updateExp

    S_IGUAL         shift and go to state 328


state 215

    (286) optAlias -> R_AS idOrString .

    R_SET           reduce using rule 286 (optAlias -> R_AS idOrString .)
    S_COMA          reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_WHERE         reduce using rule 286 (optAlias -> R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_NATURAL       reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_INNER         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_LEFT          reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_RIGHT         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_FULL          reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_GROUP         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_LIMIT         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_ORDER         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_UNION         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_INTERSECT     reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_EXCEPT        reduce using rule 286 (optAlias -> R_AS idOrString .)
    S_PARDER        reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_FROM          reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_ON            reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_USING         reduce using rule 286 (optAlias -> R_AS idOrString .)


state 216

    (292) fromBody -> S_PARIZQ selectStmt S_PARDER . R_AS idOrString

    R_AS            shift and go to state 329


state 217

    (308) whereCl -> R_WHERE expBool .
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PUNTOCOMA     reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_GROUP         reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_LIMIT         reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_ORDER         reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_UNION         reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_INTERSECT     reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_EXCEPT        reduce using rule 308 (whereCl -> R_WHERE expBool .)
    S_PARDER        reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_AND           shift and go to state 160
    R_OR            shift and go to state 161
    R_IS            shift and go to state 163

    optBoolPredicate               shift and go to state 162

state 218

    (289) tableExp -> tableExp S_COMA . fromBody
    (291) fromBody -> . ID optAlias
    (292) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 53
    S_PARIZQ        shift and go to state 54

    fromBody                       shift and go to state 330

state 219

    (267) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl . whereCl groupByCl limitCl
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .

    R_WHERE         shift and go to state 130
    R_GROUP         reduce using rule 309 (whereCl -> .)
    R_LIMIT         reduce using rule 309 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)
    R_UNION         reduce using rule 309 (whereCl -> .)
    R_INTERSECT     reduce using rule 309 (whereCl -> .)
    R_EXCEPT        reduce using rule 309 (whereCl -> .)
    S_PARDER        reduce using rule 309 (whereCl -> .)

    whereCl                        shift and go to state 331

state 220

    (268) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl limitCl
    (270) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (310) groupByCl -> . R_GROUP R_BY groupList havingCl
    (311) groupByCl -> .

    R_GROUP         shift and go to state 333
    R_LIMIT         reduce using rule 311 (groupByCl -> .)
    R_ORDER         reduce using rule 311 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 311 (groupByCl -> .)
    R_UNION         reduce using rule 311 (groupByCl -> .)
    R_INTERSECT     reduce using rule 311 (groupByCl -> .)
    R_EXCEPT        reduce using rule 311 (groupByCl -> .)
    S_PARDER        reduce using rule 311 (groupByCl -> .)

    groupByCl                      shift and go to state 332

state 221

    (269) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl limitCl
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .

    R_WHERE         shift and go to state 130
    R_GROUP         reduce using rule 309 (whereCl -> .)
    R_ORDER         reduce using rule 309 (whereCl -> .)
    R_LIMIT         reduce using rule 309 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)
    R_UNION         reduce using rule 309 (whereCl -> .)
    R_INTERSECT     reduce using rule 309 (whereCl -> .)
    R_EXCEPT        reduce using rule 309 (whereCl -> .)
    S_PARDER        reduce using rule 309 (whereCl -> .)

    whereCl                        shift and go to state 334

state 222

    (293) joinList -> joinList2 .
    (294) joinList2 -> joinList2 . joinCl
    (296) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (297) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (298) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (301) joinOpt -> . R_INNER
    (302) joinOpt -> . R_LEFT
    (303) joinOpt -> . R_LEFT R_OUTER
    (304) joinOpt -> . R_RIGHT
    (305) joinOpt -> . R_RIGHT R_OUTER
    (306) joinOpt -> . R_FULL
    (307) joinOpt -> . R_FULL R_OUTER

    R_WHERE         reduce using rule 293 (joinList -> joinList2 .)
    R_GROUP         reduce using rule 293 (joinList -> joinList2 .)
    R_ORDER         reduce using rule 293 (joinList -> joinList2 .)
    R_LIMIT         reduce using rule 293 (joinList -> joinList2 .)
    S_PUNTOCOMA     reduce using rule 293 (joinList -> joinList2 .)
    R_UNION         reduce using rule 293 (joinList -> joinList2 .)
    R_INTERSECT     reduce using rule 293 (joinList -> joinList2 .)
    R_EXCEPT        reduce using rule 293 (joinList -> joinList2 .)
    S_PARDER        reduce using rule 293 (joinList -> joinList2 .)
    R_NATURAL       shift and go to state 225
    R_INNER         shift and go to state 226
    R_LEFT          shift and go to state 227
    R_RIGHT         shift and go to state 228
    R_FULL          shift and go to state 229

    joinCl                         shift and go to state 335
    joinOpt                        shift and go to state 224

state 223

    (295) joinList2 -> joinCl .

    R_NATURAL       reduce using rule 295 (joinList2 -> joinCl .)
    R_INNER         reduce using rule 295 (joinList2 -> joinCl .)
    R_LEFT          reduce using rule 295 (joinList2 -> joinCl .)
    R_RIGHT         reduce using rule 295 (joinList2 -> joinCl .)
    R_FULL          reduce using rule 295 (joinList2 -> joinCl .)
    R_WHERE         reduce using rule 295 (joinList2 -> joinCl .)
    R_GROUP         reduce using rule 295 (joinList2 -> joinCl .)
    R_ORDER         reduce using rule 295 (joinList2 -> joinCl .)
    R_LIMIT         reduce using rule 295 (joinList2 -> joinCl .)
    S_PUNTOCOMA     reduce using rule 295 (joinList2 -> joinCl .)
    R_UNION         reduce using rule 295 (joinList2 -> joinCl .)
    R_INTERSECT     reduce using rule 295 (joinList2 -> joinCl .)
    R_EXCEPT        reduce using rule 295 (joinList2 -> joinCl .)
    S_PARDER        reduce using rule 295 (joinList2 -> joinCl .)


state 224

    (296) joinCl -> joinOpt . R_JOIN columnName optAlias R_ON expBool
    (297) joinCl -> joinOpt . R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER

    R_JOIN          shift and go to state 336


state 225

    (298) joinCl -> R_NATURAL . joinOpt R_JOIN columnName optAlias
    (301) joinOpt -> . R_INNER
    (302) joinOpt -> . R_LEFT
    (303) joinOpt -> . R_LEFT R_OUTER
    (304) joinOpt -> . R_RIGHT
    (305) joinOpt -> . R_RIGHT R_OUTER
    (306) joinOpt -> . R_FULL
    (307) joinOpt -> . R_FULL R_OUTER

    R_INNER         shift and go to state 226
    R_LEFT          shift and go to state 227
    R_RIGHT         shift and go to state 228
    R_FULL          shift and go to state 229

    joinOpt                        shift and go to state 337

state 226

    (301) joinOpt -> R_INNER .

    R_JOIN          reduce using rule 301 (joinOpt -> R_INNER .)


state 227

    (302) joinOpt -> R_LEFT .
    (303) joinOpt -> R_LEFT . R_OUTER

    R_JOIN          reduce using rule 302 (joinOpt -> R_LEFT .)
    R_OUTER         shift and go to state 338


state 228

    (304) joinOpt -> R_RIGHT .
    (305) joinOpt -> R_RIGHT . R_OUTER

    R_JOIN          reduce using rule 304 (joinOpt -> R_RIGHT .)
    R_OUTER         shift and go to state 339


state 229

    (306) joinOpt -> R_FULL .
    (307) joinOpt -> R_FULL . R_OUTER

    R_JOIN          reduce using rule 306 (joinOpt -> R_FULL .)
    R_OUTER         shift and go to state 340


state 230

    (282) selectList -> selectList S_COMA selectListParams . optAlias
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 126
    S_COMA          reduce using rule 288 (optAlias -> .)
    R_FROM          reduce using rule 288 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> .)
    R_UNION         reduce using rule 288 (optAlias -> .)
    R_INTERSECT     reduce using rule 288 (optAlias -> .)
    R_EXCEPT        reduce using rule 288 (optAlias -> .)
    S_PARDER        reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    optAlias                       shift and go to state 341
    idOrString                     shift and go to state 127

state 231

    (223) columnName -> ID S_PUNTO ID .

    O_SUMA          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    O_RESTA         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    O_PRODUCTO      reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    O_DIVISION      reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    O_EXPONENTE     reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    O_MODULAR       reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    OC_CONCATENAR   reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_IN            reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_NOT           reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    OL_MENORQUE     reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    OL_MAYORQUE     reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    OL_MAYORIGUALQUE reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    OL_MENORIGUALQUE reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    S_IGUAL         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    OL_DISTINTODE   reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_IS            reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_BETWEEN       reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_ISNULL        reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_NOTNULL       reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    OL_ESIGUAL      reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_AS            reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    ID              reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    STRING          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    CHARACTER       reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    S_COMA          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_FROM          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    S_PUNTOCOMA     reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_UNION         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_INTERSECT     reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_EXCEPT        reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    S_PARDER        reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_LIKE          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_AND           reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_OR            reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_GROUP         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_LIMIT         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_ORDER         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_THEN          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_NATURAL       reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_INNER         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_LEFT          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_RIGHT         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_FULL          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_WHERE         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_ALL           reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_ANY           reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_SOME          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_ON            reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_USING         reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_HAVING        reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_ASC           reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_DESC          reduce using rule 223 (columnName -> ID S_PUNTO ID .)
    R_NULL          reduce using rule 223 (columnName -> ID S_PUNTO ID .)


state 232

    (285) selectListParams -> ID S_PUNTO O_PRODUCTO .

    R_AS            reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    ID              reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    STRING          reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    CHARACTER       reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_COMA          reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_FROM          reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_UNION         reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_INTERSECT     reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_EXCEPT        reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PARDER        reduce using rule 285 (selectListParams -> ID S_PUNTO O_PRODUCTO .)


state 233

    (98) funcCall -> ID S_PARIZQ paramsList . S_PARDER
    (133) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 342
    S_COMA          shift and go to state 343


state 234

    (99) funcCall -> ID S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    ID              reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    STRING          reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 99 (funcCall -> ID S_PARIZQ S_PARDER .)


state 235

    (134) paramsList -> datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 134 (paramsList -> datatype .)
    S_COMA          reduce using rule 134 (paramsList -> datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 236

    (135) datatype -> datatype O_SUMA datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    O_RESTA         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_IN            reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_NOT           reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    S_IGUAL         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_IS            reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_BETWEEN       reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_ISNULL        reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_NOTNULL       reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_AS            reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    ID              reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    STRING          reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    CHARACTER       reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    S_COMA          reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_FROM          reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_UNION         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_INTERSECT     reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_EXCEPT        reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    S_PARDER        reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_AND           reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_OR            reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_GROUP         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_LIMIT         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_ORDER         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_THEN          reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_NATURAL       reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_INNER         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_LEFT          reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_RIGHT         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_FULL          reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_WHERE         reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_ALL           reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_ANY           reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    R_SOME          reduce using rule 135 (datatype -> datatype O_SUMA datatype .)
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145

  ! O_PRODUCTO      [ reduce using rule 135 (datatype -> datatype O_SUMA datatype .) ]
  ! O_DIVISION      [ reduce using rule 135 (datatype -> datatype O_SUMA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 135 (datatype -> datatype O_SUMA datatype .) ]
  ! O_MODULAR       [ reduce using rule 135 (datatype -> datatype O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 140 ]
  ! O_RESTA         [ shift and go to state 141 ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 237

    (136) datatype -> datatype O_RESTA datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    O_RESTA         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_IN            reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_NOT           reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    S_IGUAL         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_IS            reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_BETWEEN       reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_ISNULL        reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_NOTNULL       reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_AS            reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    ID              reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    STRING          reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    CHARACTER       reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    S_COMA          reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_FROM          reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_UNION         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_INTERSECT     reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_EXCEPT        reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    S_PARDER        reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_AND           reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_OR            reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_GROUP         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_LIMIT         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_ORDER         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_THEN          reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_NATURAL       reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_INNER         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_LEFT          reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_RIGHT         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_FULL          reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_WHERE         reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_ALL           reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_ANY           reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    R_SOME          reduce using rule 136 (datatype -> datatype O_RESTA datatype .)
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145

  ! O_PRODUCTO      [ reduce using rule 136 (datatype -> datatype O_RESTA datatype .) ]
  ! O_DIVISION      [ reduce using rule 136 (datatype -> datatype O_RESTA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 136 (datatype -> datatype O_RESTA datatype .) ]
  ! O_MODULAR       [ reduce using rule 136 (datatype -> datatype O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 140 ]
  ! O_RESTA         [ shift and go to state 141 ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 238

    (137) datatype -> datatype O_PRODUCTO datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    O_RESTA         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    O_PRODUCTO      reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    O_DIVISION      reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    O_MODULAR       reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    OC_CONCATENAR   reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_IN            reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOT           reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORQUE     reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORQUE     reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORIGUALQUE reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORIGUALQUE reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    S_IGUAL         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    OL_DISTINTODE   reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_IS            reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_BETWEEN       reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_ISNULL        reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOTNULL       reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    OL_ESIGUAL      reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_AS            reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    ID              reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    STRING          reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    CHARACTER       reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    S_COMA          reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_FROM          reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    S_PUNTOCOMA     reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_UNION         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_INTERSECT     reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_EXCEPT        reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    S_PARDER        reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_AND           reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_OR            reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_GROUP         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_LIMIT         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_ORDER         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_THEN          reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_NATURAL       reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_INNER         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_LEFT          reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_RIGHT         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_FULL          reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_WHERE         reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_ALL           reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_ANY           reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    R_SOME          reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .)
    O_EXPONENTE     shift and go to state 144

  ! O_EXPONENTE     [ reduce using rule 137 (datatype -> datatype O_PRODUCTO datatype .) ]
  ! O_SUMA          [ shift and go to state 140 ]
  ! O_RESTA         [ shift and go to state 141 ]
  ! O_PRODUCTO      [ shift and go to state 142 ]
  ! O_DIVISION      [ shift and go to state 143 ]
  ! O_MODULAR       [ shift and go to state 145 ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 239

    (138) datatype -> datatype O_DIVISION datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    O_RESTA         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    O_PRODUCTO      reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    O_DIVISION      reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    O_MODULAR       reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    OC_CONCATENAR   reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_IN            reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_NOT           reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORQUE     reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORQUE     reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORIGUALQUE reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORIGUALQUE reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    S_IGUAL         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    OL_DISTINTODE   reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_IS            reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_BETWEEN       reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_ISNULL        reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_NOTNULL       reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    OL_ESIGUAL      reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_AS            reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    ID              reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    STRING          reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    CHARACTER       reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    S_COMA          reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_FROM          reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    S_PUNTOCOMA     reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_UNION         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_INTERSECT     reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_EXCEPT        reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    S_PARDER        reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_AND           reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_OR            reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_GROUP         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_LIMIT         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_ORDER         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_THEN          reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_NATURAL       reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_INNER         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_LEFT          reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_RIGHT         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_FULL          reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_WHERE         reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_ALL           reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_ANY           reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    R_SOME          reduce using rule 138 (datatype -> datatype O_DIVISION datatype .)
    O_EXPONENTE     shift and go to state 144

  ! O_EXPONENTE     [ reduce using rule 138 (datatype -> datatype O_DIVISION datatype .) ]
  ! O_SUMA          [ shift and go to state 140 ]
  ! O_RESTA         [ shift and go to state 141 ]
  ! O_PRODUCTO      [ shift and go to state 142 ]
  ! O_DIVISION      [ shift and go to state 143 ]
  ! O_MODULAR       [ shift and go to state 145 ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 240

    (139) datatype -> datatype O_EXPONENTE datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    O_RESTA         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    O_PRODUCTO      reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    O_DIVISION      reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    O_EXPONENTE     reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    O_MODULAR       reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    OC_CONCATENAR   reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_IN            reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOT           reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORQUE     reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORQUE     reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORIGUALQUE reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORIGUALQUE reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    S_IGUAL         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    OL_DISTINTODE   reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_IS            reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_BETWEEN       reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_ISNULL        reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOTNULL       reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    OL_ESIGUAL      reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_AS            reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    ID              reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    STRING          reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    CHARACTER       reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    S_COMA          reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_FROM          reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    S_PUNTOCOMA     reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_UNION         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_INTERSECT     reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_EXCEPT        reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    S_PARDER        reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_AND           reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_OR            reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_GROUP         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_LIMIT         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_ORDER         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_THEN          reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_NATURAL       reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_INNER         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_LEFT          reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_RIGHT         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_FULL          reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_WHERE         reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_ALL           reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_ANY           reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)
    R_SOME          reduce using rule 139 (datatype -> datatype O_EXPONENTE datatype .)

  ! O_SUMA          [ shift and go to state 140 ]
  ! O_RESTA         [ shift and go to state 141 ]
  ! O_PRODUCTO      [ shift and go to state 142 ]
  ! O_DIVISION      [ shift and go to state 143 ]
  ! O_EXPONENTE     [ shift and go to state 144 ]
  ! O_MODULAR       [ shift and go to state 145 ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 241

    (140) datatype -> datatype O_MODULAR datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    O_RESTA         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    O_PRODUCTO      reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    O_DIVISION      reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    O_MODULAR       reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    OC_CONCATENAR   reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_IN            reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_NOT           reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORQUE     reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORQUE     reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORIGUALQUE reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    S_IGUAL         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    OL_DISTINTODE   reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_IS            reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_BETWEEN       reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_ISNULL        reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_NOTNULL       reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    OL_ESIGUAL      reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_AS            reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    ID              reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    STRING          reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    CHARACTER       reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    S_COMA          reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_FROM          reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    S_PUNTOCOMA     reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_UNION         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_INTERSECT     reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_EXCEPT        reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    S_PARDER        reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_AND           reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_OR            reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_GROUP         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_LIMIT         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_ORDER         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_THEN          reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_NATURAL       reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_INNER         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_LEFT          reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_RIGHT         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_FULL          reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_WHERE         reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_ALL           reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_ANY           reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    R_SOME          reduce using rule 140 (datatype -> datatype O_MODULAR datatype .)
    O_EXPONENTE     shift and go to state 144

  ! O_EXPONENTE     [ reduce using rule 140 (datatype -> datatype O_MODULAR datatype .) ]
  ! O_SUMA          [ shift and go to state 140 ]
  ! O_RESTA         [ shift and go to state 141 ]
  ! O_PRODUCTO      [ shift and go to state 142 ]
  ! O_DIVISION      [ shift and go to state 143 ]
  ! O_MODULAR       [ shift and go to state 145 ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 242

    (141) datatype -> datatype OC_CONCATENAR datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    OC_CONCATENAR   reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IN            reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOT           reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORQUE     reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORQUE     reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORIGUALQUE reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    S_IGUAL         reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_DISTINTODE   reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IS            reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_BETWEEN       reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ISNULL        reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOTNULL       reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_ESIGUAL      reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AS            reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    ID              reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    STRING          reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    CHARACTER       reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    S_COMA          reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FROM          reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PUNTOCOMA     reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_UNION         reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INTERSECT     reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_EXCEPT        reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PARDER        reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AND           reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_OR            reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_GROUP         reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LIMIT         reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ORDER         reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_THEN          reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NATURAL       reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INNER         reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LEFT          reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_RIGHT         reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FULL          reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_WHERE         reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ALL           reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ANY           reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    R_SOME          reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145

  ! O_SUMA          [ reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_RESTA         [ reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_PRODUCTO      [ reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_DIVISION      [ reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_MODULAR       [ reduce using rule 141 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! OC_CONCATENAR   [ shift and go to state 146 ]


state 243

    (206) boolean -> datatype R_IN S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 344

state 244

    (207) boolean -> datatype R_NOT R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 345


state 245

    (166) expComp -> datatype R_NOT R_BETWEEN . datatype R_AND datatype
    (185) expSubq -> datatype R_NOT R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 346
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 246

    (157) expComp -> datatype OL_MENORQUE datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_OR            reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_IS            reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_AS            reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    ID              reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    STRING          reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    CHARACTER       reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    S_COMA          reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_FROM          reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_UNION         reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_INTERSECT     reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_EXCEPT        reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    S_PARDER        reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_GROUP         reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_LIMIT         reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_ORDER         reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_THEN          reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_NATURAL       reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_INNER         reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_LEFT          reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_RIGHT         reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_FULL          reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    R_WHERE         reduce using rule 157 (expComp -> datatype OL_MENORQUE datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 247

    (178) expSubq -> datatype OL_MENORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 347


state 248

    (202) subqValues -> R_ALL .

    S_PARIZQ        reduce using rule 202 (subqValues -> R_ALL .)


state 249

    (203) subqValues -> R_ANY .

    S_PARIZQ        reduce using rule 203 (subqValues -> R_ANY .)


state 250

    (204) subqValues -> R_SOME .

    S_PARIZQ        reduce using rule 204 (subqValues -> R_SOME .)


state 251

    (158) expComp -> datatype OL_MAYORQUE datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_OR            reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_IS            reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_AS            reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    ID              reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    STRING          reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    CHARACTER       reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    S_COMA          reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FROM          reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_UNION         reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INTERSECT     reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_EXCEPT        reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PARDER        reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_GROUP         reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LIMIT         reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_ORDER         reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_THEN          reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_NATURAL       reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INNER         reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LEFT          reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_RIGHT         reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FULL          reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    R_WHERE         reduce using rule 158 (expComp -> datatype OL_MAYORQUE datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 252

    (179) expSubq -> datatype OL_MAYORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 348


state 253

    (159) expComp -> datatype OL_MAYORIGUALQUE datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_OR            reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_IS            reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_AS            reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    ID              reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    STRING          reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    CHARACTER       reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_COMA          reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FROM          reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_UNION         reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PARDER        reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_GROUP         reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_ORDER         reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_THEN          reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INNER         reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LEFT          reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FULL          reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_WHERE         reduce using rule 159 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 254

    (180) expSubq -> datatype OL_MAYORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 349


state 255

    (160) expComp -> datatype OL_MENORIGUALQUE datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_OR            reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_IS            reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_AS            reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    ID              reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    STRING          reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    CHARACTER       reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_COMA          reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FROM          reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_UNION         reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PARDER        reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_GROUP         reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_ORDER         reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_THEN          reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INNER         reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LEFT          reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FULL          reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_WHERE         reduce using rule 160 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 256

    (181) expSubq -> datatype OL_MENORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 350


state 257

    (161) expComp -> datatype S_IGUAL datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_OR            reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_IS            reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_AS            reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    ID              reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    STRING          reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    CHARACTER       reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    S_COMA          reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_FROM          reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    S_PUNTOCOMA     reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_UNION         reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_INTERSECT     reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_EXCEPT        reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    S_PARDER        reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_GROUP         reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_LIMIT         reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_ORDER         reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_THEN          reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_NATURAL       reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_INNER         reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_LEFT          reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_RIGHT         reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_FULL          reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    R_WHERE         reduce using rule 161 (expComp -> datatype S_IGUAL datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 258

    (162) expComp -> datatype OL_DISTINTODE datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_OR            reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_IS            reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_AS            reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    ID              reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    STRING          reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    CHARACTER       reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    S_COMA          reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FROM          reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PUNTOCOMA     reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_UNION         reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INTERSECT     reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_EXCEPT        reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PARDER        reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_GROUP         reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LIMIT         reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_ORDER         reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_THEN          reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_NATURAL       reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INNER         reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LEFT          reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_RIGHT         reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FULL          reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    R_WHERE         reduce using rule 162 (expComp -> datatype OL_DISTINTODE datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 259

    (183) expSubq -> datatype OL_DISTINTODE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 351


state 260

    (163) expComp -> datatype R_IS R_DISTINCT . R_FROM datatype
    (187) expSubq -> datatype R_IS R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 352


state 261

    (164) expComp -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype
    (174) expComp -> datatype R_IS R_NOT . R_NULL
    (175) expComp -> datatype R_IS R_NOT . R_TRUE
    (176) expComp -> datatype R_IS R_NOT . R_FALSE
    (177) expComp -> datatype R_IS R_NOT . R_UNKNOWN
    (188) expSubq -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype R_IS R_NOT . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype R_IS R_NOT . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype R_IS R_NOT . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype R_IS R_NOT . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 353
    R_NULL          shift and go to state 354
    R_TRUE          shift and go to state 355
    R_FALSE         shift and go to state 356
    R_UNKNOWN       shift and go to state 357


state 262

    (170) expComp -> datatype R_IS R_NULL .
    (189) expSubq -> datatype R_IS R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_OR            reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_IS            reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_AS            reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    ID              reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    STRING          reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    CHARACTER       reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    S_COMA          reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_FROM          reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    S_PUNTOCOMA     reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_UNION         reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_INTERSECT     reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_EXCEPT        reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    S_PARDER        reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_GROUP         reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_LIMIT         reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_ORDER         reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_THEN          reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_NATURAL       reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_INNER         reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_LEFT          reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_RIGHT         reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_FULL          reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_WHERE         reduce using rule 170 (expComp -> datatype R_IS R_NULL .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 358

state 263

    (171) expComp -> datatype R_IS R_TRUE .
    (193) expSubq -> datatype R_IS R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_OR            reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_IS            reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_AS            reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    ID              reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    STRING          reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    CHARACTER       reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    S_COMA          reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_FROM          reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_UNION         reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    S_PARDER        reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_GROUP         reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_LIMIT         reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_ORDER         reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_THEN          reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_NATURAL       reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_INNER         reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_LEFT          reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_RIGHT         reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_FULL          reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_WHERE         reduce using rule 171 (expComp -> datatype R_IS R_TRUE .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 359

state 264

    (172) expComp -> datatype R_IS R_FALSE .
    (195) expSubq -> datatype R_IS R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_OR            reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_IS            reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_AS            reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    ID              reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    STRING          reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    CHARACTER       reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    S_COMA          reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_FROM          reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_UNION         reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    S_PARDER        reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_GROUP         reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_LIMIT         reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_ORDER         reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_THEN          reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_NATURAL       reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_INNER         reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_LEFT          reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_RIGHT         reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_FULL          reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_WHERE         reduce using rule 172 (expComp -> datatype R_IS R_FALSE .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 360

state 265

    (173) expComp -> datatype R_IS R_UNKNOWN .
    (197) expSubq -> datatype R_IS R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_OR            reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_IS            reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_AS            reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    ID              reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    STRING          reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 173 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 361

state 266

    (165) expComp -> datatype R_BETWEEN datatype . R_AND datatype
    (184) expSubq -> datatype R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 362
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 267

    (167) expComp -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype
    (186) expSubq -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 363
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 268

    (191) expSubq -> datatype R_ISNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 364


state 269

    (192) expSubq -> datatype R_NOTNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 365


state 270

    (182) expSubq -> datatype OL_ESIGUAL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 366


state 271

    (210) expBool -> expBool R_AND expBool .
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_OR            reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_AS            reduce using rule 210 (expBool -> expBool R_AND expBool .)
    ID              reduce using rule 210 (expBool -> expBool R_AND expBool .)
    STRING          reduce using rule 210 (expBool -> expBool R_AND expBool .)
    CHARACTER       reduce using rule 210 (expBool -> expBool R_AND expBool .)
    S_COMA          reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_FROM          reduce using rule 210 (expBool -> expBool R_AND expBool .)
    S_PUNTOCOMA     reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_UNION         reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_INTERSECT     reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_EXCEPT        reduce using rule 210 (expBool -> expBool R_AND expBool .)
    S_PARDER        reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_GROUP         reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_LIMIT         reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_ORDER         reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_THEN          reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_NATURAL       reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_INNER         reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_LEFT          reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_RIGHT         reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_FULL          reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_WHERE         reduce using rule 210 (expBool -> expBool R_AND expBool .)
    R_IS            shift and go to state 163

  ! R_IS            [ reduce using rule 210 (expBool -> expBool R_AND expBool .) ]
  ! R_AND           [ shift and go to state 160 ]
  ! R_OR            [ shift and go to state 161 ]

    optBoolPredicate               shift and go to state 162

state 272

    (211) expBool -> expBool R_OR expBool .
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_OR            reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_AS            reduce using rule 211 (expBool -> expBool R_OR expBool .)
    ID              reduce using rule 211 (expBool -> expBool R_OR expBool .)
    STRING          reduce using rule 211 (expBool -> expBool R_OR expBool .)
    CHARACTER       reduce using rule 211 (expBool -> expBool R_OR expBool .)
    S_COMA          reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_FROM          reduce using rule 211 (expBool -> expBool R_OR expBool .)
    S_PUNTOCOMA     reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_UNION         reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_INTERSECT     reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_EXCEPT        reduce using rule 211 (expBool -> expBool R_OR expBool .)
    S_PARDER        reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_GROUP         reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_LIMIT         reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_ORDER         reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_THEN          reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_NATURAL       reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_INNER         reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_LEFT          reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_RIGHT         reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_FULL          reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_WHERE         reduce using rule 211 (expBool -> expBool R_OR expBool .)
    R_IS            shift and go to state 163

  ! R_IS            [ reduce using rule 211 (expBool -> expBool R_OR expBool .) ]
  ! R_AND           [ shift and go to state 160 ]
  ! R_OR            [ shift and go to state 161 ]

    optBoolPredicate               shift and go to state 162

state 273

    (216) optBoolPredicate -> R_IS R_TRUE .

    R_AND           reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_OR            reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_IS            reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_AS            reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    ID              reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    STRING          reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    CHARACTER       reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    S_COMA          reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_FROM          reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_UNION         reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    S_PARDER        reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_GROUP         reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_LIMIT         reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_ORDER         reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_THEN          reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_NATURAL       reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_INNER         reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_LEFT          reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_RIGHT         reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_FULL          reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)
    R_WHERE         reduce using rule 216 (optBoolPredicate -> R_IS R_TRUE .)


state 274

    (217) optBoolPredicate -> R_IS R_FALSE .

    R_AND           reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_OR            reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_IS            reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_AS            reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    ID              reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    STRING          reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    CHARACTER       reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    S_COMA          reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_FROM          reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_UNION         reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    S_PARDER        reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_GROUP         reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_LIMIT         reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_ORDER         reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_THEN          reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_NATURAL       reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_INNER         reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_LEFT          reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_RIGHT         reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_FULL          reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)
    R_WHERE         reduce using rule 217 (optBoolPredicate -> R_IS R_FALSE .)


state 275

    (218) optBoolPredicate -> R_IS R_UNKNOWN .

    R_AND           reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_OR            reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_IS            reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_AS            reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    ID              reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    STRING          reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 218 (optBoolPredicate -> R_IS R_UNKNOWN .)


state 276

    (219) optBoolPredicate -> R_IS R_NOT . R_TRUE
    (220) optBoolPredicate -> R_IS R_NOT . R_FALSE
    (221) optBoolPredicate -> R_IS R_NOT . R_UNKNOWN

    R_TRUE          shift and go to state 367
    R_FALSE         shift and go to state 368
    R_UNKNOWN       shift and go to state 369


state 277

    (97) expresion -> S_PARIZQ selectStmt S_PARDER .

    R_AS            reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 97 (expresion -> S_PARIZQ selectStmt S_PARDER .)


state 278

    (156) datatype -> S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 156 (datatype -> S_PARIZQ datatype S_PARDER .)


state 279

    (213) expBool -> S_PARIZQ expBool S_PARDER .

    R_AND           reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_OR            reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_IS            reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_AS            reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    ID              reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    STRING          reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    CHARACTER       reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_COMA          reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FROM          reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PUNTOCOMA     reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_UNION         reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INTERSECT     reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_EXCEPT        reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PARDER        reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_GROUP         reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LIMIT         reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_ORDER         reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_THEN          reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_NATURAL       reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INNER         reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LEFT          reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_RIGHT         reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FULL          reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_WHERE         reduce using rule 213 (expBool -> S_PARIZQ expBool S_PARDER .)


state 280

    (223) columnName -> ID S_PUNTO . ID

    ID              shift and go to state 231


state 281

    (156) datatype -> S_PARIZQ datatype . S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 278
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 282

    (142) datatype -> R_CASE caseList optElse . R_END

    R_END           shift and go to state 370


state 283

    (143) caseList -> caseList caseWhen .

    R_ELSE          reduce using rule 143 (caseList -> caseList caseWhen .)
    R_WHEN          reduce using rule 143 (caseList -> caseList caseWhen .)
    R_END           reduce using rule 143 (caseList -> caseList caseWhen .)


state 284

    (146) optElse -> R_ELSE . literal
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL

    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87

    literal                        shift and go to state 371

state 285

    (145) caseWhen -> R_WHEN expBool . R_THEN literal
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_THEN          shift and go to state 372
    R_AND           shift and go to state 160
    R_OR            shift and go to state 161
    R_IS            shift and go to state 163

    optBoolPredicate               shift and go to state 162

state 286

    (100) funcCall -> R_NOW S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    ID              reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    STRING          reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 100 (funcCall -> R_NOW S_PARIZQ S_PARDER .)


state 287

    (101) funcCall -> R_COUNT S_PARIZQ datatype . S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 373
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 288

    (102) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO . S_PARDER

    S_PARDER        shift and go to state 374


state 289

    (103) funcCall -> R_SUM S_PARIZQ datatype . S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 375
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 290

    (104) funcCall -> R_PROM S_PARIZQ datatype . S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 376
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 291

    (105) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM timeStamp S_PARDER
    (106) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM columnName S_PARDER

    R_FROM          shift and go to state 377


state 292

    (109) optsExtract -> R_YEAR .

    R_FROM          reduce using rule 109 (optsExtract -> R_YEAR .)


state 293

    (110) optsExtract -> R_MONTH .

    R_FROM          reduce using rule 110 (optsExtract -> R_MONTH .)


state 294

    (111) optsExtract -> R_DAY .

    R_FROM          reduce using rule 111 (optsExtract -> R_DAY .)


state 295

    (112) optsExtract -> R_HOUR .

    R_FROM          reduce using rule 112 (optsExtract -> R_HOUR .)


state 296

    (113) optsExtract -> R_MINUTE .

    R_FROM          reduce using rule 113 (optsExtract -> R_MINUTE .)


state 297

    (114) optsExtract -> R_SECOND .

    R_FROM          reduce using rule 114 (optsExtract -> R_SECOND .)


state 298

    (115) datePart -> R_DATE_PART S_PARIZQ STRING . S_COMA dateSource S_PARDER

    S_COMA          shift and go to state 378


state 299

    (205) boolean -> R_EXISTS S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 379
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 300

    (199) expSubq -> stringExp R_LIKE STRING .

    R_AND           reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_OR            reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_IS            reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_AS            reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    ID              reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    STRING          reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    CHARACTER       reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    S_COMA          reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_FROM          reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    S_PUNTOCOMA     reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_UNION         reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_INTERSECT     reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_EXCEPT        reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    S_PARDER        reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_GROUP         reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_LIMIT         reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_ORDER         reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_THEN          reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_NATURAL       reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_INNER         reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_LEFT          reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_RIGHT         reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_FULL          reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)
    R_WHERE         reduce using rule 199 (expSubq -> stringExp R_LIKE STRING .)


state 301

    (19) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ . createTableList S_PARDER inheritsOpt
    (36) createTableList -> . createTableList S_COMA createTable
    (37) createTableList -> . createTable
    (38) createTable -> . ID types createColumns
    (39) createTable -> . createConstraint
    (40) createTable -> . createUnique
    (41) createTable -> . createPrimary
    (42) createTable -> . createForeign
    (45) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (46) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (47) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (48) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (49) constrName -> . R_CONSTRAINT ID
    (50) constrName -> .

    ID              shift and go to state 382
    R_UNIQUE        shift and go to state 388
    R_PRIMARY       shift and go to state 316
    R_CONSTRAINT    shift and go to state 317
    R_CHECK         reduce using rule 50 (constrName -> .)
    R_FOREIGN       reduce using rule 50 (constrName -> .)

    createTableList                shift and go to state 380
    createTable                    shift and go to state 381
    createConstraint               shift and go to state 383
    createUnique                   shift and go to state 384
    createPrimary                  shift and go to state 385
    createForeign                  shift and go to state 386
    constrName                     shift and go to state 387

state 302

    (24) ifNotExists -> R_IF R_NOT R_EXISTS .

    ID              reduce using rule 24 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    STRING          reduce using rule 24 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    CHARACTER       reduce using rule 24 (ifNotExists -> R_IF R_NOT R_EXISTS .)


state 303

    (20) createOpts -> orReplace R_DATABASE ifNotExists idOrString . createOwner createMode
    (28) createOwner -> . R_OWNER ID
    (29) createOwner -> . R_OWNER STRING
    (30) createOwner -> . R_OWNER S_IGUAL ID
    (31) createOwner -> . R_OWNER S_IGUAL STRING
    (32) createOwner -> .

    R_OWNER         shift and go to state 390
    R_MODE          reduce using rule 32 (createOwner -> .)
    S_PUNTOCOMA     reduce using rule 32 (createOwner -> .)

    createOwner                    shift and go to state 389

state 304

    (23) createOpts -> R_TYPE ifNotExists ID R_AS . R_ENUM S_PARIZQ paramsList S_PARDER

    R_ENUM          shift and go to state 391


state 305

    (241) alterDb -> R_RENAME R_TO . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 392

state 306

    (242) alterDb -> R_OWNER R_TO . ownerOPts
    (243) ownerOPts -> . idOrString
    (244) ownerOPts -> . R_CURRENT_USER
    (245) ownerOPts -> . R_SESSION_USER
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_CURRENT_USER  shift and go to state 395
    R_SESSION_USER  shift and go to state 396
    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    ownerOPts                      shift and go to state 393
    idOrString                     shift and go to state 394

state 307

    (249) alterTable -> R_ALTER alterAlter .

    S_COMA          reduce using rule 249 (alterTable -> R_ALTER alterAlter .)
    S_PUNTOCOMA     reduce using rule 249 (alterTable -> R_ALTER alterAlter .)


state 308

    (257) alterAlter -> R_COLUMN . ID R_SET nullOpt
    (258) alterAlter -> R_COLUMN . ID R_SET defaultVal
    (259) alterAlter -> R_COLUMN . ID R_TYPE types

    ID              shift and go to state 397


state 309

    (246) alterTableList -> alterTableList S_COMA . alterTable
    (248) alterTable -> . R_ADD alterAdd
    (249) alterTable -> . R_ALTER alterAlter
    (250) alterTable -> . R_DROP alterDrop
    (251) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 204
    R_ALTER         shift and go to state 201
    R_DROP          shift and go to state 205
    R_RENAME        shift and go to state 206

    alterTable                     shift and go to state 398

state 310

    (248) alterTable -> R_ADD alterAdd .

    S_COMA          reduce using rule 248 (alterTable -> R_ADD alterAdd .)
    S_PUNTOCOMA     reduce using rule 248 (alterTable -> R_ADD alterAdd .)


state 311

    (252) alterAdd -> R_COLUMN . ID types

    ID              shift and go to state 399


state 312

    (253) alterAdd -> createConstraint .

    S_COMA          reduce using rule 253 (alterAdd -> createConstraint .)
    S_PUNTOCOMA     reduce using rule 253 (alterAdd -> createConstraint .)


state 313

    (254) alterAdd -> createPrimary .

    S_COMA          reduce using rule 254 (alterAdd -> createPrimary .)
    S_PUNTOCOMA     reduce using rule 254 (alterAdd -> createPrimary .)


state 314

    (255) alterAdd -> createForeign .

    S_COMA          reduce using rule 255 (alterAdd -> createForeign .)
    S_PUNTOCOMA     reduce using rule 255 (alterAdd -> createForeign .)


state 315

    (256) alterAdd -> constrName . R_UNIQUE S_PARIZQ ID S_PARDER
    (45) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (48) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_UNIQUE        shift and go to state 400
    R_CHECK         shift and go to state 401
    R_FOREIGN       shift and go to state 402


state 316

    (47) createPrimary -> R_PRIMARY . R_KEY S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 403


state 317

    (49) constrName -> R_CONSTRAINT . ID

    ID              shift and go to state 404


state 318

    (250) alterTable -> R_DROP alterDrop .

    S_COMA          reduce using rule 250 (alterTable -> R_DROP alterDrop .)
    S_PUNTOCOMA     reduce using rule 250 (alterTable -> R_DROP alterDrop .)


state 319

    (260) alterDrop -> R_CONSTRAINT . ID

    ID              shift and go to state 405


state 320

    (261) alterDrop -> R_COLUMN . ID

    ID              shift and go to state 406


state 321

    (251) alterTable -> R_RENAME alterRename .

    S_COMA          reduce using rule 251 (alterTable -> R_RENAME alterRename .)
    S_PUNTOCOMA     reduce using rule 251 (alterTable -> R_RENAME alterRename .)


state 322

    (262) alterRename -> R_COLUMN . ID R_TO ID

    ID              shift and go to state 407


state 323

    (334) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 408


state 324

    (335) paramsColumn -> S_PARIZQ idList . S_PARDER
    (51) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 409
    S_COMA          shift and go to state 410


state 325

    (52) idList -> ID .

    S_PARDER        reduce using rule 52 (idList -> ID .)
    S_COMA          reduce using rule 52 (idList -> ID .)


state 326

    (337) updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .

    S_PUNTOCOMA     reduce using rule 337 (updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .)


state 327

    (338) updateCols -> updateCols S_COMA . updateVals
    (340) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 214

    updateVals                     shift and go to state 411

state 328

    (340) updateVals -> ID S_IGUAL . updateExp
    (341) updateExp -> . datatype
    (342) updateExp -> . R_DEFAULT
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_DEFAULT       shift and go to state 414
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    updateExp                      shift and go to state 412
    datatype                       shift and go to state 413
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 329

    (292) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    idOrString                     shift and go to state 415

state 330

    (289) tableExp -> tableExp S_COMA fromBody .

    S_COMA          reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_WHERE         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    S_PUNTOCOMA     reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_NATURAL       reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_INNER         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_LEFT          reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_RIGHT         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_FULL          reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_GROUP         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_LIMIT         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_ORDER         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_UNION         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_INTERSECT     reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_EXCEPT        reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    S_PARDER        reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)


state 331

    (267) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl . groupByCl limitCl
    (310) groupByCl -> . R_GROUP R_BY groupList havingCl
    (311) groupByCl -> .

    R_GROUP         shift and go to state 333
    R_LIMIT         reduce using rule 311 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 311 (groupByCl -> .)
    R_UNION         reduce using rule 311 (groupByCl -> .)
    R_INTERSECT     reduce using rule 311 (groupByCl -> .)
    R_EXCEPT        reduce using rule 311 (groupByCl -> .)
    S_PARDER        reduce using rule 311 (groupByCl -> .)

    groupByCl                      shift and go to state 416

state 332

    (268) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . limitCl
    (270) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (329) limitCl -> . R_LIMIT INTEGER offsetLimit
    (330) limitCl -> . R_LIMIT R_ALL offsetLimit
    (331) limitCl -> .
    (318) orderByCl -> . R_ORDER R_BY orderList

    R_LIMIT         shift and go to state 419
    S_PUNTOCOMA     reduce using rule 331 (limitCl -> .)
    R_UNION         reduce using rule 331 (limitCl -> .)
    R_INTERSECT     reduce using rule 331 (limitCl -> .)
    R_EXCEPT        reduce using rule 331 (limitCl -> .)
    S_PARDER        reduce using rule 331 (limitCl -> .)
    R_ORDER         shift and go to state 420

    limitCl                        shift and go to state 417
    orderByCl                      shift and go to state 418

state 333

    (310) groupByCl -> R_GROUP . R_BY groupList havingCl

    R_BY            shift and go to state 421


state 334

    (269) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl limitCl
    (310) groupByCl -> . R_GROUP R_BY groupList havingCl
    (311) groupByCl -> .

    R_GROUP         shift and go to state 333
    R_ORDER         reduce using rule 311 (groupByCl -> .)
    R_LIMIT         reduce using rule 311 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 311 (groupByCl -> .)
    R_UNION         reduce using rule 311 (groupByCl -> .)
    R_INTERSECT     reduce using rule 311 (groupByCl -> .)
    R_EXCEPT        reduce using rule 311 (groupByCl -> .)
    S_PARDER        reduce using rule 311 (groupByCl -> .)

    groupByCl                      shift and go to state 422

state 335

    (294) joinList2 -> joinList2 joinCl .

    R_NATURAL       reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_INNER         reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_LEFT          reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_RIGHT         reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_FULL          reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_WHERE         reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_GROUP         reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_ORDER         reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_LIMIT         reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    S_PUNTOCOMA     reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_UNION         reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_INTERSECT     reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    R_EXCEPT        reduce using rule 294 (joinList2 -> joinList2 joinCl .)
    S_PARDER        reduce using rule 294 (joinList2 -> joinList2 joinCl .)


state 336

    (296) joinCl -> joinOpt R_JOIN . columnName optAlias R_ON expBool
    (297) joinCl -> joinOpt R_JOIN . columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 424

    columnName                     shift and go to state 423

state 337

    (298) joinCl -> R_NATURAL joinOpt . R_JOIN columnName optAlias

    R_JOIN          shift and go to state 425


state 338

    (303) joinOpt -> R_LEFT R_OUTER .

    R_JOIN          reduce using rule 303 (joinOpt -> R_LEFT R_OUTER .)


state 339

    (305) joinOpt -> R_RIGHT R_OUTER .

    R_JOIN          reduce using rule 305 (joinOpt -> R_RIGHT R_OUTER .)


state 340

    (307) joinOpt -> R_FULL R_OUTER .

    R_JOIN          reduce using rule 307 (joinOpt -> R_FULL R_OUTER .)


state 341

    (282) selectList -> selectList S_COMA selectListParams optAlias .

    S_COMA          reduce using rule 282 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_FROM          reduce using rule 282 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 282 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_UNION         reduce using rule 282 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_INTERSECT     reduce using rule 282 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_EXCEPT        reduce using rule 282 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PARDER        reduce using rule 282 (selectList -> selectList S_COMA selectListParams optAlias .)


state 342

    (98) funcCall -> ID S_PARIZQ paramsList S_PARDER .

    O_SUMA          reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_RESTA         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_PRODUCTO      reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_DIVISION      reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_EXPONENTE     reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_MODULAR       reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OC_CONCATENAR   reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IN            reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOT           reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORQUE     reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORQUE     reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_IGUAL         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_DISTINTODE   reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IS            reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_BETWEEN       reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ISNULL        reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOTNULL       reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_ESIGUAL      reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AS            reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    ID              reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    STRING          reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    CHARACTER       reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_COMA          reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FROM          reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_UNION         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INTERSECT     reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_EXCEPT        reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PARDER        reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AND           reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_OR            reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_GROUP         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LIMIT         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ORDER         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_THEN          reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NATURAL       reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INNER         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LEFT          reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_RIGHT         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FULL          reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_WHERE         reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ALL           reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ANY           reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_SOME          reduce using rule 98 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)


state 343

    (133) paramsList -> paramsList S_COMA . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 426
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 344

    (206) boolean -> datatype R_IN S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 427
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 345

    (207) boolean -> datatype R_NOT R_IN S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 428

state 346

    (166) expComp -> datatype R_NOT R_BETWEEN datatype . R_AND datatype
    (185) expSubq -> datatype R_NOT R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 429
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 347

    (178) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 430

state 348

    (179) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 431

state 349

    (180) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 432

state 350

    (181) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 433

state 351

    (183) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 434

state 352

    (163) expComp -> datatype R_IS R_DISTINCT R_FROM . datatype
    (187) expSubq -> datatype R_IS R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 435
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 353

    (164) expComp -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype
    (188) expSubq -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 436


state 354

    (174) expComp -> datatype R_IS R_NOT R_NULL .
    (190) expSubq -> datatype R_IS R_NOT R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_OR            reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_IS            reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_AS            reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    ID              reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    STRING          reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    CHARACTER       reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_COMA          reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FROM          reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_UNION         reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INTERSECT     reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_EXCEPT        reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PARDER        reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_GROUP         reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LIMIT         reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ORDER         reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_THEN          reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_NATURAL       reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INNER         reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LEFT          reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_RIGHT         reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FULL          reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_WHERE         reduce using rule 174 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 437

state 355

    (175) expComp -> datatype R_IS R_NOT R_TRUE .
    (194) expSubq -> datatype R_IS R_NOT R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    ID              reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 438

state 356

    (176) expComp -> datatype R_IS R_NOT R_FALSE .
    (196) expSubq -> datatype R_IS R_NOT R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    ID              reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 439

state 357

    (177) expComp -> datatype R_IS R_NOT R_UNKNOWN .
    (198) expSubq -> datatype R_IS R_NOT R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 440

state 358

    (189) expSubq -> datatype R_IS R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 441


state 359

    (193) expSubq -> datatype R_IS R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 442


state 360

    (195) expSubq -> datatype R_IS R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 443


state 361

    (197) expSubq -> datatype R_IS R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 444


state 362

    (165) expComp -> datatype R_BETWEEN datatype R_AND . datatype
    (184) expSubq -> datatype R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 445
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 363

    (167) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype
    (186) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 446
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 364

    (191) expSubq -> datatype R_ISNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 447

state 365

    (192) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 448

state 366

    (182) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 449

state 367

    (219) optBoolPredicate -> R_IS R_NOT R_TRUE .

    R_AND           reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    ID              reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_TRUE .)


state 368

    (220) optBoolPredicate -> R_IS R_NOT R_FALSE .

    R_AND           reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    ID              reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_FALSE .)


state 369

    (221) optBoolPredicate -> R_IS R_NOT R_UNKNOWN .

    R_AND           reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)


state 370

    (142) datatype -> R_CASE caseList optElse R_END .

    O_SUMA          reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    O_RESTA         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    O_PRODUCTO      reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    O_DIVISION      reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    O_EXPONENTE     reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    O_MODULAR       reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    OC_CONCATENAR   reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_IN            reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_NOT           reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORQUE     reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORQUE     reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORIGUALQUE reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORIGUALQUE reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    S_IGUAL         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    OL_DISTINTODE   reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_IS            reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_BETWEEN       reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_ISNULL        reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_NOTNULL       reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    OL_ESIGUAL      reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_AS            reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    ID              reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    STRING          reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    CHARACTER       reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    S_COMA          reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_FROM          reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    S_PUNTOCOMA     reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_UNION         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_INTERSECT     reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_EXCEPT        reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    S_PARDER        reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_AND           reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_OR            reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_GROUP         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_LIMIT         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_ORDER         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_THEN          reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_NATURAL       reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_INNER         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_LEFT          reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_RIGHT         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_FULL          reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_WHERE         reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_ALL           reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_ANY           reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)
    R_SOME          reduce using rule 142 (datatype -> R_CASE caseList optElse R_END .)


state 371

    (146) optElse -> R_ELSE literal .

    R_END           reduce using rule 146 (optElse -> R_ELSE literal .)


state 372

    (145) caseWhen -> R_WHEN expBool R_THEN . literal
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL

    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87

    literal                        shift and go to state 450

state 373

    (101) funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 101 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)


state 374

    (102) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .

    O_SUMA          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_RESTA         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_PRODUCTO      reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_DIVISION      reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_EXPONENTE     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_MODULAR       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OC_CONCATENAR   reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IN            reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOT           reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORQUE     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORQUE     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_IGUAL         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_DISTINTODE   reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IS            reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_BETWEEN       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ISNULL        reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOTNULL       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_ESIGUAL      reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AS            reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    ID              reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    STRING          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    CHARACTER       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_COMA          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FROM          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PUNTOCOMA     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_UNION         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INTERSECT     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_EXCEPT        reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PARDER        reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AND           reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_OR            reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_GROUP         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LIMIT         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ORDER         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_THEN          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NATURAL       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INNER         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LEFT          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_RIGHT         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FULL          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_WHERE         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ALL           reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ANY           reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_SOME          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)


state 375

    (103) funcCall -> R_SUM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 103 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)


state 376

    (104) funcCall -> R_PROM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 104 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)


state 377

    (105) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . timeStamp S_PARDER
    (106) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . columnName S_PARDER
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101
    ID              shift and go to state 424

    timeStamp                      shift and go to state 451
    columnName                     shift and go to state 452

state 378

    (115) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA . dateSource S_PARDER
    (116) dateSource -> . R_TIMESTAMP STRING
    (117) dateSource -> . T_DATE STRING
    (118) dateSource -> . T_TIME STRING
    (119) dateSource -> . R_INTERVAL STRING
    (120) dateSource -> . R_NOW S_PARIZQ S_PARDER

    R_TIMESTAMP     shift and go to state 454
    T_DATE          shift and go to state 455
    T_TIME          shift and go to state 456
    R_INTERVAL      shift and go to state 457
    R_NOW           shift and go to state 458

    dateSource                     shift and go to state 453

state 379

    (205) boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 205 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)


state 380

    (19) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList . S_PARDER inheritsOpt
    (36) createTableList -> createTableList . S_COMA createTable

    S_PARDER        shift and go to state 459
    S_COMA          shift and go to state 460


state 381

    (37) createTableList -> createTable .

    S_PARDER        reduce using rule 37 (createTableList -> createTable .)
    S_COMA          reduce using rule 37 (createTableList -> createTable .)


state 382

    (38) createTable -> ID . types createColumns
    (53) types -> . ID
    (54) types -> . T_SMALLINT
    (55) types -> . T_INTEGER
    (56) types -> . T_BIGINT
    (57) types -> . T_REAL
    (58) types -> . T_DOUBLE T_PRECISION
    (59) types -> . T_MONEY
    (60) types -> . T_TEXT
    (61) types -> . T_BOOLEAN
    (62) types -> . R_TIMESTAMP
    (63) types -> . T_DATE
    (64) types -> . T_TIME
    (65) types -> . T_DECIMAL optParams
    (66) types -> . T_NUMERIC optParams
    (67) types -> . T_VARCHAR optParams
    (68) types -> . T_CHARACTER optParams
    (69) types -> . T_CHAR optParams
    (70) types -> . T_CHARACTER T_VARYING optParams
    (71) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 461
    T_SMALLINT      shift and go to state 463
    T_INTEGER       shift and go to state 464
    T_BIGINT        shift and go to state 465
    T_REAL          shift and go to state 466
    T_DOUBLE        shift and go to state 467
    T_MONEY         shift and go to state 468
    T_TEXT          shift and go to state 469
    T_BOOLEAN       shift and go to state 470
    R_TIMESTAMP     shift and go to state 471
    T_DATE          shift and go to state 472
    T_TIME          shift and go to state 473
    T_DECIMAL       shift and go to state 474
    T_NUMERIC       shift and go to state 475
    T_VARCHAR       shift and go to state 476
    T_CHARACTER     shift and go to state 477
    T_CHAR          shift and go to state 478
    R_INTERVAL      shift and go to state 479

    types                          shift and go to state 462

state 383

    (39) createTable -> createConstraint .

    S_PARDER        reduce using rule 39 (createTable -> createConstraint .)
    S_COMA          reduce using rule 39 (createTable -> createConstraint .)


state 384

    (40) createTable -> createUnique .

    S_PARDER        reduce using rule 40 (createTable -> createUnique .)
    S_COMA          reduce using rule 40 (createTable -> createUnique .)


state 385

    (41) createTable -> createPrimary .

    S_PARDER        reduce using rule 41 (createTable -> createPrimary .)
    S_COMA          reduce using rule 41 (createTable -> createPrimary .)


state 386

    (42) createTable -> createForeign .

    S_PARDER        reduce using rule 42 (createTable -> createForeign .)
    S_COMA          reduce using rule 42 (createTable -> createForeign .)


state 387

    (45) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (48) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_CHECK         shift and go to state 401
    R_FOREIGN       shift and go to state 402


state 388

    (46) createUnique -> R_UNIQUE . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 480


state 389

    (20) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner . createMode
    (33) createMode -> . R_MODE INTEGER
    (34) createMode -> . R_MODE S_IGUAL INTEGER
    (35) createMode -> .

    R_MODE          shift and go to state 482
    S_PUNTOCOMA     reduce using rule 35 (createMode -> .)

    createMode                     shift and go to state 481

state 390

    (28) createOwner -> R_OWNER . ID
    (29) createOwner -> R_OWNER . STRING
    (30) createOwner -> R_OWNER . S_IGUAL ID
    (31) createOwner -> R_OWNER . S_IGUAL STRING

    ID              shift and go to state 483
    STRING          shift and go to state 484
    S_IGUAL         shift and go to state 485


state 391

    (23) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 486


state 392

    (241) alterDb -> R_RENAME R_TO idOrString .

    S_PUNTOCOMA     reduce using rule 241 (alterDb -> R_RENAME R_TO idOrString .)


state 393

    (242) alterDb -> R_OWNER R_TO ownerOPts .

    S_PUNTOCOMA     reduce using rule 242 (alterDb -> R_OWNER R_TO ownerOPts .)


state 394

    (243) ownerOPts -> idOrString .

    S_PUNTOCOMA     reduce using rule 243 (ownerOPts -> idOrString .)


state 395

    (244) ownerOPts -> R_CURRENT_USER .

    S_PUNTOCOMA     reduce using rule 244 (ownerOPts -> R_CURRENT_USER .)


state 396

    (245) ownerOPts -> R_SESSION_USER .

    S_PUNTOCOMA     reduce using rule 245 (ownerOPts -> R_SESSION_USER .)


state 397

    (257) alterAlter -> R_COLUMN ID . R_SET nullOpt
    (258) alterAlter -> R_COLUMN ID . R_SET defaultVal
    (259) alterAlter -> R_COLUMN ID . R_TYPE types

    R_SET           shift and go to state 487
    R_TYPE          shift and go to state 488


state 398

    (246) alterTableList -> alterTableList S_COMA alterTable .

    S_COMA          reduce using rule 246 (alterTableList -> alterTableList S_COMA alterTable .)
    S_PUNTOCOMA     reduce using rule 246 (alterTableList -> alterTableList S_COMA alterTable .)


state 399

    (252) alterAdd -> R_COLUMN ID . types
    (53) types -> . ID
    (54) types -> . T_SMALLINT
    (55) types -> . T_INTEGER
    (56) types -> . T_BIGINT
    (57) types -> . T_REAL
    (58) types -> . T_DOUBLE T_PRECISION
    (59) types -> . T_MONEY
    (60) types -> . T_TEXT
    (61) types -> . T_BOOLEAN
    (62) types -> . R_TIMESTAMP
    (63) types -> . T_DATE
    (64) types -> . T_TIME
    (65) types -> . T_DECIMAL optParams
    (66) types -> . T_NUMERIC optParams
    (67) types -> . T_VARCHAR optParams
    (68) types -> . T_CHARACTER optParams
    (69) types -> . T_CHAR optParams
    (70) types -> . T_CHARACTER T_VARYING optParams
    (71) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 461
    T_SMALLINT      shift and go to state 463
    T_INTEGER       shift and go to state 464
    T_BIGINT        shift and go to state 465
    T_REAL          shift and go to state 466
    T_DOUBLE        shift and go to state 467
    T_MONEY         shift and go to state 468
    T_TEXT          shift and go to state 469
    T_BOOLEAN       shift and go to state 470
    R_TIMESTAMP     shift and go to state 471
    T_DATE          shift and go to state 472
    T_TIME          shift and go to state 473
    T_DECIMAL       shift and go to state 474
    T_NUMERIC       shift and go to state 475
    T_VARCHAR       shift and go to state 476
    T_CHARACTER     shift and go to state 477
    T_CHAR          shift and go to state 478
    R_INTERVAL      shift and go to state 479

    types                          shift and go to state 489

state 400

    (256) alterAdd -> constrName R_UNIQUE . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 490


state 401

    (45) createConstraint -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 491


state 402

    (48) createForeign -> constrName R_FOREIGN . R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 492


state 403

    (47) createPrimary -> R_PRIMARY R_KEY . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 493


state 404

    (49) constrName -> R_CONSTRAINT ID .

    R_UNIQUE        reduce using rule 49 (constrName -> R_CONSTRAINT ID .)
    R_CHECK         reduce using rule 49 (constrName -> R_CONSTRAINT ID .)
    R_FOREIGN       reduce using rule 49 (constrName -> R_CONSTRAINT ID .)


state 405

    (260) alterDrop -> R_CONSTRAINT ID .

    S_COMA          reduce using rule 260 (alterDrop -> R_CONSTRAINT ID .)
    S_PUNTOCOMA     reduce using rule 260 (alterDrop -> R_CONSTRAINT ID .)


state 406

    (261) alterDrop -> R_COLUMN ID .

    S_COMA          reduce using rule 261 (alterDrop -> R_COLUMN ID .)
    S_PUNTOCOMA     reduce using rule 261 (alterDrop -> R_COLUMN ID .)


state 407

    (262) alterRename -> R_COLUMN ID . R_TO ID

    R_TO            shift and go to state 494


state 408

    (334) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ . paramsList S_PARDER
    (133) paramsList -> . paramsList S_COMA datatype
    (134) paramsList -> . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    paramsList                     shift and go to state 495
    datatype                       shift and go to state 235
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 409

    (335) paramsColumn -> S_PARIZQ idList S_PARDER .

    R_VALUES        reduce using rule 335 (paramsColumn -> S_PARIZQ idList S_PARDER .)


state 410

    (51) idList -> idList S_COMA . ID

    ID              shift and go to state 496


state 411

    (338) updateCols -> updateCols S_COMA updateVals .

    S_COMA          reduce using rule 338 (updateCols -> updateCols S_COMA updateVals .)
    R_WHERE         reduce using rule 338 (updateCols -> updateCols S_COMA updateVals .)
    S_PUNTOCOMA     reduce using rule 338 (updateCols -> updateCols S_COMA updateVals .)


state 412

    (340) updateVals -> ID S_IGUAL updateExp .

    S_COMA          reduce using rule 340 (updateVals -> ID S_IGUAL updateExp .)
    R_WHERE         reduce using rule 340 (updateVals -> ID S_IGUAL updateExp .)
    S_PUNTOCOMA     reduce using rule 340 (updateVals -> ID S_IGUAL updateExp .)


state 413

    (341) updateExp -> datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    S_COMA          reduce using rule 341 (updateExp -> datatype .)
    R_WHERE         reduce using rule 341 (updateExp -> datatype .)
    S_PUNTOCOMA     reduce using rule 341 (updateExp -> datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 414

    (342) updateExp -> R_DEFAULT .

    S_COMA          reduce using rule 342 (updateExp -> R_DEFAULT .)
    R_WHERE         reduce using rule 342 (updateExp -> R_DEFAULT .)
    S_PUNTOCOMA     reduce using rule 342 (updateExp -> R_DEFAULT .)


state 415

    (292) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .

    R_SET           reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_COMA          reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_WHERE         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_NATURAL       reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INNER         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LEFT          reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_RIGHT         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_FULL          reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_GROUP         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LIMIT         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_ORDER         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_UNION         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INTERSECT     reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_EXCEPT        reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PARDER        reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)


state 416

    (267) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl . limitCl
    (329) limitCl -> . R_LIMIT INTEGER offsetLimit
    (330) limitCl -> . R_LIMIT R_ALL offsetLimit
    (331) limitCl -> .

    R_LIMIT         shift and go to state 419
    S_PUNTOCOMA     reduce using rule 331 (limitCl -> .)
    R_UNION         reduce using rule 331 (limitCl -> .)
    R_INTERSECT     reduce using rule 331 (limitCl -> .)
    R_EXCEPT        reduce using rule 331 (limitCl -> .)
    S_PARDER        reduce using rule 331 (limitCl -> .)

    limitCl                        shift and go to state 497

state 417

    (268) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 268 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 268 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 268 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 268 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 268 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)


state 418

    (270) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (329) limitCl -> . R_LIMIT INTEGER offsetLimit
    (330) limitCl -> . R_LIMIT R_ALL offsetLimit
    (331) limitCl -> .

    R_LIMIT         shift and go to state 419
    S_PUNTOCOMA     reduce using rule 331 (limitCl -> .)
    R_UNION         reduce using rule 331 (limitCl -> .)
    R_INTERSECT     reduce using rule 331 (limitCl -> .)
    R_EXCEPT        reduce using rule 331 (limitCl -> .)
    S_PARDER        reduce using rule 331 (limitCl -> .)

    limitCl                        shift and go to state 498

state 419

    (329) limitCl -> R_LIMIT . INTEGER offsetLimit
    (330) limitCl -> R_LIMIT . R_ALL offsetLimit

    INTEGER         shift and go to state 499
    R_ALL           shift and go to state 500


state 420

    (318) orderByCl -> R_ORDER . R_BY orderList

    R_BY            shift and go to state 501


state 421

    (310) groupByCl -> R_GROUP R_BY . groupList havingCl
    (312) groupList -> . groupList S_COMA columnName
    (313) groupList -> . groupList S_COMA INTEGER
    (314) groupList -> . columnName
    (315) groupList -> . INTEGER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 504
    ID              shift and go to state 424

    groupList                      shift and go to state 502
    columnName                     shift and go to state 503

state 422

    (269) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . limitCl
    (318) orderByCl -> . R_ORDER R_BY orderList
    (329) limitCl -> . R_LIMIT INTEGER offsetLimit
    (330) limitCl -> . R_LIMIT R_ALL offsetLimit
    (331) limitCl -> .

    R_ORDER         shift and go to state 420
    R_LIMIT         shift and go to state 419
    S_PUNTOCOMA     reduce using rule 331 (limitCl -> .)
    R_UNION         reduce using rule 331 (limitCl -> .)
    R_INTERSECT     reduce using rule 331 (limitCl -> .)
    R_EXCEPT        reduce using rule 331 (limitCl -> .)
    S_PARDER        reduce using rule 331 (limitCl -> .)

    orderByCl                      shift and go to state 505
    limitCl                        shift and go to state 506

state 423

    (296) joinCl -> joinOpt R_JOIN columnName . optAlias R_ON expBool
    (297) joinCl -> joinOpt R_JOIN columnName . optAlias R_USING S_PARIZQ nameList S_PARDER
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 126
    R_ON            reduce using rule 288 (optAlias -> .)
    R_USING         reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    optAlias                       shift and go to state 507
    idOrString                     shift and go to state 127

state 424

    (222) columnName -> ID .
    (223) columnName -> ID . S_PUNTO ID

    R_AS            reduce using rule 222 (columnName -> ID .)
    ID              reduce using rule 222 (columnName -> ID .)
    STRING          reduce using rule 222 (columnName -> ID .)
    CHARACTER       reduce using rule 222 (columnName -> ID .)
    R_ON            reduce using rule 222 (columnName -> ID .)
    R_USING         reduce using rule 222 (columnName -> ID .)
    S_PARDER        reduce using rule 222 (columnName -> ID .)
    S_COMA          reduce using rule 222 (columnName -> ID .)
    R_HAVING        reduce using rule 222 (columnName -> ID .)
    R_LIMIT         reduce using rule 222 (columnName -> ID .)
    R_ORDER         reduce using rule 222 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 222 (columnName -> ID .)
    R_UNION         reduce using rule 222 (columnName -> ID .)
    R_INTERSECT     reduce using rule 222 (columnName -> ID .)
    R_EXCEPT        reduce using rule 222 (columnName -> ID .)
    R_NATURAL       reduce using rule 222 (columnName -> ID .)
    R_INNER         reduce using rule 222 (columnName -> ID .)
    R_LEFT          reduce using rule 222 (columnName -> ID .)
    R_RIGHT         reduce using rule 222 (columnName -> ID .)
    R_FULL          reduce using rule 222 (columnName -> ID .)
    R_WHERE         reduce using rule 222 (columnName -> ID .)
    R_GROUP         reduce using rule 222 (columnName -> ID .)
    R_ASC           reduce using rule 222 (columnName -> ID .)
    R_DESC          reduce using rule 222 (columnName -> ID .)
    R_NULL          reduce using rule 222 (columnName -> ID .)
    S_PUNTO         shift and go to state 280


state 425

    (298) joinCl -> R_NATURAL joinOpt R_JOIN . columnName optAlias
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 424

    columnName                     shift and go to state 508

state 426

    (133) paramsList -> paramsList S_COMA datatype .
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 133 (paramsList -> paramsList S_COMA datatype .)
    S_COMA          reduce using rule 133 (paramsList -> paramsList S_COMA datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146


state 427

    (206) boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 206 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)


state 428

    (207) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 509
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 429

    (166) expComp -> datatype R_NOT R_BETWEEN datatype R_AND . datatype
    (185) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 510
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 430

    (178) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 511
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 431

    (179) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 512
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 432

    (180) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 513
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 433

    (181) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 514
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 434

    (183) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 515
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 435

    (163) expComp -> datatype R_IS R_DISTINCT R_FROM datatype .
    (187) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 163 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 516

state 436

    (164) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype
    (188) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 517
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 437

    (190) expSubq -> datatype R_IS R_NOT R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 518


state 438

    (194) expSubq -> datatype R_IS R_NOT R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 519


state 439

    (196) expSubq -> datatype R_IS R_NOT R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 520


state 440

    (198) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 521


state 441

    (189) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 522

state 442

    (193) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 523

state 443

    (195) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 524

state 444

    (197) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 525

state 445

    (165) expComp -> datatype R_BETWEEN datatype R_AND datatype .
    (184) expSubq -> datatype R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 165 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 526

state 446

    (167) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype
    (186) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    datatype                       shift and go to state 527
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 447

    (191) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 528
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 448

    (192) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 529
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 449

    (182) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 530
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 450

    (145) caseWhen -> R_WHEN expBool R_THEN literal .

    R_ELSE          reduce using rule 145 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_WHEN          reduce using rule 145 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_END           reduce using rule 145 (caseWhen -> R_WHEN expBool R_THEN literal .)


state 451

    (105) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp . S_PARDER

    S_PARDER        shift and go to state 531


state 452

    (106) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName . S_PARDER

    S_PARDER        shift and go to state 532


state 453

    (115) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource . S_PARDER

    S_PARDER        shift and go to state 533


state 454

    (116) dateSource -> R_TIMESTAMP . STRING

    STRING          shift and go to state 534


state 455

    (117) dateSource -> T_DATE . STRING

    STRING          shift and go to state 535


state 456

    (118) dateSource -> T_TIME . STRING

    STRING          shift and go to state 536


state 457

    (119) dateSource -> R_INTERVAL . STRING

    STRING          shift and go to state 537


state 458

    (120) dateSource -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 538


state 459

    (19) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER . inheritsOpt
    (26) inheritsOpt -> . R_INHERITS S_PARIZQ ID S_PARDER
    (27) inheritsOpt -> .

    R_INHERITS      shift and go to state 540
    S_PUNTOCOMA     reduce using rule 27 (inheritsOpt -> .)

    inheritsOpt                    shift and go to state 539

state 460

    (36) createTableList -> createTableList S_COMA . createTable
    (38) createTable -> . ID types createColumns
    (39) createTable -> . createConstraint
    (40) createTable -> . createUnique
    (41) createTable -> . createPrimary
    (42) createTable -> . createForeign
    (45) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (46) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (47) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (48) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (49) constrName -> . R_CONSTRAINT ID
    (50) constrName -> .

    ID              shift and go to state 382
    R_UNIQUE        shift and go to state 388
    R_PRIMARY       shift and go to state 316
    R_CONSTRAINT    shift and go to state 317
    R_CHECK         reduce using rule 50 (constrName -> .)
    R_FOREIGN       reduce using rule 50 (constrName -> .)

    createTable                    shift and go to state 541
    createConstraint               shift and go to state 383
    createUnique                   shift and go to state 384
    createPrimary                  shift and go to state 385
    createForeign                  shift and go to state 386
    constrName                     shift and go to state 387

state 461

    (53) types -> ID .

    R_DEFAULT       reduce using rule 53 (types -> ID .)
    R_NOT           reduce using rule 53 (types -> ID .)
    R_NULL          reduce using rule 53 (types -> ID .)
    R_PRIMARY       reduce using rule 53 (types -> ID .)
    R_REFERENCES    reduce using rule 53 (types -> ID .)
    R_CONSTRAINT    reduce using rule 53 (types -> ID .)
    R_UNIQUE        reduce using rule 53 (types -> ID .)
    R_CHECK         reduce using rule 53 (types -> ID .)
    S_PARDER        reduce using rule 53 (types -> ID .)
    S_COMA          reduce using rule 53 (types -> ID .)
    S_PUNTOCOMA     reduce using rule 53 (types -> ID .)


state 462

    (38) createTable -> ID types . createColumns
    (43) createColumns -> . colOptionsList
    (44) createColumns -> .
    (81) colOptionsList -> . colOptionsList colOptions
    (82) colOptionsList -> . colOptions
    (83) colOptions -> . defaultVal
    (84) colOptions -> . nullOpt
    (85) colOptions -> . constraintOpt
    (86) colOptions -> . primaryOpt
    (87) colOptions -> . referencesOpt
    (88) defaultVal -> . R_DEFAULT literal
    (89) nullOpt -> . R_NOT R_NULL
    (90) nullOpt -> . R_NULL
    (91) constraintOpt -> . constrName R_UNIQUE
    (92) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (93) primaryOpt -> . R_PRIMARY R_KEY
    (94) referencesOpt -> . R_REFERENCES ID
    (49) constrName -> . R_CONSTRAINT ID
    (50) constrName -> .

    S_PARDER        reduce using rule 44 (createColumns -> .)
    S_COMA          reduce using rule 44 (createColumns -> .)
    R_DEFAULT       shift and go to state 550
    R_NOT           shift and go to state 551
    R_NULL          shift and go to state 552
    R_PRIMARY       shift and go to state 554
    R_REFERENCES    shift and go to state 555
    R_CONSTRAINT    shift and go to state 317
    R_UNIQUE        reduce using rule 50 (constrName -> .)
    R_CHECK         reduce using rule 50 (constrName -> .)

    createColumns                  shift and go to state 542
    colOptionsList                 shift and go to state 543
    colOptions                     shift and go to state 544
    defaultVal                     shift and go to state 545
    nullOpt                        shift and go to state 546
    constraintOpt                  shift and go to state 547
    primaryOpt                     shift and go to state 548
    referencesOpt                  shift and go to state 549
    constrName                     shift and go to state 553

state 463

    (54) types -> T_SMALLINT .

    R_DEFAULT       reduce using rule 54 (types -> T_SMALLINT .)
    R_NOT           reduce using rule 54 (types -> T_SMALLINT .)
    R_NULL          reduce using rule 54 (types -> T_SMALLINT .)
    R_PRIMARY       reduce using rule 54 (types -> T_SMALLINT .)
    R_REFERENCES    reduce using rule 54 (types -> T_SMALLINT .)
    R_CONSTRAINT    reduce using rule 54 (types -> T_SMALLINT .)
    R_UNIQUE        reduce using rule 54 (types -> T_SMALLINT .)
    R_CHECK         reduce using rule 54 (types -> T_SMALLINT .)
    S_PARDER        reduce using rule 54 (types -> T_SMALLINT .)
    S_COMA          reduce using rule 54 (types -> T_SMALLINT .)
    S_PUNTOCOMA     reduce using rule 54 (types -> T_SMALLINT .)


state 464

    (55) types -> T_INTEGER .

    R_DEFAULT       reduce using rule 55 (types -> T_INTEGER .)
    R_NOT           reduce using rule 55 (types -> T_INTEGER .)
    R_NULL          reduce using rule 55 (types -> T_INTEGER .)
    R_PRIMARY       reduce using rule 55 (types -> T_INTEGER .)
    R_REFERENCES    reduce using rule 55 (types -> T_INTEGER .)
    R_CONSTRAINT    reduce using rule 55 (types -> T_INTEGER .)
    R_UNIQUE        reduce using rule 55 (types -> T_INTEGER .)
    R_CHECK         reduce using rule 55 (types -> T_INTEGER .)
    S_PARDER        reduce using rule 55 (types -> T_INTEGER .)
    S_COMA          reduce using rule 55 (types -> T_INTEGER .)
    S_PUNTOCOMA     reduce using rule 55 (types -> T_INTEGER .)


state 465

    (56) types -> T_BIGINT .

    R_DEFAULT       reduce using rule 56 (types -> T_BIGINT .)
    R_NOT           reduce using rule 56 (types -> T_BIGINT .)
    R_NULL          reduce using rule 56 (types -> T_BIGINT .)
    R_PRIMARY       reduce using rule 56 (types -> T_BIGINT .)
    R_REFERENCES    reduce using rule 56 (types -> T_BIGINT .)
    R_CONSTRAINT    reduce using rule 56 (types -> T_BIGINT .)
    R_UNIQUE        reduce using rule 56 (types -> T_BIGINT .)
    R_CHECK         reduce using rule 56 (types -> T_BIGINT .)
    S_PARDER        reduce using rule 56 (types -> T_BIGINT .)
    S_COMA          reduce using rule 56 (types -> T_BIGINT .)
    S_PUNTOCOMA     reduce using rule 56 (types -> T_BIGINT .)


state 466

    (57) types -> T_REAL .

    R_DEFAULT       reduce using rule 57 (types -> T_REAL .)
    R_NOT           reduce using rule 57 (types -> T_REAL .)
    R_NULL          reduce using rule 57 (types -> T_REAL .)
    R_PRIMARY       reduce using rule 57 (types -> T_REAL .)
    R_REFERENCES    reduce using rule 57 (types -> T_REAL .)
    R_CONSTRAINT    reduce using rule 57 (types -> T_REAL .)
    R_UNIQUE        reduce using rule 57 (types -> T_REAL .)
    R_CHECK         reduce using rule 57 (types -> T_REAL .)
    S_PARDER        reduce using rule 57 (types -> T_REAL .)
    S_COMA          reduce using rule 57 (types -> T_REAL .)
    S_PUNTOCOMA     reduce using rule 57 (types -> T_REAL .)


state 467

    (58) types -> T_DOUBLE . T_PRECISION

    T_PRECISION     shift and go to state 556


state 468

    (59) types -> T_MONEY .

    R_DEFAULT       reduce using rule 59 (types -> T_MONEY .)
    R_NOT           reduce using rule 59 (types -> T_MONEY .)
    R_NULL          reduce using rule 59 (types -> T_MONEY .)
    R_PRIMARY       reduce using rule 59 (types -> T_MONEY .)
    R_REFERENCES    reduce using rule 59 (types -> T_MONEY .)
    R_CONSTRAINT    reduce using rule 59 (types -> T_MONEY .)
    R_UNIQUE        reduce using rule 59 (types -> T_MONEY .)
    R_CHECK         reduce using rule 59 (types -> T_MONEY .)
    S_PARDER        reduce using rule 59 (types -> T_MONEY .)
    S_COMA          reduce using rule 59 (types -> T_MONEY .)
    S_PUNTOCOMA     reduce using rule 59 (types -> T_MONEY .)


state 469

    (60) types -> T_TEXT .

    R_DEFAULT       reduce using rule 60 (types -> T_TEXT .)
    R_NOT           reduce using rule 60 (types -> T_TEXT .)
    R_NULL          reduce using rule 60 (types -> T_TEXT .)
    R_PRIMARY       reduce using rule 60 (types -> T_TEXT .)
    R_REFERENCES    reduce using rule 60 (types -> T_TEXT .)
    R_CONSTRAINT    reduce using rule 60 (types -> T_TEXT .)
    R_UNIQUE        reduce using rule 60 (types -> T_TEXT .)
    R_CHECK         reduce using rule 60 (types -> T_TEXT .)
    S_PARDER        reduce using rule 60 (types -> T_TEXT .)
    S_COMA          reduce using rule 60 (types -> T_TEXT .)
    S_PUNTOCOMA     reduce using rule 60 (types -> T_TEXT .)


state 470

    (61) types -> T_BOOLEAN .

    R_DEFAULT       reduce using rule 61 (types -> T_BOOLEAN .)
    R_NOT           reduce using rule 61 (types -> T_BOOLEAN .)
    R_NULL          reduce using rule 61 (types -> T_BOOLEAN .)
    R_PRIMARY       reduce using rule 61 (types -> T_BOOLEAN .)
    R_REFERENCES    reduce using rule 61 (types -> T_BOOLEAN .)
    R_CONSTRAINT    reduce using rule 61 (types -> T_BOOLEAN .)
    R_UNIQUE        reduce using rule 61 (types -> T_BOOLEAN .)
    R_CHECK         reduce using rule 61 (types -> T_BOOLEAN .)
    S_PARDER        reduce using rule 61 (types -> T_BOOLEAN .)
    S_COMA          reduce using rule 61 (types -> T_BOOLEAN .)
    S_PUNTOCOMA     reduce using rule 61 (types -> T_BOOLEAN .)


state 471

    (62) types -> R_TIMESTAMP .

    R_DEFAULT       reduce using rule 62 (types -> R_TIMESTAMP .)
    R_NOT           reduce using rule 62 (types -> R_TIMESTAMP .)
    R_NULL          reduce using rule 62 (types -> R_TIMESTAMP .)
    R_PRIMARY       reduce using rule 62 (types -> R_TIMESTAMP .)
    R_REFERENCES    reduce using rule 62 (types -> R_TIMESTAMP .)
    R_CONSTRAINT    reduce using rule 62 (types -> R_TIMESTAMP .)
    R_UNIQUE        reduce using rule 62 (types -> R_TIMESTAMP .)
    R_CHECK         reduce using rule 62 (types -> R_TIMESTAMP .)
    S_PARDER        reduce using rule 62 (types -> R_TIMESTAMP .)
    S_COMA          reduce using rule 62 (types -> R_TIMESTAMP .)
    S_PUNTOCOMA     reduce using rule 62 (types -> R_TIMESTAMP .)


state 472

    (63) types -> T_DATE .

    R_DEFAULT       reduce using rule 63 (types -> T_DATE .)
    R_NOT           reduce using rule 63 (types -> T_DATE .)
    R_NULL          reduce using rule 63 (types -> T_DATE .)
    R_PRIMARY       reduce using rule 63 (types -> T_DATE .)
    R_REFERENCES    reduce using rule 63 (types -> T_DATE .)
    R_CONSTRAINT    reduce using rule 63 (types -> T_DATE .)
    R_UNIQUE        reduce using rule 63 (types -> T_DATE .)
    R_CHECK         reduce using rule 63 (types -> T_DATE .)
    S_PARDER        reduce using rule 63 (types -> T_DATE .)
    S_COMA          reduce using rule 63 (types -> T_DATE .)
    S_PUNTOCOMA     reduce using rule 63 (types -> T_DATE .)


state 473

    (64) types -> T_TIME .

    R_DEFAULT       reduce using rule 64 (types -> T_TIME .)
    R_NOT           reduce using rule 64 (types -> T_TIME .)
    R_NULL          reduce using rule 64 (types -> T_TIME .)
    R_PRIMARY       reduce using rule 64 (types -> T_TIME .)
    R_REFERENCES    reduce using rule 64 (types -> T_TIME .)
    R_CONSTRAINT    reduce using rule 64 (types -> T_TIME .)
    R_UNIQUE        reduce using rule 64 (types -> T_TIME .)
    R_CHECK         reduce using rule 64 (types -> T_TIME .)
    S_PARDER        reduce using rule 64 (types -> T_TIME .)
    S_COMA          reduce using rule 64 (types -> T_TIME .)
    S_PUNTOCOMA     reduce using rule 64 (types -> T_TIME .)


state 474

    (65) types -> T_DECIMAL . optParams
    (79) optParams -> . S_PARIZQ literalList S_PARDER
    (80) optParams -> .

    S_PARIZQ        shift and go to state 558
    R_DEFAULT       reduce using rule 80 (optParams -> .)
    R_NOT           reduce using rule 80 (optParams -> .)
    R_NULL          reduce using rule 80 (optParams -> .)
    R_PRIMARY       reduce using rule 80 (optParams -> .)
    R_REFERENCES    reduce using rule 80 (optParams -> .)
    R_CONSTRAINT    reduce using rule 80 (optParams -> .)
    R_UNIQUE        reduce using rule 80 (optParams -> .)
    R_CHECK         reduce using rule 80 (optParams -> .)
    S_PARDER        reduce using rule 80 (optParams -> .)
    S_COMA          reduce using rule 80 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 80 (optParams -> .)

    optParams                      shift and go to state 557

state 475

    (66) types -> T_NUMERIC . optParams
    (79) optParams -> . S_PARIZQ literalList S_PARDER
    (80) optParams -> .

    S_PARIZQ        shift and go to state 558
    R_DEFAULT       reduce using rule 80 (optParams -> .)
    R_NOT           reduce using rule 80 (optParams -> .)
    R_NULL          reduce using rule 80 (optParams -> .)
    R_PRIMARY       reduce using rule 80 (optParams -> .)
    R_REFERENCES    reduce using rule 80 (optParams -> .)
    R_CONSTRAINT    reduce using rule 80 (optParams -> .)
    R_UNIQUE        reduce using rule 80 (optParams -> .)
    R_CHECK         reduce using rule 80 (optParams -> .)
    S_PARDER        reduce using rule 80 (optParams -> .)
    S_COMA          reduce using rule 80 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 80 (optParams -> .)

    optParams                      shift and go to state 559

state 476

    (67) types -> T_VARCHAR . optParams
    (79) optParams -> . S_PARIZQ literalList S_PARDER
    (80) optParams -> .

    S_PARIZQ        shift and go to state 558
    R_DEFAULT       reduce using rule 80 (optParams -> .)
    R_NOT           reduce using rule 80 (optParams -> .)
    R_NULL          reduce using rule 80 (optParams -> .)
    R_PRIMARY       reduce using rule 80 (optParams -> .)
    R_REFERENCES    reduce using rule 80 (optParams -> .)
    R_CONSTRAINT    reduce using rule 80 (optParams -> .)
    R_UNIQUE        reduce using rule 80 (optParams -> .)
    R_CHECK         reduce using rule 80 (optParams -> .)
    S_PARDER        reduce using rule 80 (optParams -> .)
    S_COMA          reduce using rule 80 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 80 (optParams -> .)

    optParams                      shift and go to state 560

state 477

    (68) types -> T_CHARACTER . optParams
    (70) types -> T_CHARACTER . T_VARYING optParams
    (79) optParams -> . S_PARIZQ literalList S_PARDER
    (80) optParams -> .

    T_VARYING       shift and go to state 562
    S_PARIZQ        shift and go to state 558
    R_DEFAULT       reduce using rule 80 (optParams -> .)
    R_NOT           reduce using rule 80 (optParams -> .)
    R_NULL          reduce using rule 80 (optParams -> .)
    R_PRIMARY       reduce using rule 80 (optParams -> .)
    R_REFERENCES    reduce using rule 80 (optParams -> .)
    R_CONSTRAINT    reduce using rule 80 (optParams -> .)
    R_UNIQUE        reduce using rule 80 (optParams -> .)
    R_CHECK         reduce using rule 80 (optParams -> .)
    S_PARDER        reduce using rule 80 (optParams -> .)
    S_COMA          reduce using rule 80 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 80 (optParams -> .)

    optParams                      shift and go to state 561

state 478

    (69) types -> T_CHAR . optParams
    (79) optParams -> . S_PARIZQ literalList S_PARDER
    (80) optParams -> .

    S_PARIZQ        shift and go to state 558
    R_DEFAULT       reduce using rule 80 (optParams -> .)
    R_NOT           reduce using rule 80 (optParams -> .)
    R_NULL          reduce using rule 80 (optParams -> .)
    R_PRIMARY       reduce using rule 80 (optParams -> .)
    R_REFERENCES    reduce using rule 80 (optParams -> .)
    R_CONSTRAINT    reduce using rule 80 (optParams -> .)
    R_UNIQUE        reduce using rule 80 (optParams -> .)
    R_CHECK         reduce using rule 80 (optParams -> .)
    S_PARDER        reduce using rule 80 (optParams -> .)
    S_COMA          reduce using rule 80 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 80 (optParams -> .)

    optParams                      shift and go to state 563

state 479

    (71) types -> R_INTERVAL . intervalFields
    (72) intervalFields -> . R_YEAR
    (73) intervalFields -> . R_MONTH
    (74) intervalFields -> . R_DAY
    (75) intervalFields -> . R_HOUR
    (76) intervalFields -> . R_MINUTE
    (77) intervalFields -> . R_SECOND
    (78) intervalFields -> .

    R_YEAR          shift and go to state 565
    R_MONTH         shift and go to state 566
    R_DAY           shift and go to state 567
    R_HOUR          shift and go to state 568
    R_MINUTE        shift and go to state 569
    R_SECOND        shift and go to state 570
    R_DEFAULT       reduce using rule 78 (intervalFields -> .)
    R_NOT           reduce using rule 78 (intervalFields -> .)
    R_NULL          reduce using rule 78 (intervalFields -> .)
    R_PRIMARY       reduce using rule 78 (intervalFields -> .)
    R_REFERENCES    reduce using rule 78 (intervalFields -> .)
    R_CONSTRAINT    reduce using rule 78 (intervalFields -> .)
    R_UNIQUE        reduce using rule 78 (intervalFields -> .)
    R_CHECK         reduce using rule 78 (intervalFields -> .)
    S_PARDER        reduce using rule 78 (intervalFields -> .)
    S_COMA          reduce using rule 78 (intervalFields -> .)
    S_PUNTOCOMA     reduce using rule 78 (intervalFields -> .)

    intervalFields                 shift and go to state 564

state 480

    (46) createUnique -> R_UNIQUE S_PARIZQ . idList S_PARDER
    (51) idList -> . idList S_COMA ID
    (52) idList -> . ID

    ID              shift and go to state 325

    idList                         shift and go to state 571

state 481

    (20) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .

    S_PUNTOCOMA     reduce using rule 20 (createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .)


state 482

    (33) createMode -> R_MODE . INTEGER
    (34) createMode -> R_MODE . S_IGUAL INTEGER

    INTEGER         shift and go to state 572
    S_IGUAL         shift and go to state 573


state 483

    (28) createOwner -> R_OWNER ID .

    R_MODE          reduce using rule 28 (createOwner -> R_OWNER ID .)
    S_PUNTOCOMA     reduce using rule 28 (createOwner -> R_OWNER ID .)


state 484

    (29) createOwner -> R_OWNER STRING .

    R_MODE          reduce using rule 29 (createOwner -> R_OWNER STRING .)
    S_PUNTOCOMA     reduce using rule 29 (createOwner -> R_OWNER STRING .)


state 485

    (30) createOwner -> R_OWNER S_IGUAL . ID
    (31) createOwner -> R_OWNER S_IGUAL . STRING

    ID              shift and go to state 574
    STRING          shift and go to state 575


state 486

    (23) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ . paramsList S_PARDER
    (133) paramsList -> . paramsList S_COMA datatype
    (134) paramsList -> . datatype
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    S_PARIZQ        shift and go to state 171
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    paramsList                     shift and go to state 576
    datatype                       shift and go to state 235
    columnName                     shift and go to state 170
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    timeStamp                      shift and go to state 93

state 487

    (257) alterAlter -> R_COLUMN ID R_SET . nullOpt
    (258) alterAlter -> R_COLUMN ID R_SET . defaultVal
    (89) nullOpt -> . R_NOT R_NULL
    (90) nullOpt -> . R_NULL
    (88) defaultVal -> . R_DEFAULT literal

    R_NOT           shift and go to state 551
    R_NULL          shift and go to state 552
    R_DEFAULT       shift and go to state 550

    nullOpt                        shift and go to state 577
    defaultVal                     shift and go to state 578

state 488

    (259) alterAlter -> R_COLUMN ID R_TYPE . types
    (53) types -> . ID
    (54) types -> . T_SMALLINT
    (55) types -> . T_INTEGER
    (56) types -> . T_BIGINT
    (57) types -> . T_REAL
    (58) types -> . T_DOUBLE T_PRECISION
    (59) types -> . T_MONEY
    (60) types -> . T_TEXT
    (61) types -> . T_BOOLEAN
    (62) types -> . R_TIMESTAMP
    (63) types -> . T_DATE
    (64) types -> . T_TIME
    (65) types -> . T_DECIMAL optParams
    (66) types -> . T_NUMERIC optParams
    (67) types -> . T_VARCHAR optParams
    (68) types -> . T_CHARACTER optParams
    (69) types -> . T_CHAR optParams
    (70) types -> . T_CHARACTER T_VARYING optParams
    (71) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 461
    T_SMALLINT      shift and go to state 463
    T_INTEGER       shift and go to state 464
    T_BIGINT        shift and go to state 465
    T_REAL          shift and go to state 466
    T_DOUBLE        shift and go to state 467
    T_MONEY         shift and go to state 468
    T_TEXT          shift and go to state 469
    T_BOOLEAN       shift and go to state 470
    R_TIMESTAMP     shift and go to state 471
    T_DATE          shift and go to state 472
    T_TIME          shift and go to state 473
    T_DECIMAL       shift and go to state 474
    T_NUMERIC       shift and go to state 475
    T_VARCHAR       shift and go to state 476
    T_CHARACTER     shift and go to state 477
    T_CHAR          shift and go to state 478
    R_INTERVAL      shift and go to state 479

    types                          shift and go to state 579

state 489

    (252) alterAdd -> R_COLUMN ID types .

    S_COMA          reduce using rule 252 (alterAdd -> R_COLUMN ID types .)
    S_PUNTOCOMA     reduce using rule 252 (alterAdd -> R_COLUMN ID types .)


state 490

    (256) alterAdd -> constrName R_UNIQUE S_PARIZQ . ID S_PARDER

    ID              shift and go to state 580


state 491

    (45) createConstraint -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (224) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (225) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (226) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (227) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (228) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (229) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (230) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (231) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    booleanCheck                   shift and go to state 581
    idOrLiteral                    shift and go to state 582

state 492

    (48) createForeign -> constrName R_FOREIGN R_KEY . S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 590


state 493

    (47) createPrimary -> R_PRIMARY R_KEY S_PARIZQ . idList S_PARDER
    (51) idList -> . idList S_COMA ID
    (52) idList -> . ID

    ID              shift and go to state 325

    idList                         shift and go to state 591

state 494

    (262) alterRename -> R_COLUMN ID R_TO . ID

    ID              shift and go to state 592


state 495

    (334) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList . S_PARDER
    (133) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 593
    S_COMA          shift and go to state 343


state 496

    (51) idList -> idList S_COMA ID .

    S_PARDER        reduce using rule 51 (idList -> idList S_COMA ID .)
    S_COMA          reduce using rule 51 (idList -> idList S_COMA ID .)


state 497

    (267) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 267 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 267 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 267 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 267 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 267 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)


state 498

    (270) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 499

    (329) limitCl -> R_LIMIT INTEGER . offsetLimit
    (332) offsetLimit -> . R_OFFSET INTEGER
    (333) offsetLimit -> .

    R_OFFSET        shift and go to state 595
    S_PUNTOCOMA     reduce using rule 333 (offsetLimit -> .)
    R_UNION         reduce using rule 333 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 333 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 333 (offsetLimit -> .)
    S_PARDER        reduce using rule 333 (offsetLimit -> .)

    offsetLimit                    shift and go to state 594

state 500

    (330) limitCl -> R_LIMIT R_ALL . offsetLimit
    (332) offsetLimit -> . R_OFFSET INTEGER
    (333) offsetLimit -> .

    R_OFFSET        shift and go to state 595
    S_PUNTOCOMA     reduce using rule 333 (offsetLimit -> .)
    R_UNION         reduce using rule 333 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 333 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 333 (offsetLimit -> .)
    S_PARDER        reduce using rule 333 (offsetLimit -> .)

    offsetLimit                    shift and go to state 596

state 501

    (318) orderByCl -> R_ORDER R_BY . orderList
    (319) orderList -> . orderList S_COMA orderByElem
    (320) orderList -> . orderByElem
    (321) orderByElem -> . columnName orderOpts orderNull
    (322) orderByElem -> . INTEGER orderOpts orderNull
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 600
    ID              shift and go to state 424

    orderList                      shift and go to state 597
    orderByElem                    shift and go to state 598
    columnName                     shift and go to state 599

state 502

    (310) groupByCl -> R_GROUP R_BY groupList . havingCl
    (312) groupList -> groupList . S_COMA columnName
    (313) groupList -> groupList . S_COMA INTEGER
    (316) havingCl -> . R_HAVING expBool
    (317) havingCl -> .

    S_COMA          shift and go to state 602
    R_HAVING        shift and go to state 603
    R_LIMIT         reduce using rule 317 (havingCl -> .)
    R_ORDER         reduce using rule 317 (havingCl -> .)
    S_PUNTOCOMA     reduce using rule 317 (havingCl -> .)
    R_UNION         reduce using rule 317 (havingCl -> .)
    R_INTERSECT     reduce using rule 317 (havingCl -> .)
    R_EXCEPT        reduce using rule 317 (havingCl -> .)
    S_PARDER        reduce using rule 317 (havingCl -> .)

    havingCl                       shift and go to state 601

state 503

    (314) groupList -> columnName .

    S_COMA          reduce using rule 314 (groupList -> columnName .)
    R_HAVING        reduce using rule 314 (groupList -> columnName .)
    R_LIMIT         reduce using rule 314 (groupList -> columnName .)
    R_ORDER         reduce using rule 314 (groupList -> columnName .)
    S_PUNTOCOMA     reduce using rule 314 (groupList -> columnName .)
    R_UNION         reduce using rule 314 (groupList -> columnName .)
    R_INTERSECT     reduce using rule 314 (groupList -> columnName .)
    R_EXCEPT        reduce using rule 314 (groupList -> columnName .)
    S_PARDER        reduce using rule 314 (groupList -> columnName .)


state 504

    (315) groupList -> INTEGER .

    S_COMA          reduce using rule 315 (groupList -> INTEGER .)
    R_HAVING        reduce using rule 315 (groupList -> INTEGER .)
    R_LIMIT         reduce using rule 315 (groupList -> INTEGER .)
    R_ORDER         reduce using rule 315 (groupList -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 315 (groupList -> INTEGER .)
    R_UNION         reduce using rule 315 (groupList -> INTEGER .)
    R_INTERSECT     reduce using rule 315 (groupList -> INTEGER .)
    R_EXCEPT        reduce using rule 315 (groupList -> INTEGER .)
    S_PARDER        reduce using rule 315 (groupList -> INTEGER .)


state 505

    (269) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl . limitCl
    (329) limitCl -> . R_LIMIT INTEGER offsetLimit
    (330) limitCl -> . R_LIMIT R_ALL offsetLimit
    (331) limitCl -> .

    R_LIMIT         shift and go to state 419
    S_PUNTOCOMA     reduce using rule 331 (limitCl -> .)
    R_UNION         reduce using rule 331 (limitCl -> .)
    R_INTERSECT     reduce using rule 331 (limitCl -> .)
    R_EXCEPT        reduce using rule 331 (limitCl -> .)
    S_PARDER        reduce using rule 331 (limitCl -> .)

    limitCl                        shift and go to state 604

state 506

    (271) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 271 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 271 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 271 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 271 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 271 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)


state 507

    (296) joinCl -> joinOpt R_JOIN columnName optAlias . R_ON expBool
    (297) joinCl -> joinOpt R_JOIN columnName optAlias . R_USING S_PARIZQ nameList S_PARDER

    R_ON            shift and go to state 605
    R_USING         shift and go to state 606


state 508

    (298) joinCl -> R_NATURAL joinOpt R_JOIN columnName . optAlias
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 126
    R_NATURAL       reduce using rule 288 (optAlias -> .)
    R_INNER         reduce using rule 288 (optAlias -> .)
    R_LEFT          reduce using rule 288 (optAlias -> .)
    R_RIGHT         reduce using rule 288 (optAlias -> .)
    R_FULL          reduce using rule 288 (optAlias -> .)
    R_WHERE         reduce using rule 288 (optAlias -> .)
    R_GROUP         reduce using rule 288 (optAlias -> .)
    R_ORDER         reduce using rule 288 (optAlias -> .)
    R_LIMIT         reduce using rule 288 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> .)
    R_UNION         reduce using rule 288 (optAlias -> .)
    R_INTERSECT     reduce using rule 288 (optAlias -> .)
    R_EXCEPT        reduce using rule 288 (optAlias -> .)
    S_PARDER        reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 115
    STRING          shift and go to state 116
    CHARACTER       shift and go to state 117

    optAlias                       shift and go to state 607
    idOrString                     shift and go to state 127

state 509

    (207) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 207 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)


state 510

    (166) expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .
    (185) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 166 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 608

state 511

    (178) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 178 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 512

    (179) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 179 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 513

    (180) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 180 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 514

    (181) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 181 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 515

    (183) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 183 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)


state 516

    (187) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 609


state 517

    (164) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .
    (188) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 164 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 610

state 518

    (190) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 611

state 519

    (194) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 612

state 520

    (196) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 613

state 521

    (198) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 614

state 522

    (189) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 615
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 523

    (193) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 616
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 524

    (195) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 617
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 525

    (197) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 618
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 526

    (184) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 619


state 527

    (167) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .
    (186) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (135) datatype -> datatype . O_SUMA datatype
    (136) datatype -> datatype . O_RESTA datatype
    (137) datatype -> datatype . O_PRODUCTO datatype
    (138) datatype -> datatype . O_DIVISION datatype
    (139) datatype -> datatype . O_EXPONENTE datatype
    (140) datatype -> datatype . O_MODULAR datatype
    (141) datatype -> datatype . OC_CONCATENAR datatype
    (202) subqValues -> . R_ALL
    (203) subqValues -> . R_ANY
    (204) subqValues -> . R_SOME

    R_AND           reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_OR            reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_IS            reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_AS            reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    ID              reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    STRING          reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    CHARACTER       reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_COMA          reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FROM          reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_UNION         reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PARDER        reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_GROUP         reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LIMIT         reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_ORDER         reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_THEN          reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_NATURAL       reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INNER         reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LEFT          reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_RIGHT         reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FULL          reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_WHERE         reduce using rule 167 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    O_SUMA          shift and go to state 140
    O_RESTA         shift and go to state 141
    O_PRODUCTO      shift and go to state 142
    O_DIVISION      shift and go to state 143
    O_EXPONENTE     shift and go to state 144
    O_MODULAR       shift and go to state 145
    OC_CONCATENAR   shift and go to state 146
    R_ALL           shift and go to state 248
    R_ANY           shift and go to state 249
    R_SOME          shift and go to state 250

    subqValues                     shift and go to state 620

state 528

    (191) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 191 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 529

    (192) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 192 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 530

    (182) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 182 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)


state 531

    (105) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .

    O_SUMA          reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_RESTA         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_PRODUCTO      reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_DIVISION      reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_EXPONENTE     reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_MODULAR       reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OC_CONCATENAR   reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IN            reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOT           reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORQUE     reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORQUE     reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_IGUAL         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_DISTINTODE   reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IS            reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_BETWEEN       reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ISNULL        reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOTNULL       reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_ESIGUAL      reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AS            reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    ID              reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    STRING          reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    CHARACTER       reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_COMA          reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FROM          reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PUNTOCOMA     reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_UNION         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INTERSECT     reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_EXCEPT        reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PARDER        reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AND           reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_OR            reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_GROUP         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LIMIT         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ORDER         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_THEN          reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NATURAL       reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INNER         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LEFT          reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_RIGHT         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FULL          reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_WHERE         reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ALL           reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ANY           reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_SOME          reduce using rule 105 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)


state 532

    (106) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .

    O_SUMA          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_RESTA         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_PRODUCTO      reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_DIVISION      reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_EXPONENTE     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_MODULAR       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OC_CONCATENAR   reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IN            reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOT           reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORQUE     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORQUE     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_IGUAL         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_DISTINTODE   reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IS            reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_BETWEEN       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ISNULL        reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOTNULL       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_ESIGUAL      reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AS            reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    ID              reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    STRING          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    CHARACTER       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_COMA          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FROM          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PUNTOCOMA     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_UNION         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INTERSECT     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_EXCEPT        reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PARDER        reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AND           reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_OR            reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_GROUP         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LIMIT         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ORDER         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_THEN          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NATURAL       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INNER         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LEFT          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_RIGHT         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FULL          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_WHERE         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ALL           reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ANY           reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_SOME          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)


state 533

    (115) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .

    O_SUMA          reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_RESTA         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_PRODUCTO      reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_DIVISION      reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_EXPONENTE     reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_MODULAR       reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OC_CONCATENAR   reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IN            reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOT           reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORQUE     reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORQUE     reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_IGUAL         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_DISTINTODE   reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IS            reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_BETWEEN       reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ISNULL        reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOTNULL       reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_ESIGUAL      reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AS            reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    ID              reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    STRING          reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    CHARACTER       reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_COMA          reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FROM          reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PUNTOCOMA     reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_UNION         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INTERSECT     reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_EXCEPT        reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PARDER        reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AND           reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_OR            reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_GROUP         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LIMIT         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ORDER         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_THEN          reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NATURAL       reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INNER         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LEFT          reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_RIGHT         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FULL          reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_WHERE         reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ALL           reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ANY           reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_SOME          reduce using rule 115 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)


state 534

    (116) dateSource -> R_TIMESTAMP STRING .

    S_PARDER        reduce using rule 116 (dateSource -> R_TIMESTAMP STRING .)


state 535

    (117) dateSource -> T_DATE STRING .

    S_PARDER        reduce using rule 117 (dateSource -> T_DATE STRING .)


state 536

    (118) dateSource -> T_TIME STRING .

    S_PARDER        reduce using rule 118 (dateSource -> T_TIME STRING .)


state 537

    (119) dateSource -> R_INTERVAL STRING .

    S_PARDER        reduce using rule 119 (dateSource -> R_INTERVAL STRING .)


state 538

    (120) dateSource -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 621


state 539

    (19) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .

    S_PUNTOCOMA     reduce using rule 19 (createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .)


state 540

    (26) inheritsOpt -> R_INHERITS . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 622


state 541

    (36) createTableList -> createTableList S_COMA createTable .

    S_PARDER        reduce using rule 36 (createTableList -> createTableList S_COMA createTable .)
    S_COMA          reduce using rule 36 (createTableList -> createTableList S_COMA createTable .)


state 542

    (38) createTable -> ID types createColumns .

    S_PARDER        reduce using rule 38 (createTable -> ID types createColumns .)
    S_COMA          reduce using rule 38 (createTable -> ID types createColumns .)


state 543

    (43) createColumns -> colOptionsList .
    (81) colOptionsList -> colOptionsList . colOptions
    (83) colOptions -> . defaultVal
    (84) colOptions -> . nullOpt
    (85) colOptions -> . constraintOpt
    (86) colOptions -> . primaryOpt
    (87) colOptions -> . referencesOpt
    (88) defaultVal -> . R_DEFAULT literal
    (89) nullOpt -> . R_NOT R_NULL
    (90) nullOpt -> . R_NULL
    (91) constraintOpt -> . constrName R_UNIQUE
    (92) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (93) primaryOpt -> . R_PRIMARY R_KEY
    (94) referencesOpt -> . R_REFERENCES ID
    (49) constrName -> . R_CONSTRAINT ID
    (50) constrName -> .

    S_PARDER        reduce using rule 43 (createColumns -> colOptionsList .)
    S_COMA          reduce using rule 43 (createColumns -> colOptionsList .)
    R_DEFAULT       shift and go to state 550
    R_NOT           shift and go to state 551
    R_NULL          shift and go to state 552
    R_PRIMARY       shift and go to state 554
    R_REFERENCES    shift and go to state 555
    R_CONSTRAINT    shift and go to state 317
    R_UNIQUE        reduce using rule 50 (constrName -> .)
    R_CHECK         reduce using rule 50 (constrName -> .)

    colOptions                     shift and go to state 623
    defaultVal                     shift and go to state 545
    nullOpt                        shift and go to state 546
    constraintOpt                  shift and go to state 547
    primaryOpt                     shift and go to state 548
    referencesOpt                  shift and go to state 549
    constrName                     shift and go to state 553

state 544

    (82) colOptionsList -> colOptions .

    R_DEFAULT       reduce using rule 82 (colOptionsList -> colOptions .)
    R_NOT           reduce using rule 82 (colOptionsList -> colOptions .)
    R_NULL          reduce using rule 82 (colOptionsList -> colOptions .)
    R_PRIMARY       reduce using rule 82 (colOptionsList -> colOptions .)
    R_REFERENCES    reduce using rule 82 (colOptionsList -> colOptions .)
    R_CONSTRAINT    reduce using rule 82 (colOptionsList -> colOptions .)
    R_UNIQUE        reduce using rule 82 (colOptionsList -> colOptions .)
    R_CHECK         reduce using rule 82 (colOptionsList -> colOptions .)
    S_PARDER        reduce using rule 82 (colOptionsList -> colOptions .)
    S_COMA          reduce using rule 82 (colOptionsList -> colOptions .)


state 545

    (83) colOptions -> defaultVal .

    R_DEFAULT       reduce using rule 83 (colOptions -> defaultVal .)
    R_NOT           reduce using rule 83 (colOptions -> defaultVal .)
    R_NULL          reduce using rule 83 (colOptions -> defaultVal .)
    R_PRIMARY       reduce using rule 83 (colOptions -> defaultVal .)
    R_REFERENCES    reduce using rule 83 (colOptions -> defaultVal .)
    R_CONSTRAINT    reduce using rule 83 (colOptions -> defaultVal .)
    R_UNIQUE        reduce using rule 83 (colOptions -> defaultVal .)
    R_CHECK         reduce using rule 83 (colOptions -> defaultVal .)
    S_PARDER        reduce using rule 83 (colOptions -> defaultVal .)
    S_COMA          reduce using rule 83 (colOptions -> defaultVal .)


state 546

    (84) colOptions -> nullOpt .

    R_DEFAULT       reduce using rule 84 (colOptions -> nullOpt .)
    R_NOT           reduce using rule 84 (colOptions -> nullOpt .)
    R_NULL          reduce using rule 84 (colOptions -> nullOpt .)
    R_PRIMARY       reduce using rule 84 (colOptions -> nullOpt .)
    R_REFERENCES    reduce using rule 84 (colOptions -> nullOpt .)
    R_CONSTRAINT    reduce using rule 84 (colOptions -> nullOpt .)
    R_UNIQUE        reduce using rule 84 (colOptions -> nullOpt .)
    R_CHECK         reduce using rule 84 (colOptions -> nullOpt .)
    S_PARDER        reduce using rule 84 (colOptions -> nullOpt .)
    S_COMA          reduce using rule 84 (colOptions -> nullOpt .)


state 547

    (85) colOptions -> constraintOpt .

    R_DEFAULT       reduce using rule 85 (colOptions -> constraintOpt .)
    R_NOT           reduce using rule 85 (colOptions -> constraintOpt .)
    R_NULL          reduce using rule 85 (colOptions -> constraintOpt .)
    R_PRIMARY       reduce using rule 85 (colOptions -> constraintOpt .)
    R_REFERENCES    reduce using rule 85 (colOptions -> constraintOpt .)
    R_CONSTRAINT    reduce using rule 85 (colOptions -> constraintOpt .)
    R_UNIQUE        reduce using rule 85 (colOptions -> constraintOpt .)
    R_CHECK         reduce using rule 85 (colOptions -> constraintOpt .)
    S_PARDER        reduce using rule 85 (colOptions -> constraintOpt .)
    S_COMA          reduce using rule 85 (colOptions -> constraintOpt .)


state 548

    (86) colOptions -> primaryOpt .

    R_DEFAULT       reduce using rule 86 (colOptions -> primaryOpt .)
    R_NOT           reduce using rule 86 (colOptions -> primaryOpt .)
    R_NULL          reduce using rule 86 (colOptions -> primaryOpt .)
    R_PRIMARY       reduce using rule 86 (colOptions -> primaryOpt .)
    R_REFERENCES    reduce using rule 86 (colOptions -> primaryOpt .)
    R_CONSTRAINT    reduce using rule 86 (colOptions -> primaryOpt .)
    R_UNIQUE        reduce using rule 86 (colOptions -> primaryOpt .)
    R_CHECK         reduce using rule 86 (colOptions -> primaryOpt .)
    S_PARDER        reduce using rule 86 (colOptions -> primaryOpt .)
    S_COMA          reduce using rule 86 (colOptions -> primaryOpt .)


state 549

    (87) colOptions -> referencesOpt .

    R_DEFAULT       reduce using rule 87 (colOptions -> referencesOpt .)
    R_NOT           reduce using rule 87 (colOptions -> referencesOpt .)
    R_NULL          reduce using rule 87 (colOptions -> referencesOpt .)
    R_PRIMARY       reduce using rule 87 (colOptions -> referencesOpt .)
    R_REFERENCES    reduce using rule 87 (colOptions -> referencesOpt .)
    R_CONSTRAINT    reduce using rule 87 (colOptions -> referencesOpt .)
    R_UNIQUE        reduce using rule 87 (colOptions -> referencesOpt .)
    R_CHECK         reduce using rule 87 (colOptions -> referencesOpt .)
    S_PARDER        reduce using rule 87 (colOptions -> referencesOpt .)
    S_COMA          reduce using rule 87 (colOptions -> referencesOpt .)


state 550

    (88) defaultVal -> R_DEFAULT . literal
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL

    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87

    literal                        shift and go to state 624

state 551

    (89) nullOpt -> R_NOT . R_NULL

    R_NULL          shift and go to state 625


state 552

    (90) nullOpt -> R_NULL .

    R_DEFAULT       reduce using rule 90 (nullOpt -> R_NULL .)
    R_NOT           reduce using rule 90 (nullOpt -> R_NULL .)
    R_NULL          reduce using rule 90 (nullOpt -> R_NULL .)
    R_PRIMARY       reduce using rule 90 (nullOpt -> R_NULL .)
    R_REFERENCES    reduce using rule 90 (nullOpt -> R_NULL .)
    R_CONSTRAINT    reduce using rule 90 (nullOpt -> R_NULL .)
    R_UNIQUE        reduce using rule 90 (nullOpt -> R_NULL .)
    R_CHECK         reduce using rule 90 (nullOpt -> R_NULL .)
    S_PARDER        reduce using rule 90 (nullOpt -> R_NULL .)
    S_COMA          reduce using rule 90 (nullOpt -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 90 (nullOpt -> R_NULL .)


state 553

    (91) constraintOpt -> constrName . R_UNIQUE
    (92) constraintOpt -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER

    R_UNIQUE        shift and go to state 626
    R_CHECK         shift and go to state 627


state 554

    (93) primaryOpt -> R_PRIMARY . R_KEY

    R_KEY           shift and go to state 628


state 555

    (94) referencesOpt -> R_REFERENCES . ID

    ID              shift and go to state 629


state 556

    (58) types -> T_DOUBLE T_PRECISION .

    R_DEFAULT       reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    R_NOT           reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    R_NULL          reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    R_PRIMARY       reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    R_REFERENCES    reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    R_CONSTRAINT    reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    R_UNIQUE        reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    R_CHECK         reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    S_PARDER        reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    S_COMA          reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)
    S_PUNTOCOMA     reduce using rule 58 (types -> T_DOUBLE T_PRECISION .)


state 557

    (65) types -> T_DECIMAL optParams .

    R_DEFAULT       reduce using rule 65 (types -> T_DECIMAL optParams .)
    R_NOT           reduce using rule 65 (types -> T_DECIMAL optParams .)
    R_NULL          reduce using rule 65 (types -> T_DECIMAL optParams .)
    R_PRIMARY       reduce using rule 65 (types -> T_DECIMAL optParams .)
    R_REFERENCES    reduce using rule 65 (types -> T_DECIMAL optParams .)
    R_CONSTRAINT    reduce using rule 65 (types -> T_DECIMAL optParams .)
    R_UNIQUE        reduce using rule 65 (types -> T_DECIMAL optParams .)
    R_CHECK         reduce using rule 65 (types -> T_DECIMAL optParams .)
    S_PARDER        reduce using rule 65 (types -> T_DECIMAL optParams .)
    S_COMA          reduce using rule 65 (types -> T_DECIMAL optParams .)
    S_PUNTOCOMA     reduce using rule 65 (types -> T_DECIMAL optParams .)


state 558

    (79) optParams -> S_PARIZQ . literalList S_PARDER
    (124) literalList -> . literalList S_COMA literal
    (125) literalList -> . literal
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL

    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87

    literalList                    shift and go to state 630
    literal                        shift and go to state 631

state 559

    (66) types -> T_NUMERIC optParams .

    R_DEFAULT       reduce using rule 66 (types -> T_NUMERIC optParams .)
    R_NOT           reduce using rule 66 (types -> T_NUMERIC optParams .)
    R_NULL          reduce using rule 66 (types -> T_NUMERIC optParams .)
    R_PRIMARY       reduce using rule 66 (types -> T_NUMERIC optParams .)
    R_REFERENCES    reduce using rule 66 (types -> T_NUMERIC optParams .)
    R_CONSTRAINT    reduce using rule 66 (types -> T_NUMERIC optParams .)
    R_UNIQUE        reduce using rule 66 (types -> T_NUMERIC optParams .)
    R_CHECK         reduce using rule 66 (types -> T_NUMERIC optParams .)
    S_PARDER        reduce using rule 66 (types -> T_NUMERIC optParams .)
    S_COMA          reduce using rule 66 (types -> T_NUMERIC optParams .)
    S_PUNTOCOMA     reduce using rule 66 (types -> T_NUMERIC optParams .)


state 560

    (67) types -> T_VARCHAR optParams .

    R_DEFAULT       reduce using rule 67 (types -> T_VARCHAR optParams .)
    R_NOT           reduce using rule 67 (types -> T_VARCHAR optParams .)
    R_NULL          reduce using rule 67 (types -> T_VARCHAR optParams .)
    R_PRIMARY       reduce using rule 67 (types -> T_VARCHAR optParams .)
    R_REFERENCES    reduce using rule 67 (types -> T_VARCHAR optParams .)
    R_CONSTRAINT    reduce using rule 67 (types -> T_VARCHAR optParams .)
    R_UNIQUE        reduce using rule 67 (types -> T_VARCHAR optParams .)
    R_CHECK         reduce using rule 67 (types -> T_VARCHAR optParams .)
    S_PARDER        reduce using rule 67 (types -> T_VARCHAR optParams .)
    S_COMA          reduce using rule 67 (types -> T_VARCHAR optParams .)
    S_PUNTOCOMA     reduce using rule 67 (types -> T_VARCHAR optParams .)


state 561

    (68) types -> T_CHARACTER optParams .

    R_DEFAULT       reduce using rule 68 (types -> T_CHARACTER optParams .)
    R_NOT           reduce using rule 68 (types -> T_CHARACTER optParams .)
    R_NULL          reduce using rule 68 (types -> T_CHARACTER optParams .)
    R_PRIMARY       reduce using rule 68 (types -> T_CHARACTER optParams .)
    R_REFERENCES    reduce using rule 68 (types -> T_CHARACTER optParams .)
    R_CONSTRAINT    reduce using rule 68 (types -> T_CHARACTER optParams .)
    R_UNIQUE        reduce using rule 68 (types -> T_CHARACTER optParams .)
    R_CHECK         reduce using rule 68 (types -> T_CHARACTER optParams .)
    S_PARDER        reduce using rule 68 (types -> T_CHARACTER optParams .)
    S_COMA          reduce using rule 68 (types -> T_CHARACTER optParams .)
    S_PUNTOCOMA     reduce using rule 68 (types -> T_CHARACTER optParams .)


state 562

    (70) types -> T_CHARACTER T_VARYING . optParams
    (79) optParams -> . S_PARIZQ literalList S_PARDER
    (80) optParams -> .

    S_PARIZQ        shift and go to state 558
    R_DEFAULT       reduce using rule 80 (optParams -> .)
    R_NOT           reduce using rule 80 (optParams -> .)
    R_NULL          reduce using rule 80 (optParams -> .)
    R_PRIMARY       reduce using rule 80 (optParams -> .)
    R_REFERENCES    reduce using rule 80 (optParams -> .)
    R_CONSTRAINT    reduce using rule 80 (optParams -> .)
    R_UNIQUE        reduce using rule 80 (optParams -> .)
    R_CHECK         reduce using rule 80 (optParams -> .)
    S_PARDER        reduce using rule 80 (optParams -> .)
    S_COMA          reduce using rule 80 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 80 (optParams -> .)

    optParams                      shift and go to state 632

state 563

    (69) types -> T_CHAR optParams .

    R_DEFAULT       reduce using rule 69 (types -> T_CHAR optParams .)
    R_NOT           reduce using rule 69 (types -> T_CHAR optParams .)
    R_NULL          reduce using rule 69 (types -> T_CHAR optParams .)
    R_PRIMARY       reduce using rule 69 (types -> T_CHAR optParams .)
    R_REFERENCES    reduce using rule 69 (types -> T_CHAR optParams .)
    R_CONSTRAINT    reduce using rule 69 (types -> T_CHAR optParams .)
    R_UNIQUE        reduce using rule 69 (types -> T_CHAR optParams .)
    R_CHECK         reduce using rule 69 (types -> T_CHAR optParams .)
    S_PARDER        reduce using rule 69 (types -> T_CHAR optParams .)
    S_COMA          reduce using rule 69 (types -> T_CHAR optParams .)
    S_PUNTOCOMA     reduce using rule 69 (types -> T_CHAR optParams .)


state 564

    (71) types -> R_INTERVAL intervalFields .

    R_DEFAULT       reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    R_NOT           reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    R_NULL          reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    R_PRIMARY       reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    R_REFERENCES    reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    R_CONSTRAINT    reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    R_UNIQUE        reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    R_CHECK         reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    S_PARDER        reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    S_COMA          reduce using rule 71 (types -> R_INTERVAL intervalFields .)
    S_PUNTOCOMA     reduce using rule 71 (types -> R_INTERVAL intervalFields .)


state 565

    (72) intervalFields -> R_YEAR .

    R_DEFAULT       reduce using rule 72 (intervalFields -> R_YEAR .)
    R_NOT           reduce using rule 72 (intervalFields -> R_YEAR .)
    R_NULL          reduce using rule 72 (intervalFields -> R_YEAR .)
    R_PRIMARY       reduce using rule 72 (intervalFields -> R_YEAR .)
    R_REFERENCES    reduce using rule 72 (intervalFields -> R_YEAR .)
    R_CONSTRAINT    reduce using rule 72 (intervalFields -> R_YEAR .)
    R_UNIQUE        reduce using rule 72 (intervalFields -> R_YEAR .)
    R_CHECK         reduce using rule 72 (intervalFields -> R_YEAR .)
    S_PARDER        reduce using rule 72 (intervalFields -> R_YEAR .)
    S_COMA          reduce using rule 72 (intervalFields -> R_YEAR .)
    S_PUNTOCOMA     reduce using rule 72 (intervalFields -> R_YEAR .)


state 566

    (73) intervalFields -> R_MONTH .

    R_DEFAULT       reduce using rule 73 (intervalFields -> R_MONTH .)
    R_NOT           reduce using rule 73 (intervalFields -> R_MONTH .)
    R_NULL          reduce using rule 73 (intervalFields -> R_MONTH .)
    R_PRIMARY       reduce using rule 73 (intervalFields -> R_MONTH .)
    R_REFERENCES    reduce using rule 73 (intervalFields -> R_MONTH .)
    R_CONSTRAINT    reduce using rule 73 (intervalFields -> R_MONTH .)
    R_UNIQUE        reduce using rule 73 (intervalFields -> R_MONTH .)
    R_CHECK         reduce using rule 73 (intervalFields -> R_MONTH .)
    S_PARDER        reduce using rule 73 (intervalFields -> R_MONTH .)
    S_COMA          reduce using rule 73 (intervalFields -> R_MONTH .)
    S_PUNTOCOMA     reduce using rule 73 (intervalFields -> R_MONTH .)


state 567

    (74) intervalFields -> R_DAY .

    R_DEFAULT       reduce using rule 74 (intervalFields -> R_DAY .)
    R_NOT           reduce using rule 74 (intervalFields -> R_DAY .)
    R_NULL          reduce using rule 74 (intervalFields -> R_DAY .)
    R_PRIMARY       reduce using rule 74 (intervalFields -> R_DAY .)
    R_REFERENCES    reduce using rule 74 (intervalFields -> R_DAY .)
    R_CONSTRAINT    reduce using rule 74 (intervalFields -> R_DAY .)
    R_UNIQUE        reduce using rule 74 (intervalFields -> R_DAY .)
    R_CHECK         reduce using rule 74 (intervalFields -> R_DAY .)
    S_PARDER        reduce using rule 74 (intervalFields -> R_DAY .)
    S_COMA          reduce using rule 74 (intervalFields -> R_DAY .)
    S_PUNTOCOMA     reduce using rule 74 (intervalFields -> R_DAY .)


state 568

    (75) intervalFields -> R_HOUR .

    R_DEFAULT       reduce using rule 75 (intervalFields -> R_HOUR .)
    R_NOT           reduce using rule 75 (intervalFields -> R_HOUR .)
    R_NULL          reduce using rule 75 (intervalFields -> R_HOUR .)
    R_PRIMARY       reduce using rule 75 (intervalFields -> R_HOUR .)
    R_REFERENCES    reduce using rule 75 (intervalFields -> R_HOUR .)
    R_CONSTRAINT    reduce using rule 75 (intervalFields -> R_HOUR .)
    R_UNIQUE        reduce using rule 75 (intervalFields -> R_HOUR .)
    R_CHECK         reduce using rule 75 (intervalFields -> R_HOUR .)
    S_PARDER        reduce using rule 75 (intervalFields -> R_HOUR .)
    S_COMA          reduce using rule 75 (intervalFields -> R_HOUR .)
    S_PUNTOCOMA     reduce using rule 75 (intervalFields -> R_HOUR .)


state 569

    (76) intervalFields -> R_MINUTE .

    R_DEFAULT       reduce using rule 76 (intervalFields -> R_MINUTE .)
    R_NOT           reduce using rule 76 (intervalFields -> R_MINUTE .)
    R_NULL          reduce using rule 76 (intervalFields -> R_MINUTE .)
    R_PRIMARY       reduce using rule 76 (intervalFields -> R_MINUTE .)
    R_REFERENCES    reduce using rule 76 (intervalFields -> R_MINUTE .)
    R_CONSTRAINT    reduce using rule 76 (intervalFields -> R_MINUTE .)
    R_UNIQUE        reduce using rule 76 (intervalFields -> R_MINUTE .)
    R_CHECK         reduce using rule 76 (intervalFields -> R_MINUTE .)
    S_PARDER        reduce using rule 76 (intervalFields -> R_MINUTE .)
    S_COMA          reduce using rule 76 (intervalFields -> R_MINUTE .)
    S_PUNTOCOMA     reduce using rule 76 (intervalFields -> R_MINUTE .)


state 570

    (77) intervalFields -> R_SECOND .

    R_DEFAULT       reduce using rule 77 (intervalFields -> R_SECOND .)
    R_NOT           reduce using rule 77 (intervalFields -> R_SECOND .)
    R_NULL          reduce using rule 77 (intervalFields -> R_SECOND .)
    R_PRIMARY       reduce using rule 77 (intervalFields -> R_SECOND .)
    R_REFERENCES    reduce using rule 77 (intervalFields -> R_SECOND .)
    R_CONSTRAINT    reduce using rule 77 (intervalFields -> R_SECOND .)
    R_UNIQUE        reduce using rule 77 (intervalFields -> R_SECOND .)
    R_CHECK         reduce using rule 77 (intervalFields -> R_SECOND .)
    S_PARDER        reduce using rule 77 (intervalFields -> R_SECOND .)
    S_COMA          reduce using rule 77 (intervalFields -> R_SECOND .)
    S_PUNTOCOMA     reduce using rule 77 (intervalFields -> R_SECOND .)


state 571

    (46) createUnique -> R_UNIQUE S_PARIZQ idList . S_PARDER
    (51) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 633
    S_COMA          shift and go to state 410


state 572

    (33) createMode -> R_MODE INTEGER .

    S_PUNTOCOMA     reduce using rule 33 (createMode -> R_MODE INTEGER .)


state 573

    (34) createMode -> R_MODE S_IGUAL . INTEGER

    INTEGER         shift and go to state 634


state 574

    (30) createOwner -> R_OWNER S_IGUAL ID .

    R_MODE          reduce using rule 30 (createOwner -> R_OWNER S_IGUAL ID .)
    S_PUNTOCOMA     reduce using rule 30 (createOwner -> R_OWNER S_IGUAL ID .)


state 575

    (31) createOwner -> R_OWNER S_IGUAL STRING .

    R_MODE          reduce using rule 31 (createOwner -> R_OWNER S_IGUAL STRING .)
    S_PUNTOCOMA     reduce using rule 31 (createOwner -> R_OWNER S_IGUAL STRING .)


state 576

    (23) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList . S_PARDER
    (133) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 635
    S_COMA          shift and go to state 343


state 577

    (257) alterAlter -> R_COLUMN ID R_SET nullOpt .

    S_COMA          reduce using rule 257 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
    S_PUNTOCOMA     reduce using rule 257 (alterAlter -> R_COLUMN ID R_SET nullOpt .)


state 578

    (258) alterAlter -> R_COLUMN ID R_SET defaultVal .

    S_COMA          reduce using rule 258 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
    S_PUNTOCOMA     reduce using rule 258 (alterAlter -> R_COLUMN ID R_SET defaultVal .)


state 579

    (259) alterAlter -> R_COLUMN ID R_TYPE types .

    S_COMA          reduce using rule 259 (alterAlter -> R_COLUMN ID R_TYPE types .)
    S_PUNTOCOMA     reduce using rule 259 (alterAlter -> R_COLUMN ID R_TYPE types .)


state 580

    (256) alterAdd -> constrName R_UNIQUE S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 636


state 581

    (45) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 637


state 582

    (224) booleanCheck -> idOrLiteral . OL_MENORQUE idOrLiteral
    (225) booleanCheck -> idOrLiteral . OL_MAYORQUE idOrLiteral
    (226) booleanCheck -> idOrLiteral . OL_MAYORIGUALQUE idOrLiteral
    (227) booleanCheck -> idOrLiteral . OL_MENORIGUALQUE idOrLiteral
    (228) booleanCheck -> idOrLiteral . S_IGUAL idOrLiteral
    (229) booleanCheck -> idOrLiteral . OL_DISTINTODE idOrLiteral
    (230) booleanCheck -> idOrLiteral . R_IS R_DISTINCT R_FROM idOrLiteral
    (231) booleanCheck -> idOrLiteral . R_IS R_NOT R_DISTINCT R_FROM idOrLiteral

    OL_MENORQUE     shift and go to state 638
    OL_MAYORQUE     shift and go to state 639
    OL_MAYORIGUALQUE shift and go to state 640
    OL_MENORIGUALQUE shift and go to state 641
    S_IGUAL         shift and go to state 642
    OL_DISTINTODE   shift and go to state 643
    R_IS            shift and go to state 644


state 583

    (232) idOrLiteral -> ID .

    OL_MENORQUE     reduce using rule 232 (idOrLiteral -> ID .)
    OL_MAYORQUE     reduce using rule 232 (idOrLiteral -> ID .)
    OL_MAYORIGUALQUE reduce using rule 232 (idOrLiteral -> ID .)
    OL_MENORIGUALQUE reduce using rule 232 (idOrLiteral -> ID .)
    S_IGUAL         reduce using rule 232 (idOrLiteral -> ID .)
    OL_DISTINTODE   reduce using rule 232 (idOrLiteral -> ID .)
    R_IS            reduce using rule 232 (idOrLiteral -> ID .)
    S_PARDER        reduce using rule 232 (idOrLiteral -> ID .)


state 584

    (233) idOrLiteral -> INTEGER .

    OL_MENORQUE     reduce using rule 233 (idOrLiteral -> INTEGER .)
    OL_MAYORQUE     reduce using rule 233 (idOrLiteral -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 233 (idOrLiteral -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 233 (idOrLiteral -> INTEGER .)
    S_IGUAL         reduce using rule 233 (idOrLiteral -> INTEGER .)
    OL_DISTINTODE   reduce using rule 233 (idOrLiteral -> INTEGER .)
    R_IS            reduce using rule 233 (idOrLiteral -> INTEGER .)
    S_PARDER        reduce using rule 233 (idOrLiteral -> INTEGER .)


state 585

    (234) idOrLiteral -> STRING .

    OL_MENORQUE     reduce using rule 234 (idOrLiteral -> STRING .)
    OL_MAYORQUE     reduce using rule 234 (idOrLiteral -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 234 (idOrLiteral -> STRING .)
    OL_MENORIGUALQUE reduce using rule 234 (idOrLiteral -> STRING .)
    S_IGUAL         reduce using rule 234 (idOrLiteral -> STRING .)
    OL_DISTINTODE   reduce using rule 234 (idOrLiteral -> STRING .)
    R_IS            reduce using rule 234 (idOrLiteral -> STRING .)
    S_PARDER        reduce using rule 234 (idOrLiteral -> STRING .)


state 586

    (235) idOrLiteral -> DECIMAL .

    OL_MENORQUE     reduce using rule 235 (idOrLiteral -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 235 (idOrLiteral -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 235 (idOrLiteral -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 235 (idOrLiteral -> DECIMAL .)
    S_IGUAL         reduce using rule 235 (idOrLiteral -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 235 (idOrLiteral -> DECIMAL .)
    R_IS            reduce using rule 235 (idOrLiteral -> DECIMAL .)
    S_PARDER        reduce using rule 235 (idOrLiteral -> DECIMAL .)


state 587

    (236) idOrLiteral -> CHARACTER .

    OL_MENORQUE     reduce using rule 236 (idOrLiteral -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 236 (idOrLiteral -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 236 (idOrLiteral -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 236 (idOrLiteral -> CHARACTER .)
    S_IGUAL         reduce using rule 236 (idOrLiteral -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 236 (idOrLiteral -> CHARACTER .)
    R_IS            reduce using rule 236 (idOrLiteral -> CHARACTER .)
    S_PARDER        reduce using rule 236 (idOrLiteral -> CHARACTER .)


state 588

    (237) idOrLiteral -> R_TRUE .

    OL_MENORQUE     reduce using rule 237 (idOrLiteral -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 237 (idOrLiteral -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 237 (idOrLiteral -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 237 (idOrLiteral -> R_TRUE .)
    S_IGUAL         reduce using rule 237 (idOrLiteral -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 237 (idOrLiteral -> R_TRUE .)
    R_IS            reduce using rule 237 (idOrLiteral -> R_TRUE .)
    S_PARDER        reduce using rule 237 (idOrLiteral -> R_TRUE .)


state 589

    (238) idOrLiteral -> R_FALSE .

    OL_MENORQUE     reduce using rule 238 (idOrLiteral -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 238 (idOrLiteral -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 238 (idOrLiteral -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 238 (idOrLiteral -> R_FALSE .)
    S_IGUAL         reduce using rule 238 (idOrLiteral -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 238 (idOrLiteral -> R_FALSE .)
    R_IS            reduce using rule 238 (idOrLiteral -> R_FALSE .)
    S_PARDER        reduce using rule 238 (idOrLiteral -> R_FALSE .)


state 590

    (48) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ . idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (51) idList -> . idList S_COMA ID
    (52) idList -> . ID

    ID              shift and go to state 325

    idList                         shift and go to state 645

state 591

    (47) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList . S_PARDER
    (51) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 646
    S_COMA          shift and go to state 410


state 592

    (262) alterRename -> R_COLUMN ID R_TO ID .

    S_COMA          reduce using rule 262 (alterRename -> R_COLUMN ID R_TO ID .)
    S_PUNTOCOMA     reduce using rule 262 (alterRename -> R_COLUMN ID R_TO ID .)


state 593

    (334) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 334 (insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .)


state 594

    (329) limitCl -> R_LIMIT INTEGER offsetLimit .

    S_PUNTOCOMA     reduce using rule 329 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_UNION         reduce using rule 329 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_INTERSECT     reduce using rule 329 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_EXCEPT        reduce using rule 329 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    S_PARDER        reduce using rule 329 (limitCl -> R_LIMIT INTEGER offsetLimit .)


state 595

    (332) offsetLimit -> R_OFFSET . INTEGER

    INTEGER         shift and go to state 647


state 596

    (330) limitCl -> R_LIMIT R_ALL offsetLimit .

    S_PUNTOCOMA     reduce using rule 330 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_UNION         reduce using rule 330 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_INTERSECT     reduce using rule 330 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_EXCEPT        reduce using rule 330 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    S_PARDER        reduce using rule 330 (limitCl -> R_LIMIT R_ALL offsetLimit .)


state 597

    (318) orderByCl -> R_ORDER R_BY orderList .
    (319) orderList -> orderList . S_COMA orderByElem

    R_LIMIT         reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    S_PUNTOCOMA     reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    R_UNION         reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    R_INTERSECT     reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    R_EXCEPT        reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    S_PARDER        reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    S_COMA          shift and go to state 648


state 598

    (320) orderList -> orderByElem .

    S_COMA          reduce using rule 320 (orderList -> orderByElem .)
    R_LIMIT         reduce using rule 320 (orderList -> orderByElem .)
    S_PUNTOCOMA     reduce using rule 320 (orderList -> orderByElem .)
    R_UNION         reduce using rule 320 (orderList -> orderByElem .)
    R_INTERSECT     reduce using rule 320 (orderList -> orderByElem .)
    R_EXCEPT        reduce using rule 320 (orderList -> orderByElem .)
    S_PARDER        reduce using rule 320 (orderList -> orderByElem .)


state 599

    (321) orderByElem -> columnName . orderOpts orderNull
    (323) orderOpts -> . R_ASC
    (324) orderOpts -> . R_DESC
    (325) orderOpts -> .

    R_ASC           shift and go to state 650
    R_DESC          shift and go to state 651
    R_NULL          reduce using rule 325 (orderOpts -> .)
    S_COMA          reduce using rule 325 (orderOpts -> .)
    R_LIMIT         reduce using rule 325 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 325 (orderOpts -> .)
    R_UNION         reduce using rule 325 (orderOpts -> .)
    R_INTERSECT     reduce using rule 325 (orderOpts -> .)
    R_EXCEPT        reduce using rule 325 (orderOpts -> .)
    S_PARDER        reduce using rule 325 (orderOpts -> .)

    orderOpts                      shift and go to state 649

state 600

    (322) orderByElem -> INTEGER . orderOpts orderNull
    (323) orderOpts -> . R_ASC
    (324) orderOpts -> . R_DESC
    (325) orderOpts -> .

    R_ASC           shift and go to state 650
    R_DESC          shift and go to state 651
    R_NULL          reduce using rule 325 (orderOpts -> .)
    S_COMA          reduce using rule 325 (orderOpts -> .)
    R_LIMIT         reduce using rule 325 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 325 (orderOpts -> .)
    R_UNION         reduce using rule 325 (orderOpts -> .)
    R_INTERSECT     reduce using rule 325 (orderOpts -> .)
    R_EXCEPT        reduce using rule 325 (orderOpts -> .)
    S_PARDER        reduce using rule 325 (orderOpts -> .)

    orderOpts                      shift and go to state 652

state 601

    (310) groupByCl -> R_GROUP R_BY groupList havingCl .

    R_LIMIT         reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_ORDER         reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PUNTOCOMA     reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_UNION         reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_INTERSECT     reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_EXCEPT        reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PARDER        reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)


state 602

    (312) groupList -> groupList S_COMA . columnName
    (313) groupList -> groupList S_COMA . INTEGER
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 654
    ID              shift and go to state 424

    columnName                     shift and go to state 653

state 603

    (316) havingCl -> R_HAVING . expBool
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 79
    S_PARIZQ        shift and go to state 178
    R_EXISTS        shift and go to state 97
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    expBool                        shift and go to state 655
    boolean                        shift and go to state 80
    datatype                       shift and go to state 179
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    columnName                     shift and go to state 73
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    stringExp                      shift and go to state 102
    timeStamp                      shift and go to state 93

state 604

    (269) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)


state 605

    (296) joinCl -> joinOpt R_JOIN columnName optAlias R_ON . expBool
    (210) expBool -> . expBool R_AND expBool
    (211) expBool -> . expBool R_OR expBool
    (212) expBool -> . R_NOT expBool
    (213) expBool -> . S_PARIZQ expBool S_PARDER
    (214) expBool -> . expBool optBoolPredicate
    (215) expBool -> . boolean
    (205) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . expComp
    (209) boolean -> . expSubq
    (135) datatype -> . datatype O_SUMA datatype
    (136) datatype -> . datatype O_RESTA datatype
    (137) datatype -> . datatype O_PRODUCTO datatype
    (138) datatype -> . datatype O_DIVISION datatype
    (139) datatype -> . datatype O_EXPONENTE datatype
    (140) datatype -> . datatype O_MODULAR datatype
    (141) datatype -> . datatype OC_CONCATENAR datatype
    (142) datatype -> . R_CASE caseList optElse R_END
    (148) datatype -> . O_RESTA datatype
    (149) datatype -> . O_SUMA datatype
    (150) datatype -> . columnName
    (151) datatype -> . literal
    (152) datatype -> . funcCall
    (153) datatype -> . extract
    (154) datatype -> . datePart
    (155) datatype -> . current
    (156) datatype -> . S_PARIZQ datatype S_PARDER
    (157) expComp -> . datatype OL_MENORQUE datatype
    (158) expComp -> . datatype OL_MAYORQUE datatype
    (159) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (160) expComp -> . datatype OL_MENORIGUALQUE datatype
    (161) expComp -> . datatype S_IGUAL datatype
    (162) expComp -> . datatype OL_DISTINTODE datatype
    (163) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (164) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (166) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (168) expComp -> . datatype R_ISNULL
    (169) expComp -> . datatype R_NOTNULL
    (170) expComp -> . datatype R_IS R_NULL
    (171) expComp -> . datatype R_IS R_TRUE
    (172) expComp -> . datatype R_IS R_FALSE
    (173) expComp -> . datatype R_IS R_UNKNOWN
    (174) expComp -> . datatype R_IS R_NOT R_NULL
    (175) expComp -> . datatype R_IS R_NOT R_TRUE
    (176) expComp -> . datatype R_IS R_NOT R_FALSE
    (177) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (178) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (179) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . stringExp R_LIKE STRING
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL
    (98) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (99) funcCall -> . ID S_PARIZQ S_PARDER
    (100) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (101) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (103) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (104) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (105) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (115) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (121) current -> . R_CURRENT_DATE
    (122) current -> . R_CURRENT_TIME
    (123) current -> . timeStamp
    (200) stringExp -> . STRING
    (201) stringExp -> . columnName
    (107) timeStamp -> . R_TIMESTAMP STRING
    (108) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 79
    S_PARIZQ        shift and go to state 178
    R_EXISTS        shift and go to state 97
    R_CASE          shift and go to state 72
    O_RESTA         shift and go to state 71
    O_SUMA          shift and go to state 70
    ID              shift and go to state 168
    INTEGER         shift and go to state 81
    STRING          shift and go to state 82
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87
    R_NOW           shift and go to state 88
    R_COUNT         shift and go to state 89
    R_SUM           shift and go to state 90
    R_PROM          shift and go to state 91
    R_EXTRACT       shift and go to state 92
    R_DATE_PART     shift and go to state 94
    R_CURRENT_DATE  shift and go to state 95
    R_CURRENT_TIME  shift and go to state 96
    R_TIMESTAMP     shift and go to state 100
    R_INTERVAL      shift and go to state 101

    columnName                     shift and go to state 73
    expBool                        shift and go to state 656
    boolean                        shift and go to state 80
    datatype                       shift and go to state 179
    expComp                        shift and go to state 98
    expSubq                        shift and go to state 99
    literal                        shift and go to state 74
    funcCall                       shift and go to state 75
    extract                        shift and go to state 76
    datePart                       shift and go to state 77
    current                        shift and go to state 78
    stringExp                      shift and go to state 102
    timeStamp                      shift and go to state 93

state 606

    (297) joinCl -> joinOpt R_JOIN columnName optAlias R_USING . S_PARIZQ nameList S_PARDER

    S_PARIZQ        shift and go to state 657


state 607

    (298) joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .

    R_NATURAL       reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INNER         reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LEFT          reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_RIGHT         reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_FULL          reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_WHERE         reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_GROUP         reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_ORDER         reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LIMIT         reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PUNTOCOMA     reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_UNION         reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INTERSECT     reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_EXCEPT        reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PARDER        reduce using rule 298 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)


state 608

    (185) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 658


state 609

    (187) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 659

state 610

    (188) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 660


state 611

    (190) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 661
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 612

    (194) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 662
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 613

    (196) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 663
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 614

    (198) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 664
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 615

    (189) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 189 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 616

    (193) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 193 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 617

    (195) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 195 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)


state 618

    (197) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 197 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)


state 619

    (184) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 665

state 620

    (186) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 666


state 621

    (120) dateSource -> R_NOW S_PARIZQ S_PARDER .

    S_PARDER        reduce using rule 120 (dateSource -> R_NOW S_PARIZQ S_PARDER .)


state 622

    (26) inheritsOpt -> R_INHERITS S_PARIZQ . ID S_PARDER

    ID              shift and go to state 667


state 623

    (81) colOptionsList -> colOptionsList colOptions .

    R_DEFAULT       reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    R_NOT           reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    R_NULL          reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    R_PRIMARY       reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    R_REFERENCES    reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    R_CONSTRAINT    reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    R_UNIQUE        reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    R_CHECK         reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    S_PARDER        reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)
    S_COMA          reduce using rule 81 (colOptionsList -> colOptionsList colOptions .)


state 624

    (88) defaultVal -> R_DEFAULT literal .

    R_DEFAULT       reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    R_NOT           reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    R_NULL          reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    R_PRIMARY       reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    R_REFERENCES    reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    R_CONSTRAINT    reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    R_UNIQUE        reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    R_CHECK         reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    S_PARDER        reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    S_COMA          reduce using rule 88 (defaultVal -> R_DEFAULT literal .)
    S_PUNTOCOMA     reduce using rule 88 (defaultVal -> R_DEFAULT literal .)


state 625

    (89) nullOpt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    R_NOT           reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    R_NULL          reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    R_PRIMARY       reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    R_REFERENCES    reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    R_CONSTRAINT    reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    R_UNIQUE        reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    R_CHECK         reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    S_PARDER        reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    S_COMA          reduce using rule 89 (nullOpt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 89 (nullOpt -> R_NOT R_NULL .)


state 626

    (91) constraintOpt -> constrName R_UNIQUE .

    R_DEFAULT       reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    R_NOT           reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    R_NULL          reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    R_PRIMARY       reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    R_REFERENCES    reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    R_CONSTRAINT    reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    R_UNIQUE        reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    R_CHECK         reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    S_PARDER        reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)
    S_COMA          reduce using rule 91 (constraintOpt -> constrName R_UNIQUE .)


state 627

    (92) constraintOpt -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 668


state 628

    (93) primaryOpt -> R_PRIMARY R_KEY .

    R_DEFAULT       reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NOT           reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NULL          reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    R_PRIMARY       reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    R_REFERENCES    reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CONSTRAINT    reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    R_UNIQUE        reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CHECK         reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    S_PARDER        reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)
    S_COMA          reduce using rule 93 (primaryOpt -> R_PRIMARY R_KEY .)


state 629

    (94) referencesOpt -> R_REFERENCES ID .

    R_DEFAULT       reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    R_NOT           reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    R_NULL          reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    R_PRIMARY       reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    R_REFERENCES    reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    R_CONSTRAINT    reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    R_UNIQUE        reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    R_CHECK         reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    S_PARDER        reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)
    S_COMA          reduce using rule 94 (referencesOpt -> R_REFERENCES ID .)


state 630

    (79) optParams -> S_PARIZQ literalList . S_PARDER
    (124) literalList -> literalList . S_COMA literal

    S_PARDER        shift and go to state 669
    S_COMA          shift and go to state 670


state 631

    (125) literalList -> literal .

    S_PARDER        reduce using rule 125 (literalList -> literal .)
    S_COMA          reduce using rule 125 (literalList -> literal .)


state 632

    (70) types -> T_CHARACTER T_VARYING optParams .

    R_DEFAULT       reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    R_NOT           reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    R_NULL          reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    R_PRIMARY       reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    R_REFERENCES    reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    R_CONSTRAINT    reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    R_UNIQUE        reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    R_CHECK         reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    S_PARDER        reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    S_COMA          reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)
    S_PUNTOCOMA     reduce using rule 70 (types -> T_CHARACTER T_VARYING optParams .)


state 633

    (46) createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .

    S_PARDER        reduce using rule 46 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
    S_COMA          reduce using rule 46 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)


state 634

    (34) createMode -> R_MODE S_IGUAL INTEGER .

    S_PUNTOCOMA     reduce using rule 34 (createMode -> R_MODE S_IGUAL INTEGER .)


state 635

    (23) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 23 (createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .)


state 636

    (256) alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .

    S_COMA          reduce using rule 256 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
    S_PUNTOCOMA     reduce using rule 256 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)


state 637

    (45) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    S_COMA          reduce using rule 45 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PUNTOCOMA     reduce using rule 45 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 45 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 638

    (224) booleanCheck -> idOrLiteral OL_MENORQUE . idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    idOrLiteral                    shift and go to state 671

state 639

    (225) booleanCheck -> idOrLiteral OL_MAYORQUE . idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    idOrLiteral                    shift and go to state 672

state 640

    (226) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE . idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    idOrLiteral                    shift and go to state 673

state 641

    (227) booleanCheck -> idOrLiteral OL_MENORIGUALQUE . idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    idOrLiteral                    shift and go to state 674

state 642

    (228) booleanCheck -> idOrLiteral S_IGUAL . idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    idOrLiteral                    shift and go to state 675

state 643

    (229) booleanCheck -> idOrLiteral OL_DISTINTODE . idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    idOrLiteral                    shift and go to state 676

state 644

    (230) booleanCheck -> idOrLiteral R_IS . R_DISTINCT R_FROM idOrLiteral
    (231) booleanCheck -> idOrLiteral R_IS . R_NOT R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 677
    R_NOT           shift and go to state 678


state 645

    (48) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList . S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (51) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 679
    S_COMA          shift and go to state 410


state 646

    (47) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 47 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 47 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 47 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)


state 647

    (332) offsetLimit -> R_OFFSET INTEGER .

    S_PUNTOCOMA     reduce using rule 332 (offsetLimit -> R_OFFSET INTEGER .)
    R_UNION         reduce using rule 332 (offsetLimit -> R_OFFSET INTEGER .)
    R_INTERSECT     reduce using rule 332 (offsetLimit -> R_OFFSET INTEGER .)
    R_EXCEPT        reduce using rule 332 (offsetLimit -> R_OFFSET INTEGER .)
    S_PARDER        reduce using rule 332 (offsetLimit -> R_OFFSET INTEGER .)


state 648

    (319) orderList -> orderList S_COMA . orderByElem
    (321) orderByElem -> . columnName orderOpts orderNull
    (322) orderByElem -> . INTEGER orderOpts orderNull
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 600
    ID              shift and go to state 424

    orderByElem                    shift and go to state 680
    columnName                     shift and go to state 599

state 649

    (321) orderByElem -> columnName orderOpts . orderNull
    (326) orderNull -> . R_NULL R_FIRST
    (327) orderNull -> . R_NULL R_LAST
    (328) orderNull -> .

    R_NULL          shift and go to state 682
    S_COMA          reduce using rule 328 (orderNull -> .)
    R_LIMIT         reduce using rule 328 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 328 (orderNull -> .)
    R_UNION         reduce using rule 328 (orderNull -> .)
    R_INTERSECT     reduce using rule 328 (orderNull -> .)
    R_EXCEPT        reduce using rule 328 (orderNull -> .)
    S_PARDER        reduce using rule 328 (orderNull -> .)

    orderNull                      shift and go to state 681

state 650

    (323) orderOpts -> R_ASC .

    R_NULL          reduce using rule 323 (orderOpts -> R_ASC .)
    S_COMA          reduce using rule 323 (orderOpts -> R_ASC .)
    R_LIMIT         reduce using rule 323 (orderOpts -> R_ASC .)
    S_PUNTOCOMA     reduce using rule 323 (orderOpts -> R_ASC .)
    R_UNION         reduce using rule 323 (orderOpts -> R_ASC .)
    R_INTERSECT     reduce using rule 323 (orderOpts -> R_ASC .)
    R_EXCEPT        reduce using rule 323 (orderOpts -> R_ASC .)
    S_PARDER        reduce using rule 323 (orderOpts -> R_ASC .)


state 651

    (324) orderOpts -> R_DESC .

    R_NULL          reduce using rule 324 (orderOpts -> R_DESC .)
    S_COMA          reduce using rule 324 (orderOpts -> R_DESC .)
    R_LIMIT         reduce using rule 324 (orderOpts -> R_DESC .)
    S_PUNTOCOMA     reduce using rule 324 (orderOpts -> R_DESC .)
    R_UNION         reduce using rule 324 (orderOpts -> R_DESC .)
    R_INTERSECT     reduce using rule 324 (orderOpts -> R_DESC .)
    R_EXCEPT        reduce using rule 324 (orderOpts -> R_DESC .)
    S_PARDER        reduce using rule 324 (orderOpts -> R_DESC .)


state 652

    (322) orderByElem -> INTEGER orderOpts . orderNull
    (326) orderNull -> . R_NULL R_FIRST
    (327) orderNull -> . R_NULL R_LAST
    (328) orderNull -> .

    R_NULL          shift and go to state 682
    S_COMA          reduce using rule 328 (orderNull -> .)
    R_LIMIT         reduce using rule 328 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 328 (orderNull -> .)
    R_UNION         reduce using rule 328 (orderNull -> .)
    R_INTERSECT     reduce using rule 328 (orderNull -> .)
    R_EXCEPT        reduce using rule 328 (orderNull -> .)
    S_PARDER        reduce using rule 328 (orderNull -> .)

    orderNull                      shift and go to state 683

state 653

    (312) groupList -> groupList S_COMA columnName .

    S_COMA          reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_HAVING        reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_LIMIT         reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_ORDER         reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    S_PUNTOCOMA     reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_UNION         reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_INTERSECT     reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_EXCEPT        reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    S_PARDER        reduce using rule 312 (groupList -> groupList S_COMA columnName .)


state 654

    (313) groupList -> groupList S_COMA INTEGER .

    S_COMA          reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_HAVING        reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_LIMIT         reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_ORDER         reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    S_PUNTOCOMA     reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_UNION         reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_INTERSECT     reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_EXCEPT        reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    S_PARDER        reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)


state 655

    (316) havingCl -> R_HAVING expBool .
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_LIMIT         reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_ORDER         reduce using rule 316 (havingCl -> R_HAVING expBool .)
    S_PUNTOCOMA     reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_UNION         reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_INTERSECT     reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_EXCEPT        reduce using rule 316 (havingCl -> R_HAVING expBool .)
    S_PARDER        reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_AND           shift and go to state 160
    R_OR            shift and go to state 161
    R_IS            shift and go to state 163

    optBoolPredicate               shift and go to state 162

state 656

    (296) joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .
    (210) expBool -> expBool . R_AND expBool
    (211) expBool -> expBool . R_OR expBool
    (214) expBool -> expBool . optBoolPredicate
    (216) optBoolPredicate -> . R_IS R_TRUE
    (217) optBoolPredicate -> . R_IS R_FALSE
    (218) optBoolPredicate -> . R_IS R_UNKNOWN
    (219) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (220) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (221) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_NATURAL       reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INNER         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LEFT          reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_RIGHT         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_FULL          reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_WHERE         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_GROUP         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_ORDER         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LIMIT         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PUNTOCOMA     reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_UNION         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INTERSECT     reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_EXCEPT        reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PARDER        reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_AND           shift and go to state 160
    R_OR            shift and go to state 161
    R_IS            shift and go to state 163

    optBoolPredicate               shift and go to state 162

state 657

    (297) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ . nameList S_PARDER
    (299) nameList -> . nameList S_COMA columnName
    (300) nameList -> . columnName
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 424

    columnName                     shift and go to state 684
    nameList                       shift and go to state 685

state 658

    (185) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 686

state 659

    (187) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 687
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 660

    (188) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 688

state 661

    (190) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 190 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 662

    (194) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 194 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 663

    (196) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 196 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)


state 664

    (198) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 198 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)


state 665

    (184) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 689
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 666

    (186) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (267) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (268) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 690

state 667

    (26) inheritsOpt -> R_INHERITS S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 691


state 668

    (92) constraintOpt -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (224) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (225) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (226) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (227) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (228) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (229) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (230) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (231) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    booleanCheck                   shift and go to state 692
    idOrLiteral                    shift and go to state 582

state 669

    (79) optParams -> S_PARIZQ literalList S_PARDER .

    R_DEFAULT       reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NOT           reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NULL          reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_PRIMARY       reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_REFERENCES    reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CONSTRAINT    reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_UNIQUE        reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CHECK         reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PARDER        reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_COMA          reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 79 (optParams -> S_PARIZQ literalList S_PARDER .)


state 670

    (124) literalList -> literalList S_COMA . literal
    (126) literal -> . INTEGER
    (127) literal -> . STRING
    (128) literal -> . DECIMAL
    (129) literal -> . CHARACTER
    (130) literal -> . R_TRUE
    (131) literal -> . R_FALSE
    (132) literal -> . R_NULL

    INTEGER         shift and go to state 81
    STRING          shift and go to state 172
    DECIMAL         shift and go to state 83
    CHARACTER       shift and go to state 84
    R_TRUE          shift and go to state 85
    R_FALSE         shift and go to state 86
    R_NULL          shift and go to state 87

    literal                        shift and go to state 693

state 671

    (224) booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .

    S_PARDER        reduce using rule 224 (booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .)


state 672

    (225) booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .

    S_PARDER        reduce using rule 225 (booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .)


state 673

    (226) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 226 (booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .)


state 674

    (227) booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 227 (booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .)


state 675

    (228) booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .

    S_PARDER        reduce using rule 228 (booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .)


state 676

    (229) booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .

    S_PARDER        reduce using rule 229 (booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .)


state 677

    (230) booleanCheck -> idOrLiteral R_IS R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 694


state 678

    (231) booleanCheck -> idOrLiteral R_IS R_NOT . R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 695


state 679

    (48) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER . R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_REFERENCES    shift and go to state 696


state 680

    (319) orderList -> orderList S_COMA orderByElem .

    S_COMA          reduce using rule 319 (orderList -> orderList S_COMA orderByElem .)
    R_LIMIT         reduce using rule 319 (orderList -> orderList S_COMA orderByElem .)
    S_PUNTOCOMA     reduce using rule 319 (orderList -> orderList S_COMA orderByElem .)
    R_UNION         reduce using rule 319 (orderList -> orderList S_COMA orderByElem .)
    R_INTERSECT     reduce using rule 319 (orderList -> orderList S_COMA orderByElem .)
    R_EXCEPT        reduce using rule 319 (orderList -> orderList S_COMA orderByElem .)
    S_PARDER        reduce using rule 319 (orderList -> orderList S_COMA orderByElem .)


state 681

    (321) orderByElem -> columnName orderOpts orderNull .

    S_COMA          reduce using rule 321 (orderByElem -> columnName orderOpts orderNull .)
    R_LIMIT         reduce using rule 321 (orderByElem -> columnName orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 321 (orderByElem -> columnName orderOpts orderNull .)
    R_UNION         reduce using rule 321 (orderByElem -> columnName orderOpts orderNull .)
    R_INTERSECT     reduce using rule 321 (orderByElem -> columnName orderOpts orderNull .)
    R_EXCEPT        reduce using rule 321 (orderByElem -> columnName orderOpts orderNull .)
    S_PARDER        reduce using rule 321 (orderByElem -> columnName orderOpts orderNull .)


state 682

    (326) orderNull -> R_NULL . R_FIRST
    (327) orderNull -> R_NULL . R_LAST

    R_FIRST         shift and go to state 697
    R_LAST          shift and go to state 698


state 683

    (322) orderByElem -> INTEGER orderOpts orderNull .

    S_COMA          reduce using rule 322 (orderByElem -> INTEGER orderOpts orderNull .)
    R_LIMIT         reduce using rule 322 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 322 (orderByElem -> INTEGER orderOpts orderNull .)
    R_UNION         reduce using rule 322 (orderByElem -> INTEGER orderOpts orderNull .)
    R_INTERSECT     reduce using rule 322 (orderByElem -> INTEGER orderOpts orderNull .)
    R_EXCEPT        reduce using rule 322 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PARDER        reduce using rule 322 (orderByElem -> INTEGER orderOpts orderNull .)


state 684

    (300) nameList -> columnName .

    S_PARDER        reduce using rule 300 (nameList -> columnName .)
    S_COMA          reduce using rule 300 (nameList -> columnName .)


state 685

    (297) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList . S_PARDER
    (299) nameList -> nameList . S_COMA columnName

    S_PARDER        shift and go to state 699
    S_COMA          shift and go to state 700


state 686

    (185) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 701
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 687

    (187) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 187 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 688

    (188) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 702
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 689

    (184) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 184 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 690

    (186) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 703
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 691

    (26) inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .

    S_PUNTOCOMA     reduce using rule 26 (inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .)


state 692

    (92) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 704


state 693

    (124) literalList -> literalList S_COMA literal .

    S_PARDER        reduce using rule 124 (literalList -> literalList S_COMA literal .)
    S_COMA          reduce using rule 124 (literalList -> literalList S_COMA literal .)


state 694

    (230) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM . idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    idOrLiteral                    shift and go to state 705

state 695

    (231) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 706


state 696

    (48) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES . ID S_PARIZQ idList S_PARDER

    ID              shift and go to state 707


state 697

    (326) orderNull -> R_NULL R_FIRST .

    S_COMA          reduce using rule 326 (orderNull -> R_NULL R_FIRST .)
    R_LIMIT         reduce using rule 326 (orderNull -> R_NULL R_FIRST .)
    S_PUNTOCOMA     reduce using rule 326 (orderNull -> R_NULL R_FIRST .)
    R_UNION         reduce using rule 326 (orderNull -> R_NULL R_FIRST .)
    R_INTERSECT     reduce using rule 326 (orderNull -> R_NULL R_FIRST .)
    R_EXCEPT        reduce using rule 326 (orderNull -> R_NULL R_FIRST .)
    S_PARDER        reduce using rule 326 (orderNull -> R_NULL R_FIRST .)


state 698

    (327) orderNull -> R_NULL R_LAST .

    S_COMA          reduce using rule 327 (orderNull -> R_NULL R_LAST .)
    R_LIMIT         reduce using rule 327 (orderNull -> R_NULL R_LAST .)
    S_PUNTOCOMA     reduce using rule 327 (orderNull -> R_NULL R_LAST .)
    R_UNION         reduce using rule 327 (orderNull -> R_NULL R_LAST .)
    R_INTERSECT     reduce using rule 327 (orderNull -> R_NULL R_LAST .)
    R_EXCEPT        reduce using rule 327 (orderNull -> R_NULL R_LAST .)
    S_PARDER        reduce using rule 327 (orderNull -> R_NULL R_LAST .)


state 699

    (297) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .

    R_NATURAL       reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INNER         reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LEFT          reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_RIGHT         reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_FULL          reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_WHERE         reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_GROUP         reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_ORDER         reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LIMIT         reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_UNION         reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INTERSECT     reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_EXCEPT        reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PARDER        reduce using rule 297 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)


state 700

    (299) nameList -> nameList S_COMA . columnName
    (222) columnName -> . ID
    (223) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 424

    columnName                     shift and go to state 708

state 701

    (185) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 185 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 702

    (188) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 188 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 703

    (186) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 186 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 704

    (92) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    R_DEFAULT       reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NOT           reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NULL          reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_PRIMARY       reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_REFERENCES    reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CONSTRAINT    reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_UNIQUE        reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CHECK         reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_COMA          reduce using rule 92 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 705

    (230) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 230 (booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .)


state 706

    (231) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM . idOrLiteral
    (232) idOrLiteral -> . ID
    (233) idOrLiteral -> . INTEGER
    (234) idOrLiteral -> . STRING
    (235) idOrLiteral -> . DECIMAL
    (236) idOrLiteral -> . CHARACTER
    (237) idOrLiteral -> . R_TRUE
    (238) idOrLiteral -> . R_FALSE

    ID              shift and go to state 583
    INTEGER         shift and go to state 584
    STRING          shift and go to state 585
    DECIMAL         shift and go to state 586
    CHARACTER       shift and go to state 587
    R_TRUE          shift and go to state 588
    R_FALSE         shift and go to state 589

    idOrLiteral                    shift and go to state 709

state 707

    (48) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 710


state 708

    (299) nameList -> nameList S_COMA columnName .

    S_PARDER        reduce using rule 299 (nameList -> nameList S_COMA columnName .)
    S_COMA          reduce using rule 299 (nameList -> nameList S_COMA columnName .)


state 709

    (231) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 231 (booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .)


state 710

    (48) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ . idList S_PARDER
    (51) idList -> . idList S_COMA ID
    (52) idList -> . ID

    ID              shift and go to state 325

    idList                         shift and go to state 711

state 711

    (48) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList . S_PARDER
    (51) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 712
    S_COMA          shift and go to state 410


state 712

    (48) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 48 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 48 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 48 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)

