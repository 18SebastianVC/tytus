
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftR_UNIONR_INTERSECTR_EXCEPTrightR_NOTleftR_ANDR_ORleftR_BETWEENR_ISleftS_IGUALOL_DISTINTODEOL_MAYORQUEOL_MENORQUEOL_MAYORIGUALQUEOL_MENORIGUALQUEleftOC_CONCATENARleftO_SUMAO_RESTAleftO_PRODUCTOO_DIVISIONO_MODULARrightUO_SUMAUO_RESTAleftO_EXPONENTECHARACTER COMMENT DECIMAL ID INTEGER OC_AND OC_CONCATENAR OC_NOT OC_OR OC_SHIFTL OC_SHIFTR OC_XOR OL_DISTINTODE OL_ESIGUAL OL_MAYORIGUALQUE OL_MAYORQUE OL_MENORIGUALQUE OL_MENORQUE O_DIVISION O_EXPONENTE O_MODULAR O_PRODUCTO O_RESTA O_SUMA R_ADD R_ALL R_ALTER R_AND R_ANY R_AS R_ASC R_BETWEEN R_BY R_CASE R_CHECK R_COLUMN R_CONSTRAINT R_COUNT R_CREATE R_CURRENT_DATE R_CURRENT_TIME R_CURRENT_USER R_DATABASE R_DATABASES R_DATE_PART R_DAY R_DEFAULT R_DELETE R_DESC R_DISTINCT R_DROP R_ELSE R_END R_ENUM R_EXCEPT R_EXISTS R_EXTRACT R_FALSE R_FIRST R_FOREIGN R_FROM R_FULL R_GROUP R_HAVING R_HOUR R_IF R_IN R_INHERITS R_INNER R_INSERT R_INTERSECT R_INTERVAL R_INTO R_IS R_ISNULL R_JOIN R_KEY R_LAST R_LEFT R_LIKE R_LIMIT R_MINUTE R_MODE R_MONTH R_NATURAL R_NOT R_NOTNULL R_NOW R_NULL R_OFFSET R_ON R_OR R_ORDER R_OUTER R_OWNER R_PRIMARY R_PROM R_REFERENCES R_RENAME R_REPLACE R_RIGHT R_SECOND R_SELECT R_SESSION_USER R_SET R_SHOW R_SOME R_SUM R_SYMMETRIC R_TABLE R_THEN R_TIMESTAMP R_TO R_TRUE R_TRUNCATE R_TYPE R_UNION R_UNIQUE R_UNKNOWN R_UPDATE R_USE R_USING R_VALUES R_WHEN R_WHERE R_YEAR STRING S_COMA S_IGUAL S_PARDER S_PARIZQ S_PUNTO S_PUNTOCOMA T_BIGINT T_BOOLEAN T_CHAR T_CHARACTER T_DATE T_DECIMAL T_DOUBLE T_INTEGER T_MONEY T_NUMERIC T_PRECISION T_REAL T_SMALLINT T_TEXT T_TIME T_VARCHAR T_VARYINGinit : stmtListstmtList : stmtList stmtstmtList : stmt\n    stmt : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n    \n    idOrString : ID\n    | STRING\n    | CHARACTER\n    createStmt : R_CREATE createBody\n    createBody : createOpts\n    createOpts : R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt \n    createOpts : orReplace R_DATABASE ifNotExists idOrString createOwner createMode\n    \n    orReplace : R_OR R_REPLACE\n    \n    orReplace :\n    \n    createOpts : R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER\n    \n    ifNotExists : R_IF R_NOT R_EXISTS\n    \n    ifNotExists :\n    \n    inheritsOpt : R_INHERITS S_PARIZQ ID S_PARDER\n    \n    inheritsOpt :\n    \n    createOwner : R_OWNER ID\n    | R_OWNER STRING\n    \n    createOwner :  R_OWNER S_IGUAL ID\n    | R_OWNER S_IGUAL STRING\n    \n    createOwner :\n    \n    createMode : R_MODE INTEGER\n    \n    createMode : R_MODE S_IGUAL INTEGER\n    \n    createMode :\n    createTableList : createTableList S_COMA createTablecreateTableList :  createTable\n    createTable :  ID types createColumns\n    \n    createTable : createConstraint\n    | createUnique\n    | createPrimary\n    | createForeign\n    \n    createColumns : colOptionsList\n    \n    createColumns :\n    createConstraint : constrName R_CHECK S_PARIZQ booleanCheck S_PARDERcreateUnique : R_UNIQUE S_PARIZQ idList S_PARDERcreatePrimary : R_PRIMARY R_KEY S_PARIZQ idList S_PARDER\n    createForeign : constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER\n    \n    constrName : R_CONSTRAINT ID\n    \n    constrName :\n    idList : idList S_COMA IDidList : ID\n    types :  ID\n    \n    types : T_SMALLINT\n    | T_INTEGER\n    | T_BIGINT\n    | T_REAL\n    | T_DOUBLE T_PRECISION\n    | T_MONEY\n    | T_TEXT\n    | T_BOOLEAN\n    | R_TIMESTAMP\n    | T_DATE\n    | T_TIME\n    \n    types : T_DECIMAL optParams\n    | T_NUMERIC optParams\n    | T_VARCHAR optParams\n    | T_CHARACTER optParams\n    | T_CHAR optParams\n    \n    types : T_CHARACTER T_VARYING optParams\n    \n    types : R_INTERVAL intervalFields\n    \n    intervalFields :  R_YEAR\n    | R_MONTH\n    | R_DAY\n    | R_HOUR\n    | R_MINUTE\n    | R_SECOND\n    \n    intervalFields :\n    optParams : S_PARIZQ literalList S_PARDERoptParams : colOptionsList : colOptionsList colOptionscolOptionsList : colOptions\n    colOptions : defaultVal\n    | nullOpt\n    | constraintOpt\n    | primaryOpt\n    | referencesOpt\n    defaultVal : R_DEFAULT literal\n    nullOpt : R_NOT R_NULL\n    \n    nullOpt : R_NULL\n    \n    constraintOpt : constrName R_UNIQUE\n    \n    constraintOpt : constrName R_CHECK S_PARIZQ booleanCheck S_PARDER\n    primaryOpt : R_PRIMARY R_KEYreferencesOpt : R_REFERENCES ID\n    expresion : datatype\n            | expBool\n    \n    expresion : S_PARIZQ selectStmt S_PARDER\n    \n    funcCall : ID S_PARIZQ paramsList S_PARDER\n    \n    funcCall : ID S_PARIZQ S_PARDER\n            | R_NOW S_PARIZQ S_PARDER\n    \n    funcCall : R_COUNT S_PARIZQ datatype S_PARDER\n            | R_COUNT S_PARIZQ O_PRODUCTO S_PARDER\n            | R_SUM S_PARIZQ datatype S_PARDER\n            | R_PROM S_PARIZQ datatype S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER\n    \n    timeStamp : R_TIMESTAMP STRING\n          | R_INTERVAL STRING\n    \n    optsExtract : R_YEAR\n                  | R_MONTH\n                  | R_DAY\n                  | R_HOUR\n                  | R_MINUTE\n                  | R_SECOND\n    \n    datePart : R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER\n    \n    dateSource : R_TIMESTAMP STRING\n          | T_DATE STRING\n          | T_TIME STRING\n          | R_INTERVAL STRING\n          | R_NOW S_PARIZQ S_PARDER\n    \n    current : R_CURRENT_DATE\n          | R_CURRENT_TIME\n    \n    current : timeStamp\n    literalList : literalList S_COMA literalliteralList : literal\n    literal :  INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    | R_NULL\n    paramsList : paramsList S_COMA datatypeparamsList : datatype\n    datatype : datatype O_SUMA datatype\n    | datatype O_RESTA datatype\n    | datatype O_PRODUCTO datatype\n    | datatype O_DIVISION datatype\n    | datatype O_EXPONENTE datatype\n    | datatype O_MODULAR datatype\n    \n    datatype : datatype OC_CONCATENAR datatype\n    \n    datatype : R_CASE caseList optElse R_END\n    \n    caseList : caseList caseWhen\n            | caseWhen\n    caseWhen : R_WHEN expBool R_THEN literaloptElse : R_ELSE literal\n    |\n    \n    datatype : O_RESTA datatype %prec UO_RESTA\n    | O_SUMA datatype %prec UO_SUMA\n    \n    datatype : columnName\n    | literal\n    | funcCall\n    | extract\n    | datePart\n    | current\n    \n    datatype : S_PARIZQ datatype S_PARDER\n    \n    expComp : datatype OL_MENORQUE datatype\n    | datatype OL_MAYORQUE datatype\n    | datatype OL_MAYORIGUALQUE datatype\n    | datatype OL_MENORIGUALQUE datatype\n    | datatype S_IGUAL datatype\n    | datatype OL_DISTINTODE datatype\n    \n    expComp : datatype R_IS R_DISTINCT R_FROM datatype\n    \n    expComp : datatype R_IS R_NOT R_DISTINCT R_FROM datatype\n    \n    expComp :  datatype R_BETWEEN datatype R_AND datatype\n    \n    expComp : datatype R_NOT R_BETWEEN datatype R_AND datatype\n    | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype\n    \n    expComp : datatype R_ISNULL\n    | datatype R_NOTNULL\n    \n    expComp : datatype R_IS R_NULL\n    | datatype R_IS R_TRUE\n    | datatype R_IS R_FALSE\n    | datatype R_IS R_UNKNOWN\n    \n    expComp : datatype R_IS R_NOT R_NULL\n    | datatype R_IS R_NOT R_TRUE\n    | datatype R_IS R_NOT R_FALSE\n    | datatype R_IS R_NOT R_UNKNOWN\n    \n    expSubq : datatype OL_MENORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_ESIGUAL  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | stringExp R_LIKE STRING\n    \n    stringExp : STRING\n          | columnName\n    \n    subqValues : R_ALL\n                  | R_ANY\n                  | R_SOME\n    \n    boolean : R_EXISTS S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : expComp\n            | expSubq\n    \n    expBool : expBool R_AND expBool\n            | expBool R_OR expBool\n    \n    expBool : R_NOT expBool\n    \n    expBool : S_PARIZQ expBool S_PARDER\n    \n    expBool : expBool optBoolPredicate\n    \n    expBool : boolean\n    \n    optBoolPredicate : R_IS R_TRUE\n    | R_IS R_FALSE\n    | R_IS R_UNKNOWN\n    \n    optBoolPredicate : R_IS R_NOT R_TRUE\n    | R_IS R_NOT R_FALSE\n    | R_IS R_NOT R_UNKNOWN\n    \n    columnName : ID\n    \n    columnName : ID S_PUNTO ID\n    \n    booleanCheck : idOrLiteral OL_MENORQUE idOrLiteral\n    | idOrLiteral OL_MAYORQUE idOrLiteral\n    | idOrLiteral OL_MAYORIGUALQUE idOrLiteral\n    | idOrLiteral OL_MENORIGUALQUE idOrLiteral\n    | idOrLiteral S_IGUAL idOrLiteral\n    | idOrLiteral OL_DISTINTODE idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral\n    \n    idOrLiteral : ID\n    | INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    alterStmt : R_ALTER R_DATABASE idOrString alterDb\n    | R_ALTER R_TABLE idOrString alterTableList\n    alterDb : R_RENAME R_TO idOrString\n    | R_OWNER R_TO ownerOPts\n    \n    ownerOPts : idOrString\n    | R_CURRENT_USER\n    | R_SESSION_USER\n    \n    alterTableList : alterTableList S_COMA alterTable\n    \n    alterTableList : alterTable\n    \n    alterTable : R_ADD alterAdd\n    | R_ALTER alterAlter\n    | R_DROP alterDrop\n    | R_RENAME alterRename\n    \n    alterAdd : R_COLUMN ID types\n    \n    alterAdd : createConstraint\n    | createPrimary\n    | createForeign\n    \n    alterAdd : constrName R_UNIQUE S_PARIZQ ID S_PARDER\n    \n    alterAlter : R_COLUMN ID R_SET nullOpt\n    | R_COLUMN ID R_SET defaultVal\n    | R_COLUMN ID R_TYPE types\n    \n    alterDrop : R_CONSTRAINT ID\n    | R_COLUMN ID\n    \n    alterRename : R_COLUMN ID R_TO ID\n    \n    dropStmt : R_DROP R_TABLE ifExists idOrString\n    | R_DROP R_DATABASE ifExists idOrString\n    ifExists : R_IF R_EXISTS\n    |\n    selectStmt : R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl limitClselectStmt : selectStmt R_UNION allOpt selectStmtselectStmt : selectStmt R_INTERSECT allOpt selectStmtselectStmt : selectStmt R_EXCEPT allOpt selectStmtselectStmt : S_PARIZQ selectStmt S_PARDER\n    fromCl : R_FROM tableExp\n    selectStmt : R_SELECT selectParamsallOpt : R_ALL\n    |\n    selectParams : O_PRODUCTOselectParams : selectListselectList : selectList S_COMA selectListParams optAliasselectList : selectListParams optAliasselectListParams : expresionselectListParams : ID S_PUNTO O_PRODUCTO\n    optAlias : R_AS idOrString\n    \n    optAlias : idOrString\n    optAlias : tableExp : tableExp S_COMA fromBody tableExp : fromBody fromBody : ID optAliasfromBody : S_PARIZQ selectStmt S_PARDER R_AS idOrStringjoinList : joinList2joinList2 : joinList2 joinCl\n    | joinCljoinCl : joinOpt R_JOIN columnName optAlias R_ON expBool\n    | joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER\n    | R_NATURAL joinOpt R_JOIN columnName optAlias\n    nameList : nameList S_COMA columnName\n    | columnName\n    joinOpt : R_INNER\n    | R_LEFT\n    | R_LEFT R_OUTER\n    | R_RIGHT\n    | R_RIGHT R_OUTER\n    | R_FULL\n    | R_FULL R_OUTER\n    whereCl : R_WHERE expBoolwhereCl : \n    groupByCl : R_GROUP R_BY groupList havingCl\n    \n    groupByCl :\n    \n    groupList :  groupList S_COMA columnName\n            | groupList S_COMA INTEGER\n    \n    groupList :  columnName\n            | INTEGER\n    havingCl : R_HAVING expBoolhavingCl :orderByCl : R_ORDER R_BY orderListorderList : orderList S_COMA orderByElem\n    | orderByElem\n    \n    orderByElem : columnName orderOpts orderNull\n                | INTEGER orderOpts orderNull\n    orderOpts : R_ASC\n    | R_DESC\n    |\n    orderNull : R_NULL R_FIRST\n    | R_NULL R_LAST\n    |\n    limitCl : R_LIMIT INTEGER offsetLimit\n    | R_LIMIT R_ALL offsetLimit\n    limitCl :offsetLimit : R_OFFSET INTEGERoffsetLimit :insertStmt : R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDERparamsColumn : S_PARIZQ idList S_PARDERparamsColumn :updateStmt : R_UPDATE fromBody R_SET updateCols whereClupdateCols : updateCols S_COMA updateValsupdateCols : updateVals updateVals : ID S_IGUAL updateExpupdateExp : datatype\n    | R_DEFAULT\n    deleteStmt : R_DELETE fromCl whereCltruncateStmt : R_TRUNCATE tableOpt IDtableOpt : R_TABLE\n    |\n    showStmt : R_SHOW R_DATABASES likeOptlikeOpt : R_LIKE STRING\n    |\n    useStmt : R_USE ID'
    
_lr_action_items = {'R_CREATE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[14,14,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_SHOW':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[15,15,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_ALTER':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,115,116,117,118,309,],[16,16,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,201,201,]),'R_DROP':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,115,116,117,118,309,],[17,17,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,205,205,]),'R_INSERT':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[18,18,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_UPDATE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[20,20,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_DELETE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[21,21,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_TRUNCATE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[22,22,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_USE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[23,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_SELECT':([0,2,3,19,25,26,27,28,29,30,31,32,33,34,35,36,37,38,54,69,103,104,105,106,164,186,243,345,347,348,349,350,351,364,365,366,441,442,443,444,518,519,520,521,609,619,658,660,666,],[24,24,-3,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-279,-279,-279,24,24,24,-278,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'S_PARIZQ':([0,2,3,19,20,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,54,56,60,66,69,70,71,79,88,89,90,91,92,94,97,103,104,105,106,115,116,117,122,130,136,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,156,160,161,164,168,171,176,178,181,182,183,186,193,218,243,244,245,247,248,249,250,252,254,256,259,267,268,269,270,323,328,343,345,347,348,349,350,351,352,358,359,360,361,362,364,365,366,388,391,400,401,403,408,429,436,437,438,439,440,441,442,443,444,446,458,474,475,476,477,478,486,492,516,518,519,520,521,526,540,562,603,605,606,608,609,610,619,620,627,658,660,666,707,],[19,19,-3,19,54,69,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-279,-279,-279,19,54,69,139,164,171,171,178,180,181,182,183,184,185,186,19,-278,19,19,-14,-15,-16,211,178,69,171,171,171,171,171,171,171,171,243,171,171,171,171,171,171,171,178,178,164,139,171,178,178,171,171,171,19,301,54,19,345,171,347,-202,-203,-204,348,349,350,351,171,364,365,366,408,171,171,19,19,19,19,19,19,171,441,442,443,444,171,19,19,19,480,486,490,491,493,171,171,171,518,519,520,521,19,19,19,19,171,538,558,558,558,558,558,171,590,609,19,19,19,19,619,622,558,178,178,657,658,19,660,19,666,668,19,19,19,710,]),'$end':([1,2,3,25,26,27,28,29,30,31,32,33,34,35,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'S_PUNTOCOMA':([4,5,6,7,8,9,10,11,12,13,39,40,45,53,55,59,61,62,63,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,112,115,116,117,123,125,127,129,131,132,133,135,137,157,158,162,168,169,170,172,173,177,187,188,190,191,192,197,198,202,203,207,209,212,213,215,217,219,220,221,222,223,230,231,232,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,277,278,279,286,300,303,307,310,312,313,314,318,321,326,330,331,332,334,335,341,342,354,355,356,357,367,368,369,370,373,374,375,376,379,389,392,393,394,395,396,398,405,406,411,412,413,414,415,416,417,418,422,424,427,435,445,459,461,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,481,483,484,489,497,498,499,500,502,503,504,505,506,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,539,552,556,557,559,560,561,562,563,564,565,566,567,568,569,570,572,574,575,577,578,579,592,593,594,596,597,598,599,600,601,604,607,615,616,617,618,624,625,632,634,635,636,637,646,647,649,650,651,652,653,654,655,656,661,662,663,664,669,680,681,683,687,689,691,697,698,699,701,702,703,712,],[26,27,28,29,30,31,32,33,34,35,-17,-18,-349,-288,-309,-350,-277,-280,-281,-288,-284,-222,-95,-96,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-347,-14,-15,-16,-275,-291,-287,-343,-276,-290,-344,-309,-283,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-272,-273,-274,-348,-239,-240,-247,-263,-264,-309,-339,-286,-308,-309,-311,-309,-293,-295,-288,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-97,-156,-213,-100,-199,-32,-249,-248,-253,-254,-255,-250,-251,-337,-289,-311,-331,-311,-294,-282,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-35,-241,-242,-243,-244,-245,-246,-260,-261,-338,-340,-341,-342,-292,-331,-268,-331,-331,-222,-206,-163,-165,-27,-53,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,-20,-28,-29,-252,-267,-270,-333,-333,-317,-314,-315,-331,-271,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-19,-90,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,-33,-30,-31,-257,-258,-259,-262,-334,-329,-330,-318,-320,-325,-325,-310,-269,-298,-189,-193,-195,-197,-88,-89,-70,-34,-23,-256,-45,-47,-332,-328,-323,-324,-328,-312,-313,-316,-296,-190,-194,-196,-198,-79,-319,-321,-322,-187,-184,-26,-326,-327,-297,-185,-188,-186,-48,]),'R_UNION':([13,51,53,61,62,63,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,115,116,117,123,125,127,128,131,132,135,137,157,158,162,165,168,169,170,172,173,177,187,188,190,191,192,215,217,219,220,221,222,223,230,231,232,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,277,278,279,286,299,300,330,331,332,334,335,341,342,344,354,355,356,357,367,368,369,370,373,374,375,376,379,415,416,417,418,422,424,427,428,430,431,432,433,434,435,445,447,448,449,497,498,499,500,502,503,504,505,506,508,509,510,511,512,513,514,515,517,522,523,524,525,527,528,529,530,531,532,533,594,596,597,598,599,600,601,604,607,611,612,613,614,615,616,617,618,647,649,650,651,652,653,654,655,656,659,661,662,663,664,665,680,681,683,686,687,688,689,690,697,698,699,701,702,703,],[36,36,-288,-277,-280,-281,-288,-284,-222,-95,-96,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-275,-291,-287,36,-276,-290,-309,-283,-168,-169,-214,36,-222,-149,-150,-127,-148,-212,-107,-108,-272,-273,-274,-286,-308,-309,-311,-309,-293,-295,-288,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-97,-156,-213,-100,36,-199,-289,-311,-331,-311,-294,-282,-98,36,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-331,-268,-331,-331,-222,-206,36,36,36,36,36,36,-163,-165,36,36,36,-267,-270,-333,-333,-317,-314,-315,-331,-271,-288,-207,-166,-178,-179,-180,-181,-183,-164,36,36,36,36,-167,-191,-192,-182,-105,-106,-115,-329,-330,-318,-320,-325,-325,-310,-269,-298,36,36,36,36,-189,-193,-195,-197,-332,-328,-323,-324,-328,-312,-313,-316,-296,36,-190,-194,-196,-198,36,-319,-321,-322,36,-187,36,-184,36,-326,-327,-297,-185,-188,-186,]),'R_INTERSECT':([13,51,53,61,62,63,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,115,116,117,123,125,127,128,131,132,135,137,157,158,162,165,168,169,170,172,173,177,187,188,190,191,192,215,217,219,220,221,222,223,230,231,232,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,277,278,279,286,299,300,330,331,332,334,335,341,342,344,354,355,356,357,367,368,369,370,373,374,375,376,379,415,416,417,418,422,424,427,428,430,431,432,433,434,435,445,447,448,449,497,498,499,500,502,503,504,505,506,508,509,510,511,512,513,514,515,517,522,523,524,525,527,528,529,530,531,532,533,594,596,597,598,599,600,601,604,607,611,612,613,614,615,616,617,618,647,649,650,651,652,653,654,655,656,659,661,662,663,664,665,680,681,683,686,687,688,689,690,697,698,699,701,702,703,],[37,37,-288,-277,-280,-281,-288,-284,-222,-95,-96,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-275,-291,-287,37,-276,-290,-309,-283,-168,-169,-214,37,-222,-149,-150,-127,-148,-212,-107,-108,-272,-273,-274,-286,-308,-309,-311,-309,-293,-295,-288,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-97,-156,-213,-100,37,-199,-289,-311,-331,-311,-294,-282,-98,37,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-331,-268,-331,-331,-222,-206,37,37,37,37,37,37,-163,-165,37,37,37,-267,-270,-333,-333,-317,-314,-315,-331,-271,-288,-207,-166,-178,-179,-180,-181,-183,-164,37,37,37,37,-167,-191,-192,-182,-105,-106,-115,-329,-330,-318,-320,-325,-325,-310,-269,-298,37,37,37,37,-189,-193,-195,-197,-332,-328,-323,-324,-328,-312,-313,-316,-296,37,-190,-194,-196,-198,37,-319,-321,-322,37,-187,37,-184,37,-326,-327,-297,-185,-188,-186,]),'R_EXCEPT':([13,51,53,61,62,63,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,115,116,117,123,125,127,128,131,132,135,137,157,158,162,165,168,169,170,172,173,177,187,188,190,191,192,215,217,219,220,221,222,223,230,231,232,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,277,278,279,286,299,300,330,331,332,334,335,341,342,344,354,355,356,357,367,368,369,370,373,374,375,376,379,415,416,417,418,422,424,427,428,430,431,432,433,434,435,445,447,448,449,497,498,499,500,502,503,504,505,506,508,509,510,511,512,513,514,515,517,522,523,524,525,527,528,529,530,531,532,533,594,596,597,598,599,600,601,604,607,611,612,613,614,615,616,617,618,647,649,650,651,652,653,654,655,656,659,661,662,663,664,665,680,681,683,686,687,688,689,690,697,698,699,701,702,703,],[38,38,-288,-277,-280,-281,-288,-284,-222,-95,-96,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-275,-291,-287,38,-276,-290,-309,-283,-168,-169,-214,38,-222,-149,-150,-127,-148,-212,-107,-108,-272,-273,-274,-286,-308,-309,-311,-309,-293,-295,-288,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-97,-156,-213,-100,38,-199,-289,-311,-331,-311,-294,-282,-98,38,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-331,-268,-331,-331,-222,-206,38,38,38,38,38,38,-163,-165,38,38,38,-267,-270,-333,-333,-317,-314,-315,-331,-271,-288,-207,-166,-178,-179,-180,-181,-183,-164,38,38,38,38,-167,-191,-192,-182,-105,-106,-115,-329,-330,-318,-320,-325,-325,-310,-269,-298,38,38,38,38,-189,-193,-195,-197,-332,-328,-323,-324,-328,-312,-313,-316,-296,38,-190,-194,-196,-198,38,-319,-321,-322,38,-187,38,-184,38,-326,-327,-297,-185,-188,-186,]),'R_TABLE':([14,16,17,22,],[41,47,48,58,]),'R_TYPE':([14,397,],[43,488,]),'R_OR':([14,68,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,157,158,162,167,168,169,170,172,173,177,187,188,217,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,285,286,300,342,354,355,356,357,367,368,369,370,373,374,375,376,379,427,435,445,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,615,616,617,618,655,656,661,662,663,664,687,689,701,702,703,],[44,161,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-168,-169,-214,161,-222,-149,-150,-127,-148,161,-107,-108,161,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,161,-100,-199,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-206,-163,-165,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-189,-193,-195,-197,161,161,-190,-194,-196,-198,-187,-184,-185,-188,-186,]),'R_DATABASE':([14,16,17,42,111,],[-22,46,49,109,-21,]),'R_DATABASES':([15,],[45,]),'R_INTO':([18,],[50,]),'ID':([20,22,23,24,41,43,46,47,48,49,50,53,56,57,58,60,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,95,96,98,99,107,109,110,119,121,124,126,130,136,138,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,157,158,160,161,162,164,168,169,170,171,172,173,176,177,178,181,182,183,187,188,195,208,211,218,230,231,232,234,236,237,238,239,240,241,242,245,246,251,253,255,257,258,262,263,264,265,267,271,272,273,274,275,277,278,279,280,286,300,301,302,305,306,308,311,317,319,320,322,327,328,329,336,342,343,352,354,355,356,357,362,367,368,369,370,373,374,375,376,377,379,382,390,399,408,410,421,423,424,425,427,429,435,436,445,446,460,480,485,486,488,490,491,493,494,501,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,555,590,602,603,605,615,616,617,618,622,638,639,640,641,642,643,648,657,661,662,663,664,668,687,689,694,696,700,701,702,703,706,710,],[53,-346,59,66,-25,-25,115,115,-266,-266,122,115,53,133,-345,66,115,-284,-222,-95,-96,168,168,168,-150,-151,-152,-153,-154,-155,168,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,115,-25,196,115,115,214,115,168,66,231,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-168,-169,168,168,-214,168,-222,-149,-150,168,-127,-148,168,-212,168,168,168,168,-107,-108,115,-265,325,53,115,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,168,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,168,-210,-211,-216,-217,-218,-97,-156,-213,231,-100,-199,382,-24,115,115,397,399,404,405,406,407,214,168,115,424,-98,168,168,-174,-175,-176,-177,168,-219,-220,-221,-142,-101,-102,-103,-104,424,-205,461,483,461,168,496,424,115,-222,424,-206,168,-163,168,-165,168,382,325,574,168,461,580,583,325,592,424,115,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,629,325,424,168,168,-189,-193,-195,-197,667,583,583,583,583,583,583,424,424,-190,-194,-196,-198,583,-187,-184,583,707,424,-185,-188,-186,583,325,]),'R_FROM':([21,61,62,63,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,115,116,117,127,134,137,157,158,162,168,169,170,172,173,177,187,188,215,230,231,232,234,236,237,238,239,240,241,242,246,251,253,255,257,258,260,262,263,264,265,271,272,273,274,275,277,278,279,286,291,292,293,294,295,296,297,300,341,342,353,354,355,356,357,367,368,369,370,373,374,375,376,379,427,435,445,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,615,616,617,618,661,662,663,664,677,687,689,695,701,702,703,],[56,56,-280,-281,-288,-284,-222,-95,-96,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-287,56,-283,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,-288,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,352,-170,-171,-172,-173,-210,-211,-216,-217,-218,-97,-156,-213,-100,377,-109,-110,-111,-112,-113,-114,-199,-282,-98,436,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-206,-163,-165,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-189,-193,-195,-197,-190,-194,-196,-198,694,-187,-184,706,-185,-188,-186,]),'R_DISTINCT':([24,155,261,644,678,],[60,260,353,677,695,]),'O_PRODUCTO':([24,60,66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,138,166,168,169,170,172,173,179,181,187,188,231,234,235,236,237,238,239,240,241,242,246,251,253,255,257,258,266,278,281,286,287,289,290,342,346,363,370,373,374,375,376,413,426,435,445,510,517,527,531,532,533,],[62,62,-222,142,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,232,142,-222,-149,-150,-127,-148,142,288,-107,-108,-223,-99,142,142,142,-137,-138,-139,-140,142,142,142,142,142,142,142,142,-156,142,-100,142,142,142,-98,142,142,-142,-101,-102,-103,-104,142,142,142,142,142,142,142,-105,-106,-115,]),'R_CASE':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'O_RESTA':([24,60,66,67,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,93,95,96,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,166,168,169,170,171,172,173,176,178,179,181,182,183,187,188,231,234,235,236,237,238,239,240,241,242,245,246,251,253,255,257,258,266,267,278,281,286,287,289,290,328,342,343,346,352,362,363,370,373,374,375,376,408,413,426,429,435,436,445,446,486,510,517,527,531,532,533,603,605,],[71,71,-222,141,71,71,71,-150,-151,-152,-153,-154,-155,71,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,141,-222,-149,-150,71,-127,-148,71,71,141,71,71,71,-107,-108,-223,-99,141,-135,-136,-137,-138,-139,-140,141,71,141,141,141,141,141,141,141,71,-156,141,-100,141,141,141,71,-98,71,141,71,71,141,-142,-101,-102,-103,-104,71,141,141,71,141,71,141,71,71,141,141,141,-105,-106,-115,71,71,]),'O_SUMA':([24,60,66,67,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,93,95,96,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,166,168,169,170,171,172,173,176,178,179,181,182,183,187,188,231,234,235,236,237,238,239,240,241,242,245,246,251,253,255,257,258,266,267,278,281,286,287,289,290,328,342,343,346,352,362,363,370,373,374,375,376,408,413,426,429,435,436,445,446,486,510,517,527,531,532,533,603,605,],[70,70,-222,140,70,70,70,-150,-151,-152,-153,-154,-155,70,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,140,-222,-149,-150,70,-127,-148,70,70,140,70,70,70,-107,-108,-223,-99,140,-135,-136,-137,-138,-139,-140,140,70,140,140,140,140,140,140,140,70,-156,140,-100,140,140,140,70,-98,70,140,70,70,140,-142,-101,-102,-103,-104,70,140,140,70,140,70,140,70,70,140,140,140,-105,-106,-115,70,70,]),'R_NOT':([24,60,66,67,69,73,74,75,76,77,78,79,81,82,83,84,85,86,87,93,95,96,108,130,136,155,160,161,163,164,166,168,169,170,172,173,176,178,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,487,531,532,533,543,544,545,546,547,548,549,552,556,557,559,560,561,562,563,564,565,566,567,568,569,570,603,605,623,624,625,626,628,629,632,644,669,704,],[79,79,-222,148,79,-150,-151,-152,-153,-154,-155,79,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,194,79,79,261,79,79,276,79,148,-222,-149,-150,-127,-148,79,79,148,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-53,551,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,551,-105,-106,-115,551,-82,-83,-84,-85,-86,-87,-90,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,79,79,-81,-88,-89,-91,-93,-94,-70,678,-79,-92,]),'INTEGER':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,284,328,343,352,362,372,408,419,421,429,436,446,482,486,491,501,550,558,573,595,602,603,605,638,639,640,641,642,643,648,668,670,694,706,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,499,504,81,81,81,572,81,584,600,81,81,634,647,654,81,81,584,584,584,584,584,584,600,584,81,584,584,]),'STRING':([24,41,46,47,48,49,53,60,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,95,96,98,99,100,101,107,109,113,119,121,126,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,157,158,160,161,162,164,168,169,170,171,172,173,176,177,178,181,182,183,185,187,188,189,195,208,230,231,232,234,236,237,238,239,240,241,242,245,246,251,253,255,257,258,262,263,264,265,267,271,272,273,274,275,277,278,279,284,286,300,302,305,306,328,329,342,343,352,354,355,356,357,362,367,368,369,370,372,373,374,375,376,379,390,408,423,424,427,429,435,436,445,446,454,455,456,457,485,486,491,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,550,558,603,605,615,616,617,618,638,639,640,641,642,643,661,662,663,664,668,670,687,689,694,701,702,703,706,],[82,-25,116,116,-266,-266,116,82,116,-284,-222,-95,-96,82,172,172,-150,-151,-152,-153,-154,-155,82,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,187,188,116,-25,197,116,116,116,82,82,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-168,-169,82,82,-214,82,-222,-149,-150,172,-127,-148,82,-212,82,172,172,172,298,-107,-108,300,116,-265,116,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,172,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,172,-210,-211,-216,-217,-218,-97,-156,-213,172,-100,-199,-24,116,116,172,116,-98,172,172,-174,-175,-176,-177,172,-219,-220,-221,-142,172,-101,-102,-103,-104,-205,484,172,116,-222,-206,172,-163,172,-165,172,534,535,536,537,575,172,585,116,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,172,172,82,82,-189,-193,-195,-197,585,585,585,585,585,585,-190,-194,-196,-198,585,172,-187,-184,585,-185,-188,-186,585,]),'DECIMAL':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,284,328,343,352,362,372,408,429,436,446,486,491,550,558,603,605,638,639,640,641,642,643,668,670,694,706,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,586,83,83,83,83,586,586,586,586,586,586,586,83,586,586,]),'CHARACTER':([24,41,46,47,48,49,53,60,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,95,96,98,99,107,109,119,121,126,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,157,158,160,161,162,164,168,169,170,171,172,173,176,177,178,181,182,183,187,188,195,208,230,231,232,234,236,237,238,239,240,241,242,245,246,251,253,255,257,258,262,263,264,265,267,271,272,273,274,275,277,278,279,284,286,300,302,305,306,328,329,342,343,352,354,355,356,357,362,367,368,369,370,372,373,374,375,376,379,408,423,424,427,429,435,436,445,446,486,491,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,550,558,603,605,615,616,617,618,638,639,640,641,642,643,661,662,663,664,668,670,687,689,694,701,702,703,706,],[84,-25,117,117,-266,-266,117,84,117,-284,-222,-95,-96,84,84,84,-150,-151,-152,-153,-154,-155,84,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,117,-25,117,117,117,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-168,-169,84,84,-214,84,-222,-149,-150,84,-127,-148,84,-212,84,84,84,84,-107,-108,117,-265,117,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,84,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,84,-210,-211,-216,-217,-218,-97,-156,-213,84,-100,-199,-24,117,117,84,117,-98,84,84,-174,-175,-176,-177,84,-219,-220,-221,-142,84,-101,-102,-103,-104,-205,84,117,-222,-206,84,-163,84,-165,84,84,587,117,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,84,84,84,84,-189,-193,-195,-197,587,587,587,587,587,587,-190,-194,-196,-198,587,84,-187,-184,587,-185,-188,-186,587,]),'R_TRUE':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,155,156,160,161,163,164,171,176,178,181,182,183,245,261,267,276,284,328,343,352,362,372,408,429,436,446,486,491,550,558,603,605,638,639,640,641,642,643,668,670,694,706,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,263,85,85,85,273,85,85,85,85,85,85,85,85,355,85,367,85,85,85,85,85,85,85,85,85,85,85,588,85,85,85,85,588,588,588,588,588,588,588,85,588,588,]),'R_FALSE':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,155,156,160,161,163,164,171,176,178,181,182,183,245,261,267,276,284,328,343,352,362,372,408,429,436,446,486,491,550,558,603,605,638,639,640,641,642,643,668,670,694,706,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,264,86,86,86,274,86,86,86,86,86,86,86,86,356,86,368,86,86,86,86,86,86,86,86,86,86,86,589,86,86,86,86,589,589,589,589,589,589,589,86,589,589,]),'R_NULL':([24,60,69,70,71,79,81,83,84,85,86,87,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,155,156,160,161,164,171,172,176,178,181,182,183,231,245,261,267,284,328,343,352,362,372,408,424,429,436,446,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,486,487,543,544,545,546,547,548,549,550,551,552,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,599,600,603,605,623,624,625,626,628,629,632,649,650,651,652,669,670,704,],[87,87,87,87,87,87,-126,-128,-129,-130,-131,-132,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,262,87,87,87,87,87,-127,87,87,87,87,87,-223,87,354,87,87,87,87,87,87,87,87,-222,87,87,87,-53,552,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,87,552,552,-82,-83,-84,-85,-86,-87,87,625,-90,-58,-65,87,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,-325,-325,87,87,-81,-88,-89,-91,-93,-94,-70,682,-323,-324,682,-79,87,-92,]),'R_NOW':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,378,408,429,436,446,486,603,605,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,458,88,88,88,88,88,88,88,]),'R_COUNT':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'R_SUM':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'R_PROM':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'R_EXTRACT':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'R_DATE_PART':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'R_CURRENT_DATE':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'R_CURRENT_TIME':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'R_EXISTS':([24,60,69,79,120,130,136,160,161,164,176,178,194,603,605,],[97,97,97,97,208,97,97,97,97,97,97,97,302,97,97,]),'R_TIMESTAMP':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,377,378,382,399,408,429,436,446,486,488,603,605,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,454,471,471,100,100,100,100,100,471,100,100,]),'R_INTERVAL':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,377,378,382,399,408,429,436,446,486,488,603,605,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,457,479,479,101,101,101,101,101,479,101,101,]),'R_ALL':([36,37,38,74,75,76,77,78,81,83,84,85,86,87,93,95,96,149,150,151,152,154,157,158,159,168,169,170,172,173,187,188,231,234,236,237,238,239,240,241,242,262,263,264,265,278,286,342,354,355,356,357,370,373,374,375,376,419,435,445,510,517,527,531,532,533,],[104,104,104,-151,-152,-153,-154,-155,-126,-128,-129,-130,-131,-132,-123,-121,-122,248,248,248,248,248,248,248,248,-222,-149,-150,-127,-148,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,248,248,248,248,-156,-100,-98,248,248,248,248,-142,-101,-102,-103,-104,500,248,248,248,248,248,-105,-106,-115,]),'R_IF':([41,43,48,49,109,],[108,108,120,120,108,]),'R_REPLACE':([44,],[111,]),'R_LIKE':([45,66,73,82,102,168,231,],[113,-222,-201,-200,189,-222,-223,]),'S_PARDER':([51,53,61,62,63,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,115,116,117,123,125,127,128,131,132,135,137,139,157,158,162,165,166,167,168,169,170,172,173,177,180,187,188,190,191,192,215,217,219,220,221,222,223,230,231,232,233,234,235,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,277,278,279,281,286,287,288,289,290,299,300,324,325,330,331,332,334,335,341,342,344,354,355,356,357,367,368,369,370,373,374,375,376,379,380,381,383,384,385,386,415,416,417,418,422,424,426,427,428,430,431,432,433,434,435,445,447,448,449,451,452,453,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,495,496,497,498,499,500,502,503,504,505,506,508,509,510,511,512,513,514,515,517,522,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,541,542,543,544,545,546,547,548,549,552,556,557,559,560,561,562,563,564,565,566,567,568,569,570,571,576,580,581,583,584,585,586,587,588,589,591,594,596,597,598,599,600,601,604,607,611,612,613,614,615,616,617,618,621,623,624,625,626,628,629,630,631,632,633,637,645,646,647,649,650,651,652,653,654,655,656,659,661,662,663,664,665,667,669,671,672,673,674,675,676,680,681,683,684,685,686,687,688,689,690,692,693,697,698,699,701,702,703,704,705,708,709,711,712,],[123,-288,-277,-280,-281,-288,-284,-222,-95,-96,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-275,-291,-287,216,-276,-290,-309,-283,234,-168,-169,-214,277,278,279,-222,-149,-150,-127,-148,-212,286,-107,-108,-272,-273,-274,-286,-308,-309,-311,-309,-293,-295,-288,-223,-285,342,-99,-134,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-97,-156,-213,278,-100,373,374,375,376,379,-199,409,-52,-289,-311,-331,-311,-294,-282,-98,427,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,459,-37,-39,-40,-41,-42,-292,-331,-268,-331,-331,-222,-133,-206,509,511,512,513,514,515,-163,-165,528,529,530,531,532,533,-53,-44,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,593,-51,-267,-270,-333,-333,-317,-314,-315,-331,-271,-288,-207,-166,-178,-179,-180,-181,-183,-164,615,616,617,618,-167,-191,-192,-182,-105,-106,-115,-116,-117,-118,-119,621,-36,-38,-43,-82,-83,-84,-85,-86,-87,-90,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,633,635,636,637,-232,-233,-234,-235,-236,-237,-238,646,-329,-330,-318,-320,-325,-325,-310,-269,-298,661,662,663,664,-189,-193,-195,-197,-120,-81,-88,-89,-91,-93,-94,669,-125,-70,-46,-45,679,-47,-332,-328,-323,-324,-328,-312,-313,-316,-296,687,-190,-194,-196,-198,689,691,-79,-224,-225,-226,-227,-228,-229,-319,-321,-322,-300,699,701,-187,702,-184,703,704,-124,-326,-327,-297,-185,-188,-186,-92,-230,-299,-231,712,-48,]),'R_SET':([52,53,115,116,117,125,127,215,397,415,],[124,-288,-14,-15,-16,-291,-287,-286,487,-292,]),'R_AS':([53,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,157,158,162,168,169,170,172,173,177,187,188,196,216,230,231,232,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,277,278,279,286,300,342,354,355,356,357,367,368,369,370,373,374,375,376,379,423,424,427,435,445,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,615,616,617,618,661,662,663,664,687,689,701,702,703,],[126,126,-284,-222,-95,-96,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,304,329,126,-223,-285,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-97,-156,-213,-100,-199,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,126,-222,-206,-163,-165,126,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-189,-193,-195,-197,-190,-194,-196,-198,-187,-184,-185,-188,-186,]),'S_COMA':([53,63,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,137,157,158,162,168,169,170,172,173,177,187,188,202,203,212,213,215,230,231,232,233,234,235,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,277,278,279,286,298,300,307,310,312,313,314,318,321,324,325,330,341,342,354,355,356,357,367,368,369,370,373,374,375,376,379,380,381,383,384,385,386,398,405,406,411,412,413,414,415,424,426,427,435,445,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,489,495,496,502,503,504,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,541,542,543,544,545,546,547,548,549,552,556,557,559,560,561,562,563,564,565,566,567,568,569,570,571,576,577,578,579,591,592,597,598,599,600,615,616,617,618,623,624,625,626,628,629,630,631,632,633,636,637,645,646,649,650,651,652,653,654,661,662,663,664,669,680,681,683,684,685,687,689,693,697,698,701,702,703,704,708,711,712,],[-288,136,-288,-284,-222,-95,-96,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,218,-290,-283,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,309,-247,327,-339,-286,-288,-223,-285,343,-99,-134,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-97,-156,-213,-100,378,-199,-249,-248,-253,-254,-255,-250,-251,410,-52,-289,-282,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,460,-37,-39,-40,-41,-42,-246,-260,-261,-338,-340,-341,-342,-292,-222,-133,-206,-163,-165,-53,-44,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,-252,343,-51,602,-314,-315,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-36,-38,-43,-82,-83,-84,-85,-86,-87,-90,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,410,343,-257,-258,-259,410,-262,648,-320,-325,-325,-189,-193,-195,-197,-81,-88,-89,-91,-93,-94,670,-125,-70,-46,-256,-45,410,-47,-328,-323,-324,-328,-312,-313,-190,-194,-196,-198,-79,-319,-321,-322,-300,700,-187,-184,-124,-326,-327,-185,-188,-186,-92,-299,410,-48,]),'R_WHERE':([53,55,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,212,213,215,219,221,222,223,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,411,412,413,414,415,424,427,435,445,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,607,615,616,617,618,656,661,662,663,664,687,689,699,701,702,703,],[-288,130,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,130,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,130,-339,-286,130,130,-293,-295,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-338,-340,-341,-342,-292,-222,-206,-163,-165,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-298,-189,-193,-195,-197,-296,-190,-194,-196,-198,-187,-184,-297,-185,-188,-186,]),'R_NATURAL':([53,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,215,222,223,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,415,424,427,435,445,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,607,615,616,617,618,656,661,662,663,664,687,689,699,701,702,703,],[-288,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,225,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,225,-295,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-222,-206,-163,-165,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-298,-189,-193,-195,-197,-296,-190,-194,-196,-198,-187,-184,-297,-185,-188,-186,]),'R_INNER':([53,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,215,222,223,225,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,415,424,427,435,445,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,607,615,616,617,618,656,661,662,663,664,687,689,699,701,702,703,],[-288,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,226,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,226,-295,226,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-222,-206,-163,-165,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-298,-189,-193,-195,-197,-296,-190,-194,-196,-198,-187,-184,-297,-185,-188,-186,]),'R_LEFT':([53,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,215,222,223,225,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,415,424,427,435,445,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,607,615,616,617,618,656,661,662,663,664,687,689,699,701,702,703,],[-288,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,227,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,227,-295,227,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-222,-206,-163,-165,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-298,-189,-193,-195,-197,-296,-190,-194,-196,-198,-187,-184,-297,-185,-188,-186,]),'R_RIGHT':([53,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,215,222,223,225,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,415,424,427,435,445,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,607,615,616,617,618,656,661,662,663,664,687,689,699,701,702,703,],[-288,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,228,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,228,-295,228,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-222,-206,-163,-165,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-298,-189,-193,-195,-197,-296,-190,-194,-196,-198,-187,-184,-297,-185,-188,-186,]),'R_FULL':([53,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,215,222,223,225,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,415,424,427,435,445,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,607,615,616,617,618,656,661,662,663,664,687,689,699,701,702,703,],[-288,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,229,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,229,-295,229,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-222,-206,-163,-165,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-298,-189,-193,-195,-197,-296,-190,-194,-196,-198,-187,-184,-297,-185,-188,-186,]),'R_GROUP':([53,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,215,217,219,220,221,222,223,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,331,334,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,415,424,427,435,445,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,607,615,616,617,618,656,661,662,663,664,687,689,699,701,702,703,],[-288,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,-309,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,-308,-309,333,-309,-293,-295,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,333,333,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,-222,-206,-163,-165,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-298,-189,-193,-195,-197,-296,-190,-194,-196,-198,-187,-184,-297,-185,-188,-186,]),'R_LIMIT':([53,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,215,217,219,220,221,222,223,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,331,332,334,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,415,416,418,422,424,427,435,445,502,503,504,505,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,597,598,599,600,601,607,615,616,617,618,649,650,651,652,653,654,655,656,661,662,663,664,680,681,683,687,689,697,698,699,701,702,703,],[-288,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,-309,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,-308,-309,-311,-309,-293,-295,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,-311,419,-311,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,419,419,419,-222,-206,-163,-165,-317,-314,-315,419,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-318,-320,-325,-325,-310,-298,-189,-193,-195,-197,-328,-323,-324,-328,-312,-313,-316,-296,-190,-194,-196,-198,-319,-321,-322,-187,-184,-326,-327,-297,-185,-188,-186,]),'R_ORDER':([53,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,115,116,117,125,127,131,132,135,157,158,162,168,169,170,172,173,177,187,188,215,217,220,221,222,223,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,286,300,330,332,334,335,342,354,355,356,357,367,368,369,370,373,374,375,376,379,415,422,424,427,435,445,502,503,504,508,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,601,607,615,616,617,618,653,654,655,656,661,662,663,664,687,689,699,701,702,703,],[-288,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-14,-15,-16,-291,-287,-276,-290,-309,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-286,-308,-311,-309,-293,-295,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,-100,-199,-289,420,-311,-294,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-292,420,-222,-206,-163,-165,-317,-314,-315,-288,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-310,-298,-189,-193,-195,-197,-312,-313,-316,-296,-190,-194,-196,-198,-187,-184,-297,-185,-188,-186,]),'S_PUNTO':([66,168,424,],[138,280,280,]),'O_DIVISION':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,235,236,237,238,239,240,241,242,246,251,253,255,257,258,266,278,281,286,287,289,290,342,346,363,370,373,374,375,376,413,426,435,445,510,517,527,531,532,533,],[-222,143,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,143,-222,-149,-150,-127,-148,143,-107,-108,-223,-99,143,143,143,-137,-138,-139,-140,143,143,143,143,143,143,143,143,-156,143,-100,143,143,143,-98,143,143,-142,-101,-102,-103,-104,143,143,143,143,143,143,143,-105,-106,-115,]),'O_EXPONENTE':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,235,236,237,238,239,240,241,242,246,251,253,255,257,258,266,278,281,286,287,289,290,342,346,363,370,373,374,375,376,413,426,435,445,510,517,527,531,532,533,],[-222,144,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,144,-222,144,-150,-127,144,144,-107,-108,-223,-99,144,144,144,144,144,-139,144,144,144,144,144,144,144,144,144,-156,144,-100,144,144,144,-98,144,144,-142,-101,-102,-103,-104,144,144,144,144,144,144,144,-105,-106,-115,]),'O_MODULAR':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,235,236,237,238,239,240,241,242,246,251,253,255,257,258,266,278,281,286,287,289,290,342,346,363,370,373,374,375,376,413,426,435,445,510,517,527,531,532,533,],[-222,145,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,145,-222,-149,-150,-127,-148,145,-107,-108,-223,-99,145,145,145,-137,-138,-139,-140,145,145,145,145,145,145,145,145,-156,145,-100,145,145,145,-98,145,145,-142,-101,-102,-103,-104,145,145,145,145,145,145,145,-105,-106,-115,]),'OC_CONCATENAR':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,235,236,237,238,239,240,241,242,246,251,253,255,257,258,266,278,281,286,287,289,290,342,346,363,370,373,374,375,376,413,426,435,445,510,517,527,531,532,533,],[-222,146,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,146,-222,-149,-150,-127,-148,146,-107,-108,-223,-99,146,-135,-136,-137,-138,-139,-140,-141,146,146,146,146,146,146,146,-156,146,-100,146,146,146,-98,146,146,-142,-101,-102,-103,-104,146,146,146,146,146,146,146,-105,-106,-115,]),'R_IN':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,148,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,],[-222,147,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,244,147,-222,-149,-150,-127,-148,147,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,]),'OL_MENORQUE':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,582,583,584,585,586,587,588,589,],[-222,149,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,149,-222,-149,-150,-127,-148,149,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,638,-232,-233,-234,-235,-236,-237,-238,]),'OL_MAYORQUE':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,582,583,584,585,586,587,588,589,],[-222,150,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,150,-222,-149,-150,-127,-148,150,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,639,-232,-233,-234,-235,-236,-237,-238,]),'OL_MAYORIGUALQUE':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,582,583,584,585,586,587,588,589,],[-222,151,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,151,-222,-149,-150,-127,-148,151,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,640,-232,-233,-234,-235,-236,-237,-238,]),'OL_MENORIGUALQUE':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,582,583,584,585,586,587,588,589,],[-222,152,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,152,-222,-149,-150,-127,-148,152,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,641,-232,-233,-234,-235,-236,-237,-238,]),'S_IGUAL':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,214,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,390,482,531,532,533,582,583,584,585,586,587,588,589,],[-222,153,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,153,-222,-149,-150,-127,-148,153,-107,-108,328,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,485,573,-105,-106,-115,642,-232,-233,-234,-235,-236,-237,-238,]),'OL_DISTINTODE':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,582,583,584,585,586,587,588,589,],[-222,154,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,154,-222,-149,-150,-127,-148,154,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,643,-232,-233,-234,-235,-236,-237,-238,]),'R_IS':([66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,93,95,96,98,99,157,158,162,166,167,168,169,170,172,173,177,179,187,188,217,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,285,286,300,342,354,355,356,357,367,368,369,370,373,374,375,376,379,427,435,445,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,582,583,584,585,586,587,588,589,615,616,617,618,655,656,661,662,663,664,687,689,701,702,703,],[-222,155,163,-150,-151,-152,-153,-154,-155,-215,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-168,-169,-214,155,163,-222,-149,-150,-127,-148,163,155,-107,-108,163,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,163,163,-216,-217,-218,-156,-213,163,-100,-199,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-206,-163,-165,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,644,-232,-233,-234,-235,-236,-237,-238,-189,-193,-195,-197,163,163,-190,-194,-196,-198,-187,-184,-185,-188,-186,]),'R_BETWEEN':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,148,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,],[-222,156,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,245,156,-222,-149,-150,-127,-148,156,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,]),'R_ISNULL':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,],[-222,157,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,157,-222,-149,-150,-127,-148,157,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,]),'R_NOTNULL':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,],[-222,158,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,158,-222,-149,-150,-127,-148,158,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,]),'OL_ESIGUAL':([66,67,73,74,75,76,77,78,81,82,83,84,85,86,87,93,95,96,166,168,169,170,172,173,179,187,188,231,234,236,237,238,239,240,241,242,278,286,342,370,373,374,375,376,531,532,533,],[-222,159,-150,-151,-152,-153,-154,-155,-126,-127,-128,-129,-130,-131,-132,-123,-121,-122,159,-222,-149,-150,-127,-148,159,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-156,-100,-98,-142,-101,-102,-103,-104,-105,-106,-115,]),'R_AND':([68,74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,157,158,162,167,168,169,170,172,173,177,187,188,217,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,266,271,272,273,274,275,278,279,285,286,300,342,346,354,355,356,357,363,367,368,369,370,373,374,375,376,379,427,435,445,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,615,616,617,618,655,656,661,662,663,664,687,689,701,702,703,],[160,-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-168,-169,-214,160,-222,-149,-150,-127,-148,160,-107,-108,160,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,362,-210,-211,-216,-217,-218,-156,-213,160,-100,-199,-98,429,-174,-175,-176,-177,446,-219,-220,-221,-142,-101,-102,-103,-104,-205,-206,-163,-165,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-189,-193,-195,-197,160,160,-190,-194,-196,-198,-187,-184,-185,-188,-186,]),'R_WHEN':([72,81,83,84,85,86,87,172,174,175,283,450,],[176,-126,-128,-129,-130,-131,-132,-127,176,-144,-143,-145,]),'R_THEN':([74,75,76,77,78,80,81,83,84,85,86,87,93,95,96,98,99,157,158,162,168,169,170,172,173,177,187,188,231,234,236,237,238,239,240,241,242,246,251,253,255,257,258,262,263,264,265,271,272,273,274,275,278,279,285,286,300,342,354,355,356,357,367,368,369,370,373,374,375,376,379,427,435,445,509,510,511,512,513,514,515,517,527,528,529,530,531,532,533,615,616,617,618,661,662,663,664,687,689,701,702,703,],[-151,-152,-153,-154,-155,-215,-126,-128,-129,-130,-131,-132,-123,-121,-122,-208,-209,-168,-169,-214,-222,-149,-150,-127,-148,-212,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,-157,-158,-159,-160,-161,-162,-170,-171,-172,-173,-210,-211,-216,-217,-218,-156,-213,372,-100,-199,-98,-174,-175,-176,-177,-219,-220,-221,-142,-101,-102,-103,-104,-205,-206,-163,-165,-207,-166,-178,-179,-180,-181,-183,-164,-167,-191,-192,-182,-105,-106,-115,-189,-193,-195,-197,-190,-194,-196,-198,-187,-184,-185,-188,-186,]),'R_ANY':([74,75,76,77,78,81,83,84,85,86,87,93,95,96,149,150,151,152,154,157,158,159,168,169,170,172,173,187,188,231,234,236,237,238,239,240,241,242,262,263,264,265,278,286,342,354,355,356,357,370,373,374,375,376,435,445,510,517,527,531,532,533,],[-151,-152,-153,-154,-155,-126,-128,-129,-130,-131,-132,-123,-121,-122,249,249,249,249,249,249,249,249,-222,-149,-150,-127,-148,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,249,249,249,249,-156,-100,-98,249,249,249,249,-142,-101,-102,-103,-104,249,249,249,249,249,-105,-106,-115,]),'R_SOME':([74,75,76,77,78,81,83,84,85,86,87,93,95,96,149,150,151,152,154,157,158,159,168,169,170,172,173,187,188,231,234,236,237,238,239,240,241,242,262,263,264,265,278,286,342,354,355,356,357,370,373,374,375,376,435,445,510,517,527,531,532,533,],[-151,-152,-153,-154,-155,-126,-128,-129,-130,-131,-132,-123,-121,-122,250,250,250,250,250,250,250,250,-222,-149,-150,-127,-148,-107,-108,-223,-99,-135,-136,-137,-138,-139,-140,-141,250,250,250,250,-156,-100,-98,250,250,250,250,-142,-101,-102,-103,-104,250,250,250,250,250,-105,-106,-115,]),'R_END':([81,83,84,85,86,87,172,174,175,282,283,371,450,],[-126,-128,-129,-130,-131,-132,-127,-147,-144,370,-143,-146,-145,]),'R_ELSE':([81,83,84,85,86,87,172,174,175,283,450,],[-126,-128,-129,-130,-131,-132,-127,284,-144,-143,-145,]),'R_DEFAULT':([81,83,84,85,86,87,172,328,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,487,543,544,545,546,547,548,549,552,556,557,559,560,561,562,563,564,565,566,567,568,569,570,623,624,625,626,628,629,632,669,704,],[-126,-128,-129,-130,-131,-132,-127,414,-53,550,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,550,550,-82,-83,-84,-85,-86,-87,-90,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,-81,-88,-89,-91,-93,-94,-70,-79,-92,]),'R_PRIMARY':([81,83,84,85,86,87,172,204,301,460,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,543,544,545,546,547,548,549,552,556,557,559,560,561,562,563,564,565,566,567,568,569,570,623,624,625,626,628,629,632,669,704,],[-126,-128,-129,-130,-131,-132,-127,316,316,316,-53,554,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,554,-82,-83,-84,-85,-86,-87,-90,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,-81,-88,-89,-91,-93,-94,-70,-79,-92,]),'R_REFERENCES':([81,83,84,85,86,87,172,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,543,544,545,546,547,548,549,552,556,557,559,560,561,562,563,564,565,566,567,568,569,570,623,624,625,626,628,629,632,669,679,704,],[-126,-128,-129,-130,-131,-132,-127,-53,555,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,555,-82,-83,-84,-85,-86,-87,-90,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,-81,-88,-89,-91,-93,-94,-70,-79,696,-92,]),'R_CONSTRAINT':([81,83,84,85,86,87,172,204,205,301,460,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,543,544,545,546,547,548,549,552,556,557,559,560,561,562,563,564,565,566,567,568,569,570,623,624,625,626,628,629,632,669,704,],[-126,-128,-129,-130,-131,-132,-127,317,319,317,317,-53,317,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,317,-82,-83,-84,-85,-86,-87,-90,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,-81,-88,-89,-91,-93,-94,-70,-79,-92,]),'R_UNIQUE':([81,83,84,85,86,87,172,204,301,315,404,460,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,543,544,545,546,547,548,549,552,553,556,557,559,560,561,562,563,564,565,566,567,568,569,570,623,624,625,626,628,629,632,669,704,],[-126,-128,-129,-130,-131,-132,-127,-50,388,400,-49,388,-53,-50,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,-50,-82,-83,-84,-85,-86,-87,-90,626,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,-81,-88,-89,-91,-93,-94,-70,-79,-92,]),'R_CHECK':([81,83,84,85,86,87,172,204,301,315,387,404,460,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,543,544,545,546,547,548,549,552,553,556,557,559,560,561,562,563,564,565,566,567,568,569,570,623,624,625,626,628,629,632,669,704,],[-126,-128,-129,-130,-131,-132,-127,-50,-50,401,401,-49,-50,-53,-50,-54,-55,-56,-57,-59,-60,-61,-62,-63,-64,-80,-80,-80,-80,-80,-78,-50,-82,-83,-84,-85,-86,-87,-90,627,-58,-65,-66,-67,-68,-80,-69,-71,-72,-73,-74,-75,-76,-77,-81,-88,-89,-91,-93,-94,-70,-79,-92,]),'R_RENAME':([114,115,116,117,118,309,],[199,-14,-15,-16,206,206,]),'R_OWNER':([114,115,116,117,303,],[200,-14,-15,-16,390,]),'R_ADD':([115,116,117,118,309,],[-14,-15,-16,204,204,]),'R_ON':([115,116,117,127,215,231,423,424,507,],[-14,-15,-16,-287,-286,-223,-288,-222,605,]),'R_USING':([115,116,117,127,215,231,423,424,507,],[-14,-15,-16,-287,-286,-223,-288,-222,606,]),'R_MODE':([115,116,117,303,389,483,484,574,575,],[-14,-15,-16,-32,482,-28,-29,-30,-31,]),'R_VALUES':([122,210,409,],[-336,323,-335,]),'R_UNKNOWN':([155,163,261,276,],[265,275,357,369,]),'R_SYMMETRIC':([156,],[267,]),'R_YEAR':([184,479,],[292,565,]),'R_MONTH':([184,479,],[293,566,]),'R_DAY':([184,479,],[294,567,]),'R_HOUR':([184,479,],[295,568,]),'R_MINUTE':([184,479,],[296,569,]),'R_SECOND':([184,479,],[297,570,]),'R_TO':([199,200,407,],[305,306,494,]),'R_COLUMN':([201,204,205,206,],[308,311,320,322,]),'R_FOREIGN':([204,301,315,387,404,460,],[-50,-50,402,402,-49,-50,]),'R_JOIN':([224,226,227,228,229,337,338,339,340,],[336,-301,-302,-304,-306,425,-303,-305,-307,]),'R_OUTER':([227,228,229,],[338,339,340,]),'R_HAVING':([231,424,502,503,504,653,654,],[-223,-222,603,-314,-315,-312,-313,]),'R_ASC':([231,424,599,600,],[-223,-222,650,650,]),'R_DESC':([231,424,599,600,],[-223,-222,651,651,]),'R_ENUM':([304,],[391,]),'R_CURRENT_USER':([306,],[395,]),'R_SESSION_USER':([306,],[396,]),'R_KEY':([316,402,554,],[403,492,628,]),'R_BY':([333,420,],[421,501,]),'T_DATE':([378,382,399,488,],[455,472,472,472,]),'T_TIME':([378,382,399,488,],[456,473,473,473,]),'T_SMALLINT':([382,399,488,],[463,463,463,]),'T_INTEGER':([382,399,488,],[464,464,464,]),'T_BIGINT':([382,399,488,],[465,465,465,]),'T_REAL':([382,399,488,],[466,466,466,]),'T_DOUBLE':([382,399,488,],[467,467,467,]),'T_MONEY':([382,399,488,],[468,468,468,]),'T_TEXT':([382,399,488,],[469,469,469,]),'T_BOOLEAN':([382,399,488,],[470,470,470,]),'T_DECIMAL':([382,399,488,],[474,474,474,]),'T_NUMERIC':([382,399,488,],[475,475,475,]),'T_VARCHAR':([382,399,488,],[476,476,476,]),'T_CHARACTER':([382,399,488,],[477,477,477,]),'T_CHAR':([382,399,488,],[478,478,478,]),'R_INHERITS':([459,],[540,]),'T_PRECISION':([467,],[556,]),'T_VARYING':([477,],[562,]),'R_OFFSET':([499,500,],[595,595,]),'R_FIRST':([682,],[697,]),'R_LAST':([682,],[698,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'stmtList':([0,],[2,]),'stmt':([0,2,],[3,25,]),'createStmt':([0,2,],[4,4,]),'showStmt':([0,2,],[5,5,]),'alterStmt':([0,2,],[6,6,]),'dropStmt':([0,2,],[7,7,]),'insertStmt':([0,2,],[8,8,]),'updateStmt':([0,2,],[9,9,]),'deleteStmt':([0,2,],[10,10,]),'truncateStmt':([0,2,],[11,11,]),'useStmt':([0,2,],[12,12,]),'selectStmt':([0,2,19,54,69,103,105,106,164,186,243,345,347,348,349,350,351,364,365,366,441,442,443,444,518,519,520,521,609,619,658,660,666,],[13,13,51,128,165,190,191,192,51,299,344,428,430,431,432,433,434,447,448,449,522,523,524,525,611,612,613,614,659,665,686,688,690,]),'createBody':([14,],[39,]),'createOpts':([14,],[40,]),'orReplace':([14,],[42,]),'fromBody':([20,56,218,],[52,132,330,]),'fromCl':([21,61,134,],[55,135,219,]),'tableOpt':([22,],[57,]),'selectParams':([24,60,],[61,134,]),'selectList':([24,60,],[63,63,]),'selectListParams':([24,60,136,],[64,64,230,]),'expresion':([24,60,136,],[65,65,65,]),'datatype':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[67,67,166,169,173,179,179,67,235,236,237,238,239,240,241,242,246,251,253,255,257,258,266,179,179,166,281,179,166,287,289,290,346,363,413,426,435,445,235,510,517,527,235,179,179,]),'expBool':([24,60,69,79,130,136,160,161,164,176,178,603,605,],[68,68,167,177,217,68,271,272,167,285,167,655,656,]),'columnName':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,336,343,352,362,377,408,421,425,429,436,446,486,501,602,603,605,648,657,700,],[73,73,73,170,170,73,73,73,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,73,73,73,170,73,73,170,170,170,170,170,170,423,170,170,170,452,170,503,508,170,170,170,170,599,653,73,73,599,684,708,]),'literal':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,284,328,343,352,362,372,408,429,436,446,486,550,558,603,605,670,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,371,74,74,74,74,450,74,74,74,74,74,624,631,74,74,693,]),'funcCall':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'extract':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'datePart':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'current':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,408,429,436,446,486,603,605,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'boolean':([24,60,69,79,130,136,160,161,164,176,178,603,605,],[80,80,80,80,80,80,80,80,80,80,80,80,80,]),'timeStamp':([24,60,69,70,71,79,130,136,139,140,141,142,143,144,145,146,149,150,151,152,153,154,156,160,161,164,171,176,178,181,182,183,245,267,328,343,352,362,377,408,429,436,446,486,603,605,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,451,93,93,93,93,93,93,93,]),'expComp':([24,60,69,79,130,136,160,161,164,176,178,603,605,],[98,98,98,98,98,98,98,98,98,98,98,98,98,]),'expSubq':([24,60,69,79,130,136,160,161,164,176,178,603,605,],[99,99,99,99,99,99,99,99,99,99,99,99,99,]),'stringExp':([24,60,69,79,130,136,160,161,164,176,178,603,605,],[102,102,102,102,102,102,102,102,102,102,102,102,102,]),'allOpt':([36,37,38,],[103,105,106,]),'ifNotExists':([41,43,109,],[107,110,195,]),'likeOpt':([45,],[112,]),'idOrString':([46,47,53,64,107,119,121,126,195,230,305,306,329,423,508,],[114,118,127,127,193,207,209,215,303,127,392,394,415,127,127,]),'ifExists':([48,49,],[119,121,]),'optAlias':([53,64,230,423,508,],[125,137,341,507,607,]),'whereCl':([55,135,212,219,221,],[129,220,326,331,334,]),'tableExp':([56,],[131,]),'optBoolPredicate':([68,167,177,217,271,272,285,655,656,],[162,162,162,162,162,162,162,162,162,]),'caseList':([72,],[174,]),'caseWhen':([72,174,],[175,283,]),'alterDb':([114,],[198,]),'alterTableList':([118,],[202,]),'alterTable':([118,309,],[203,398,]),'paramsColumn':([122,],[210,]),'updateCols':([124,],[212,]),'updateVals':([124,327,],[213,411,]),'joinList':([135,],[221,]),'joinList2':([135,],[222,]),'joinCl':([135,222,],[223,335,]),'joinOpt':([135,222,225,],[224,224,337,]),'paramsList':([139,408,486,],[233,495,576,]),'subqValues':([149,150,151,152,154,157,158,159,262,263,264,265,354,355,356,357,435,445,510,517,527,],[247,252,254,256,259,268,269,270,358,359,360,361,437,438,439,440,516,526,608,610,620,]),'optElse':([174,],[282,]),'optsExtract':([184,],[291,]),'alterAlter':([201,],[307,]),'alterAdd':([204,],[310,]),'createConstraint':([204,301,460,],[312,383,383,]),'createPrimary':([204,301,460,],[313,385,385,]),'createForeign':([204,301,460,],[314,386,386,]),'constrName':([204,301,460,462,543,],[315,387,387,553,553,]),'alterDrop':([205,],[318,]),'alterRename':([206,],[321,]),'idList':([211,480,493,590,710,],[324,571,591,645,711,]),'groupByCl':([220,331,334,],[332,416,422,]),'createTableList':([301,],[380,]),'createTable':([301,460,],[381,541,]),'createUnique':([301,460,],[384,384,]),'createOwner':([303,],[389,]),'ownerOPts':([306,],[393,]),'updateExp':([328,],[412,]),'limitCl':([332,416,418,422,505,],[417,497,498,506,604,]),'orderByCl':([332,422,],[418,505,]),'dateSource':([378,],[453,]),'types':([382,399,488,],[462,489,579,]),'createMode':([389,],[481,]),'groupList':([421,],[502,]),'inheritsOpt':([459,],[539,]),'createColumns':([462,],[542,]),'colOptionsList':([462,],[543,]),'colOptions':([462,543,],[544,623,]),'defaultVal':([462,487,543,],[545,578,545,]),'nullOpt':([462,487,543,],[546,577,546,]),'constraintOpt':([462,543,],[547,547,]),'primaryOpt':([462,543,],[548,548,]),'referencesOpt':([462,543,],[549,549,]),'optParams':([474,475,476,477,478,562,],[557,559,560,561,563,632,]),'intervalFields':([479,],[564,]),'booleanCheck':([491,668,],[581,692,]),'idOrLiteral':([491,638,639,640,641,642,643,668,694,706,],[582,671,672,673,674,675,676,582,705,709,]),'offsetLimit':([499,500,],[594,596,]),'orderList':([501,],[597,]),'orderByElem':([501,648,],[598,680,]),'havingCl':([502,],[601,]),'literalList':([558,],[630,]),'orderOpts':([599,600,],[649,652,]),'orderNull':([649,652,],[681,683,]),'nameList':([657,],[685,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> stmtList','init',1,'p_init','grammar.py',54),
  ('stmtList -> stmtList stmt','stmtList',2,'p_stmt_list','grammar.py',62),
  ('stmtList -> stmt','stmtList',1,'p_stmt_u','grammar.py',69),
  ('stmt -> createStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',76),
  ('stmt -> showStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',77),
  ('stmt -> alterStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',78),
  ('stmt -> dropStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',79),
  ('stmt -> insertStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',80),
  ('stmt -> updateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',81),
  ('stmt -> deleteStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',82),
  ('stmt -> truncateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',83),
  ('stmt -> useStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',84),
  ('stmt -> selectStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',85),
  ('idOrString -> ID','idOrString',1,'p_id_string','grammar.py',99),
  ('idOrString -> STRING','idOrString',1,'p_id_string','grammar.py',100),
  ('idOrString -> CHARACTER','idOrString',1,'p_id_string','grammar.py',101),
  ('createStmt -> R_CREATE createBody','createStmt',2,'p_createstmt','grammar.py',108),
  ('createBody -> createOpts','createBody',1,'p_createbody','grammar.py',115),
  ('createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt','createOpts',7,'p_createopts_table','grammar.py',122),
  ('createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode','createOpts',6,'p_createopts_db','grammar.py',129),
  ('orReplace -> R_OR R_REPLACE','orReplace',2,'p_replace_true','grammar.py',137),
  ('orReplace -> <empty>','orReplace',0,'p_replace_false','grammar.py',145),
  ('createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER','createOpts',8,'p_createopts_type','grammar.py',153),
  ('ifNotExists -> R_IF R_NOT R_EXISTS','ifNotExists',3,'p_ifnotexists_true','grammar.py',161),
  ('ifNotExists -> <empty>','ifNotExists',0,'p_ifnotexists_false','grammar.py',169),
  ('inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER','inheritsOpt',4,'p_inheritsOpt','grammar.py',177),
  ('inheritsOpt -> <empty>','inheritsOpt',0,'p_inheritsOpt_none','grammar.py',185),
  ('createOwner -> R_OWNER ID','createOwner',2,'p_createowner','grammar.py',193),
  ('createOwner -> R_OWNER STRING','createOwner',2,'p_createowner','grammar.py',194),
  ('createOwner -> R_OWNER S_IGUAL ID','createOwner',3,'p_createowner_asg','grammar.py',202),
  ('createOwner -> R_OWNER S_IGUAL STRING','createOwner',3,'p_createowner_asg','grammar.py',203),
  ('createOwner -> <empty>','createOwner',0,'p_createowner_none','grammar.py',211),
  ('createMode -> R_MODE INTEGER','createMode',2,'p_createmode','grammar.py',219),
  ('createMode -> R_MODE S_IGUAL INTEGER','createMode',3,'p_createMode_asg','grammar.py',227),
  ('createMode -> <empty>','createMode',0,'p_createmode_none','grammar.py',235),
  ('createTableList -> createTableList S_COMA createTable','createTableList',3,'p_createtable_list','grammar.py',242),
  ('createTableList -> createTable','createTableList',1,'p_createtable_u','grammar.py',249),
  ('createTable -> ID types createColumns','createTable',3,'p_createTable_id','grammar.py',256),
  ('createTable -> createConstraint','createTable',1,'p_createTable','grammar.py',264),
  ('createTable -> createUnique','createTable',1,'p_createTable','grammar.py',265),
  ('createTable -> createPrimary','createTable',1,'p_createTable','grammar.py',266),
  ('createTable -> createForeign','createTable',1,'p_createTable','grammar.py',267),
  ('createColumns -> colOptionsList','createColumns',1,'p_createColumNs','grammar.py',275),
  ('createColumns -> <empty>','createColumns',0,'p_createColumNs_none','grammar.py',283),
  ('createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','createConstraint',5,'p_createConstraint','grammar.py',290),
  ('createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER','createUnique',4,'p_createUnique','grammar.py',296),
  ('createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER','createPrimary',5,'p_createPrimary','grammar.py',302),
  ('createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER','createForeign',11,'p_createForeign','grammar.py',309),
  ('constrName -> R_CONSTRAINT ID','constrName',2,'p_constrName','grammar.py',317),
  ('constrName -> <empty>','constrName',0,'p_constrName_none','grammar.py',325),
  ('idList -> idList S_COMA ID','idList',3,'p_id_list','grammar.py',332),
  ('idList -> ID','idList',1,'p_id_u','grammar.py',339),
  ('types -> ID','types',1,'p_types','grammar.py',346),
  ('types -> T_SMALLINT','types',1,'p_types_simple','grammar.py',354),
  ('types -> T_INTEGER','types',1,'p_types_simple','grammar.py',355),
  ('types -> T_BIGINT','types',1,'p_types_simple','grammar.py',356),
  ('types -> T_REAL','types',1,'p_types_simple','grammar.py',357),
  ('types -> T_DOUBLE T_PRECISION','types',2,'p_types_simple','grammar.py',358),
  ('types -> T_MONEY','types',1,'p_types_simple','grammar.py',359),
  ('types -> T_TEXT','types',1,'p_types_simple','grammar.py',360),
  ('types -> T_BOOLEAN','types',1,'p_types_simple','grammar.py',361),
  ('types -> R_TIMESTAMP','types',1,'p_types_simple','grammar.py',362),
  ('types -> T_DATE','types',1,'p_types_simple','grammar.py',363),
  ('types -> T_TIME','types',1,'p_types_simple','grammar.py',364),
  ('types -> T_DECIMAL optParams','types',2,'p_types_params','grammar.py',373),
  ('types -> T_NUMERIC optParams','types',2,'p_types_params','grammar.py',374),
  ('types -> T_VARCHAR optParams','types',2,'p_types_params','grammar.py',375),
  ('types -> T_CHARACTER optParams','types',2,'p_types_params','grammar.py',376),
  ('types -> T_CHAR optParams','types',2,'p_types_params','grammar.py',377),
  ('types -> T_CHARACTER T_VARYING optParams','types',3,'p_types_var','grammar.py',385),
  ('types -> R_INTERVAL intervalFields','types',2,'p_timeType_interval','grammar.py',393),
  ('intervalFields -> R_YEAR','intervalFields',1,'p_intervalFields','grammar.py',401),
  ('intervalFields -> R_MONTH','intervalFields',1,'p_intervalFields','grammar.py',402),
  ('intervalFields -> R_DAY','intervalFields',1,'p_intervalFields','grammar.py',403),
  ('intervalFields -> R_HOUR','intervalFields',1,'p_intervalFields','grammar.py',404),
  ('intervalFields -> R_MINUTE','intervalFields',1,'p_intervalFields','grammar.py',405),
  ('intervalFields -> R_SECOND','intervalFields',1,'p_intervalFields','grammar.py',406),
  ('intervalFields -> <empty>','intervalFields',0,'p_intervalFields_none','grammar.py',414),
  ('optParams -> S_PARIZQ literalList S_PARDER','optParams',3,'p_optParams','grammar.py',421),
  ('optParams -> <empty>','optParams',0,'p_optParams_none','grammar.py',427),
  ('colOptionsList -> colOptionsList colOptions','colOptionsList',2,'p_colOptions_list','grammar.py',433),
  ('colOptionsList -> colOptions','colOptionsList',1,'p_colOptions_u','grammar.py',440),
  ('colOptions -> defaultVal','colOptions',1,'p_colOptions','grammar.py',447),
  ('colOptions -> nullOpt','colOptions',1,'p_colOptions','grammar.py',448),
  ('colOptions -> constraintOpt','colOptions',1,'p_colOptions','grammar.py',449),
  ('colOptions -> primaryOpt','colOptions',1,'p_colOptions','grammar.py',450),
  ('colOptions -> referencesOpt','colOptions',1,'p_colOptions','grammar.py',451),
  ('defaultVal -> R_DEFAULT literal','defaultVal',2,'p_defaultVal','grammar.py',459),
  ('nullOpt -> R_NOT R_NULL','nullOpt',2,'p_nullOpt_true','grammar.py',466),
  ('nullOpt -> R_NULL','nullOpt',1,'p_nullOpt_false','grammar.py',474),
  ('constraintOpt -> constrName R_UNIQUE','constraintOpt',2,'p_constraintOpt_unique','grammar.py',485),
  ('constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','constraintOpt',5,'p_constraintOpt_check','grammar.py',493),
  ('primaryOpt -> R_PRIMARY R_KEY','primaryOpt',2,'p_primaryOpt','grammar.py',500),
  ('referencesOpt -> R_REFERENCES ID','referencesOpt',2,'p_referencesOpt','grammar.py',506),
  ('expresion -> datatype','expresion',1,'p_expresion','grammar.py',518),
  ('expresion -> expBool','expresion',1,'p_expresion','grammar.py',519),
  ('expresion -> S_PARIZQ selectStmt S_PARDER','expresion',3,'p_expresion_','grammar.py',527),
  ('funcCall -> ID S_PARIZQ paramsList S_PARDER','funcCall',4,'p_funcCall_1','grammar.py',535),
  ('funcCall -> ID S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',543),
  ('funcCall -> R_NOW S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',544),
  ('funcCall -> R_COUNT S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',552),
  ('funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',553),
  ('funcCall -> R_SUM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',554),
  ('funcCall -> R_PROM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',555),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER','extract',6,'p_extract_1','grammar.py',565),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER','extract',6,'p_extract_2','grammar.py',576),
  ('timeStamp -> R_TIMESTAMP STRING','timeStamp',2,'p_timeStamp','grammar.py',586),
  ('timeStamp -> R_INTERVAL STRING','timeStamp',2,'p_timeStamp','grammar.py',587),
  ('optsExtract -> R_YEAR','optsExtract',1,'p_optsExtract','grammar.py',595),
  ('optsExtract -> R_MONTH','optsExtract',1,'p_optsExtract','grammar.py',596),
  ('optsExtract -> R_DAY','optsExtract',1,'p_optsExtract','grammar.py',597),
  ('optsExtract -> R_HOUR','optsExtract',1,'p_optsExtract','grammar.py',598),
  ('optsExtract -> R_MINUTE','optsExtract',1,'p_optsExtract','grammar.py',599),
  ('optsExtract -> R_SECOND','optsExtract',1,'p_optsExtract','grammar.py',600),
  ('datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER','datePart',6,'p_datePart','grammar.py',608),
  ('dateSource -> R_TIMESTAMP STRING','dateSource',2,'p_dateSource','grammar.py',618),
  ('dateSource -> T_DATE STRING','dateSource',2,'p_dateSource','grammar.py',619),
  ('dateSource -> T_TIME STRING','dateSource',2,'p_dateSource','grammar.py',620),
  ('dateSource -> R_INTERVAL STRING','dateSource',2,'p_dateSource','grammar.py',621),
  ('dateSource -> R_NOW S_PARIZQ S_PARDER','dateSource',3,'p_dateSource','grammar.py',622),
  ('current -> R_CURRENT_DATE','current',1,'p_current','grammar.py',630),
  ('current -> R_CURRENT_TIME','current',1,'p_current','grammar.py',631),
  ('current -> timeStamp','current',1,'p_current_1','grammar.py',640),
  ('literalList -> literalList S_COMA literal','literalList',3,'p_literal_list','grammar.py',647),
  ('literalList -> literal','literalList',1,'p_literal_u','grammar.py',654),
  ('literal -> INTEGER','literal',1,'p_literal','grammar.py',661),
  ('literal -> STRING','literal',1,'p_literal','grammar.py',662),
  ('literal -> DECIMAL','literal',1,'p_literal','grammar.py',663),
  ('literal -> CHARACTER','literal',1,'p_literal','grammar.py',664),
  ('literal -> R_TRUE','literal',1,'p_literal','grammar.py',665),
  ('literal -> R_FALSE','literal',1,'p_literal','grammar.py',666),
  ('literal -> R_NULL','literal',1,'p_literal','grammar.py',667),
  ('paramsList -> paramsList S_COMA datatype','paramsList',3,'p_params_list','grammar.py',686),
  ('paramsList -> datatype','paramsList',1,'p_params_u','grammar.py',693),
  ('datatype -> datatype O_SUMA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',700),
  ('datatype -> datatype O_RESTA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',701),
  ('datatype -> datatype O_PRODUCTO datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',702),
  ('datatype -> datatype O_DIVISION datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',703),
  ('datatype -> datatype O_EXPONENTE datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',704),
  ('datatype -> datatype O_MODULAR datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',705),
  ('datatype -> datatype OC_CONCATENAR datatype','datatype',3,'p_datatype_operadores_binarios2','grammar.py',714),
  ('datatype -> R_CASE caseList optElse R_END','datatype',4,'p_datatype_case_when','grammar.py',722),
  ('caseList -> caseList caseWhen','caseList',2,'p_case_list','grammar.py',728),
  ('caseList -> caseWhen','caseList',1,'p_case_list','grammar.py',729),
  ('caseWhen -> R_WHEN expBool R_THEN literal','caseWhen',4,'p_caseWhen','grammar.py',734),
  ('optElse -> R_ELSE literal','optElse',2,'p_caseWhen_2','grammar.py',738),
  ('optElse -> <empty>','optElse',0,'p_caseWhen_2','grammar.py',739),
  ('datatype -> O_RESTA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',745),
  ('datatype -> O_SUMA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',746),
  ('datatype -> columnName','datatype',1,'p_datatype_operandos','grammar.py',754),
  ('datatype -> literal','datatype',1,'p_datatype_operandos','grammar.py',755),
  ('datatype -> funcCall','datatype',1,'p_datatype_operandos','grammar.py',756),
  ('datatype -> extract','datatype',1,'p_datatype_operandos','grammar.py',757),
  ('datatype -> datePart','datatype',1,'p_datatype_operandos','grammar.py',758),
  ('datatype -> current','datatype',1,'p_datatype_operandos','grammar.py',759),
  ('datatype -> S_PARIZQ datatype S_PARDER','datatype',3,'p_datatype_agrupacion','grammar.py',767),
  ('expComp -> datatype OL_MENORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',775),
  ('expComp -> datatype OL_MAYORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',776),
  ('expComp -> datatype OL_MAYORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',777),
  ('expComp -> datatype OL_MENORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',778),
  ('expComp -> datatype S_IGUAL datatype','expComp',3,'p_expCompBinario_1','grammar.py',779),
  ('expComp -> datatype OL_DISTINTODE datatype','expComp',3,'p_expCompBinario_1','grammar.py',780),
  ('expComp -> datatype R_IS R_DISTINCT R_FROM datatype','expComp',5,'p_expCompBinario_2','grammar.py',788),
  ('expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype','expComp',6,'p_expCompBinario_3','grammar.py',798),
  ('expComp -> datatype R_BETWEEN datatype R_AND datatype','expComp',5,'p_expComp_ternario_1','grammar.py',808),
  ('expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',818),
  ('expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',819),
  ('expComp -> datatype R_ISNULL','expComp',2,'p_expComp_unario_1','grammar.py',830),
  ('expComp -> datatype R_NOTNULL','expComp',2,'p_expComp_unario_1','grammar.py',831),
  ('expComp -> datatype R_IS R_NULL','expComp',3,'p_expComp_unario_2','grammar.py',840),
  ('expComp -> datatype R_IS R_TRUE','expComp',3,'p_expComp_unario_2','grammar.py',841),
  ('expComp -> datatype R_IS R_FALSE','expComp',3,'p_expComp_unario_2','grammar.py',842),
  ('expComp -> datatype R_IS R_UNKNOWN','expComp',3,'p_expComp_unario_2','grammar.py',843),
  ('expComp -> datatype R_IS R_NOT R_NULL','expComp',4,'p_expComp_unario_3','grammar.py',851),
  ('expComp -> datatype R_IS R_NOT R_TRUE','expComp',4,'p_expComp_unario_3','grammar.py',852),
  ('expComp -> datatype R_IS R_NOT R_FALSE','expComp',4,'p_expComp_unario_3','grammar.py',853),
  ('expComp -> datatype R_IS R_NOT R_UNKNOWN','expComp',4,'p_expComp_unario_3','grammar.py',854),
  ('expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',864),
  ('expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',865),
  ('expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',866),
  ('expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',867),
  ('expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',868),
  ('expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',869),
  ('expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',870),
  ('expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',871),
  ('expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',872),
  ('expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',873),
  ('expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',874),
  ('expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',875),
  ('expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',876),
  ('expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',877),
  ('expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',878),
  ('expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',879),
  ('expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',880),
  ('expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',881),
  ('expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',882),
  ('expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',883),
  ('expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',884),
  ('expSubq -> stringExp R_LIKE STRING','expSubq',3,'p_expSubq','grammar.py',885),
  ('stringExp -> STRING','stringExp',1,'p_stringExp','grammar.py',892),
  ('stringExp -> columnName','stringExp',1,'p_stringExp','grammar.py',893),
  ('subqValues -> R_ALL','subqValues',1,'p_subqValues','grammar.py',900),
  ('subqValues -> R_ANY','subqValues',1,'p_subqValues','grammar.py',901),
  ('subqValues -> R_SOME','subqValues',1,'p_subqValues','grammar.py',902),
  ('boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER','boolean',4,'p_boolean_1','grammar.py',909),
  ('boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER','boolean',5,'p_boolean_2','grammar.py',919),
  ('boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER','boolean',6,'p_boolean_3','grammar.py',927),
  ('boolean -> expComp','boolean',1,'p_boolean_4','grammar.py',935),
  ('boolean -> expSubq','boolean',1,'p_boolean_4','grammar.py',936),
  ('expBool -> expBool R_AND expBool','expBool',3,'p_expBool_1','grammar.py',944),
  ('expBool -> expBool R_OR expBool','expBool',3,'p_expBool_1','grammar.py',945),
  ('expBool -> R_NOT expBool','expBool',2,'p_expBool_2','grammar.py',953),
  ('expBool -> S_PARIZQ expBool S_PARDER','expBool',3,'p_expBool_3','grammar.py',961),
  ('expBool -> expBool optBoolPredicate','expBool',2,'p_expBool_5','grammar.py',969),
  ('expBool -> boolean','expBool',1,'p_expBool_4','grammar.py',977),
  ('optBoolPredicate -> R_IS R_TRUE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',985),
  ('optBoolPredicate -> R_IS R_FALSE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',986),
  ('optBoolPredicate -> R_IS R_UNKNOWN','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',987),
  ('optBoolPredicate -> R_IS R_NOT R_TRUE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',995),
  ('optBoolPredicate -> R_IS R_NOT R_FALSE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',996),
  ('optBoolPredicate -> R_IS R_NOT R_UNKNOWN','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',997),
  ('columnName -> ID','columnName',1,'p_columnName_id','grammar.py',1005),
  ('columnName -> ID S_PUNTO ID','columnName',3,'p_columnName_table_id','grammar.py',1014),
  ('booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1032),
  ('booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1033),
  ('booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1034),
  ('booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1035),
  ('booleanCheck -> idOrLiteral S_IGUAL idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1036),
  ('booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1037),
  ('booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral','booleanCheck',5,'p_booleanCheck_2','grammar.py',1047),
  ('booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral','booleanCheck',6,'p_booleanCheck_3','grammar.py',1059),
  ('idOrLiteral -> ID','idOrLiteral',1,'p_idOrLiteral','grammar.py',1070),
  ('idOrLiteral -> INTEGER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1071),
  ('idOrLiteral -> STRING','idOrLiteral',1,'p_idOrLiteral','grammar.py',1072),
  ('idOrLiteral -> DECIMAL','idOrLiteral',1,'p_idOrLiteral','grammar.py',1073),
  ('idOrLiteral -> CHARACTER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1074),
  ('idOrLiteral -> R_TRUE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1075),
  ('idOrLiteral -> R_FALSE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1076),
  ('alterStmt -> R_ALTER R_DATABASE idOrString alterDb','alterStmt',4,'p_alterStmt','grammar.py',1105),
  ('alterStmt -> R_ALTER R_TABLE idOrString alterTableList','alterStmt',4,'p_alterStmt','grammar.py',1106),
  ('alterDb -> R_RENAME R_TO idOrString','alterDb',3,'p_alterDb','grammar.py',1116),
  ('alterDb -> R_OWNER R_TO ownerOPts','alterDb',3,'p_alterDb','grammar.py',1117),
  ('ownerOPts -> idOrString','ownerOPts',1,'p_ownerOpts','grammar.py',1126),
  ('ownerOPts -> R_CURRENT_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1127),
  ('ownerOPts -> R_SESSION_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1128),
  ('alterTableList -> alterTableList S_COMA alterTable','alterTableList',3,'p_alterTableList','grammar.py',1136),
  ('alterTableList -> alterTable','alterTableList',1,'p_alterTableList_u','grammar.py',1145),
  ('alterTable -> R_ADD alterAdd','alterTable',2,'p_alterTable','grammar.py',1153),
  ('alterTable -> R_ALTER alterAlter','alterTable',2,'p_alterTable','grammar.py',1154),
  ('alterTable -> R_DROP alterDrop','alterTable',2,'p_alterTable','grammar.py',1155),
  ('alterTable -> R_RENAME alterRename','alterTable',2,'p_alterTable','grammar.py',1156),
  ('alterAdd -> R_COLUMN ID types','alterAdd',3,'p_alterAdd_column','grammar.py',1164),
  ('alterAdd -> createConstraint','alterAdd',1,'p_alterAdd_constraint','grammar.py',1172),
  ('alterAdd -> createPrimary','alterAdd',1,'p_alterAdd_constraint','grammar.py',1173),
  ('alterAdd -> createForeign','alterAdd',1,'p_alterAdd_constraint','grammar.py',1174),
  ('alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER','alterAdd',5,'p_alterAdd_unique','grammar.py',1182),
  ('alterAlter -> R_COLUMN ID R_SET nullOpt','alterAlter',4,'p_alterAlter','grammar.py',1190),
  ('alterAlter -> R_COLUMN ID R_SET defaultVal','alterAlter',4,'p_alterAlter','grammar.py',1191),
  ('alterAlter -> R_COLUMN ID R_TYPE types','alterAlter',4,'p_alterAlter','grammar.py',1192),
  ('alterDrop -> R_CONSTRAINT ID','alterDrop',2,'p_alterDrop','grammar.py',1200),
  ('alterDrop -> R_COLUMN ID','alterDrop',2,'p_alterDrop','grammar.py',1201),
  ('alterRename -> R_COLUMN ID R_TO ID','alterRename',4,'p_alterRename','grammar.py',1209),
  ('dropStmt -> R_DROP R_TABLE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1227),
  ('dropStmt -> R_DROP R_DATABASE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1228),
  ('ifExists -> R_IF R_EXISTS','ifExists',2,'p_ifExists','grammar.py',1238),
  ('ifExists -> <empty>','ifExists',0,'p_ifExists','grammar.py',1239),
  ('selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt_1','grammar.py',1252),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl','selectStmt',6,'p_selectStmt_2','grammar.py',1269),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt__1','grammar.py',1285),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',7,'p_selectStmt__2','grammar.py',1290),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt__3','grammar.py',1295),
  ('selectStmt -> selectStmt R_UNION allOpt selectStmt','selectStmt',4,'p_selectStmt_union','grammar.py',1300),
  ('selectStmt -> selectStmt R_INTERSECT allOpt selectStmt','selectStmt',4,'p_selectStmt_intersect','grammar.py',1306),
  ('selectStmt -> selectStmt R_EXCEPT allOpt selectStmt','selectStmt',4,'p_selectStmt_except','grammar.py',1312),
  ('selectStmt -> S_PARIZQ selectStmt S_PARDER','selectStmt',3,'p_selectStmt_agrupacion','grammar.py',1318),
  ('fromCl -> R_FROM tableExp','fromCl',2,'p_fromClause','grammar.py',1325),
  ('selectStmt -> R_SELECT selectParams','selectStmt',2,'p_selectstmt_only_params','grammar.py',1337),
  ('allOpt -> R_ALL','allOpt',1,'p_allOpt','grammar.py',1346),
  ('allOpt -> <empty>','allOpt',0,'p_allOpt','grammar.py',1347),
  ('selectParams -> O_PRODUCTO','selectParams',1,'p_selectparams_all','grammar.py',1354),
  ('selectParams -> selectList','selectParams',1,'p_selectparams_params','grammar.py',1361),
  ('selectList -> selectList S_COMA selectListParams optAlias','selectList',4,'p_selectList_list','grammar.py',1369),
  ('selectList -> selectListParams optAlias','selectList',2,'p_selectList_u','grammar.py',1379),
  ('selectListParams -> expresion','selectListParams',1,'p_selectListParams_1','grammar.py',1388),
  ('selectListParams -> ID S_PUNTO O_PRODUCTO','selectListParams',3,'p_selectListParams_2','grammar.py',1395),
  ('optAlias -> R_AS idOrString','optAlias',2,'p_optalias_as','grammar.py',1402),
  ('optAlias -> idOrString','optAlias',1,'p_optalias_id','grammar.py',1410),
  ('optAlias -> <empty>','optAlias',0,'p_optalias_none','grammar.py',1417),
  ('tableExp -> tableExp S_COMA fromBody','tableExp',3,'p_tableexp_list','grammar.py',1423),
  ('tableExp -> fromBody','tableExp',1,'p_tableexp_u','grammar.py',1431),
  ('fromBody -> ID optAlias','fromBody',2,'p_fromBody','grammar.py',1437),
  ('fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString','fromBody',5,'p_tableexp_subq','grammar.py',1446),
  ('joinList -> joinList2','joinList',1,'p_joinList','grammar.py',1453),
  ('joinList2 -> joinList2 joinCl','joinList2',2,'p_joinList_2','grammar.py',1458),
  ('joinList2 -> joinCl','joinList2',1,'p_joinList_2','grammar.py',1459),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool','joinCl',6,'p_joinCl','grammar.py',1464),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER','joinCl',8,'p_joinCl','grammar.py',1465),
  ('joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias','joinCl',5,'p_joinCl','grammar.py',1466),
  ('nameList -> nameList S_COMA columnName','nameList',3,'p_nameList','grammar.py',1473),
  ('nameList -> columnName','nameList',1,'p_nameList','grammar.py',1474),
  ('joinOpt -> R_INNER','joinOpt',1,'p_joinOpt','grammar.py',1480),
  ('joinOpt -> R_LEFT','joinOpt',1,'p_joinOpt','grammar.py',1481),
  ('joinOpt -> R_LEFT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1482),
  ('joinOpt -> R_RIGHT','joinOpt',1,'p_joinOpt','grammar.py',1483),
  ('joinOpt -> R_RIGHT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1484),
  ('joinOpt -> R_FULL','joinOpt',1,'p_joinOpt','grammar.py',1485),
  ('joinOpt -> R_FULL R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1486),
  ('whereCl -> R_WHERE expBool','whereCl',2,'p_whereCl','grammar.py',1492),
  ('whereCl -> <empty>','whereCl',0,'p_whereCl_none','grammar.py',1501),
  ('groupByCl -> R_GROUP R_BY groupList havingCl','groupByCl',4,'p_groupByCl_1','grammar.py',1508),
  ('groupByCl -> <empty>','groupByCl',0,'p_groupByCl_2','grammar.py',1516),
  ('groupList -> groupList S_COMA columnName','groupList',3,'p_groupList_1','grammar.py',1524),
  ('groupList -> groupList S_COMA INTEGER','groupList',3,'p_groupList_1','grammar.py',1525),
  ('groupList -> columnName','groupList',1,'p_groupList_2','grammar.py',1534),
  ('groupList -> INTEGER','groupList',1,'p_groupList_2','grammar.py',1535),
  ('havingCl -> R_HAVING expBool','havingCl',2,'p_havingCl_1','grammar.py',1542),
  ('havingCl -> <empty>','havingCl',0,'p_havingCl_2','grammar.py',1548),
  ('orderByCl -> R_ORDER R_BY orderList','orderByCl',3,'p_orderByCl','grammar.py',1554),
  ('orderList -> orderList S_COMA orderByElem','orderList',3,'p_orderList','grammar.py',1559),
  ('orderList -> orderByElem','orderList',1,'p_orderList','grammar.py',1560),
  ('orderByElem -> columnName orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1567),
  ('orderByElem -> INTEGER orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1568),
  ('orderOpts -> R_ASC','orderOpts',1,'p_orderOpts','grammar.py',1574),
  ('orderOpts -> R_DESC','orderOpts',1,'p_orderOpts','grammar.py',1575),
  ('orderOpts -> <empty>','orderOpts',0,'p_orderOpts','grammar.py',1576),
  ('orderNull -> R_NULL R_FIRST','orderNull',2,'p_orderNull','grammar.py',1582),
  ('orderNull -> R_NULL R_LAST','orderNull',2,'p_orderNull','grammar.py',1583),
  ('orderNull -> <empty>','orderNull',0,'p_orderNull','grammar.py',1584),
  ('limitCl -> R_LIMIT INTEGER offsetLimit','limitCl',3,'p_limitCl','grammar.py',1590),
  ('limitCl -> R_LIMIT R_ALL offsetLimit','limitCl',3,'p_limitCl','grammar.py',1591),
  ('limitCl -> <empty>','limitCl',0,'p_limitCl_n','grammar.py',1598),
  ('offsetLimit -> R_OFFSET INTEGER','offsetLimit',2,'p_offsetLimit','grammar.py',1604),
  ('offsetLimit -> <empty>','offsetLimit',0,'p_offsetLimit_n','grammar.py',1610),
  ('insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER','insertStmt',8,'p_insertStmt','grammar.py',1623),
  ('paramsColumn -> S_PARIZQ idList S_PARDER','paramsColumn',3,'p_paramsColumn','grammar.py',1630),
  ('paramsColumn -> <empty>','paramsColumn',0,'p_paramsColumn_none','grammar.py',1636),
  ('updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl','updateStmt',5,'p_updateStmt','grammar.py',1650),
  ('updateCols -> updateCols S_COMA updateVals','updateCols',3,'p_updateCols_list','grammar.py',1660),
  ('updateCols -> updateVals','updateCols',1,'p_updateCols_u','grammar.py',1667),
  ('updateVals -> ID S_IGUAL updateExp','updateVals',3,'p_updateVals','grammar.py',1673),
  ('updateExp -> datatype','updateExp',1,'p_updateExp','grammar.py',1680),
  ('updateExp -> R_DEFAULT','updateExp',1,'p_updateExp','grammar.py',1681),
  ('deleteStmt -> R_DELETE fromCl whereCl','deleteStmt',3,'p_deleteStmt','grammar.py',1695),
  ('truncateStmt -> R_TRUNCATE tableOpt ID','truncateStmt',3,'p_truncateStmt','grammar.py',1701),
  ('tableOpt -> R_TABLE','tableOpt',1,'p_tableOpt','grammar.py',1707),
  ('tableOpt -> <empty>','tableOpt',0,'p_tableOpt','grammar.py',1708),
  ('showStmt -> R_SHOW R_DATABASES likeOpt','showStmt',3,'p_showStmt','grammar.py',1714),
  ('likeOpt -> R_LIKE STRING','likeOpt',2,'p_likeOpt','grammar.py',1721),
  ('likeOpt -> <empty>','likeOpt',0,'p_likeOpt','grammar.py',1722),
  ('useStmt -> R_USE ID','useStmt',2,'p_useStmt','grammar.py',1732),
]
