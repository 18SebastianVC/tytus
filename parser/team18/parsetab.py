
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN CADENA1 CADENA2 COMA CONSTRAINT CREATE DATABASE DECIMAL DEFAULT DELETE DESIGUAL DESIGUAL2 ENTERO EXISTS FOREIGN FROM ID IF IGUAL INHERITS INSERT INTO KEY MAYOR MAYORIGUAL MENOR MENORIGUAL MODE NOT NULL OR OWNER PAR_A PAR_C PRIMARY PTCOMA PUNTO REFERENCES REPLACE SET TABLE UNIQUE UPDATE VALUES WHERE bigint decimal double integer money numeric precision real smallintinicio : sentenciassentencias : sentencias PTCOMA sentencia\n                   | sentencia \n                   | PTCOMAsentencia : sentencia_ddl \n                 | sentencia_dmlsentencia_ddl : crearsentencia_dml : insertar\n                      | actualizar\n                      | eliminarinsertar : INSERT INTO ID VALUES PAR_A lista_exp PAR_Cactualizar : UPDATE ID SET exp WHERE expeliminar : DELETE FROM ID WHERE explista_exp : lista_exp COMA exp  \n                  | expexp : exp_log\n            | exp_rel\n            | exp_ar\n            | Eexp_log : NOT E\n                | E AND E  \n                | E OR Eexp_rel : E IGUAL E\n                | E DESIGUAL E\n                | E DESIGUAL2 E \n                | E MAYORIGUAL E\n                | E MENORIGUAL E\n                | E MAYOR E\n                | E MENOR Eexp_ar : E : ENTERO\n          | DECIMAL\n          | CADENA1\n          | CADENA2\n          | IDcrear : CREATE reemplazar DATABASE verificacion ID propietario modo\n              | CREATE TABLE ID PAR_A columnas PAR_C herenciareemplazar : OR REPLACE\n                   | emptyverificacion : IF NOT EXISTS\n                     | emptypropietario : OWNER valorowner\n                    | emptyvalorowner : ID\n                   | IGUAL IDmodo : MODE valormodo\n             | emptyvalormodo : ENTERO\n                  | IGUAL ENTEROherencia : INHERITS PAR_A ID PAR_C\n                 | emptycolumnas : columnas COMA columna\n                 | columnacolumna : ID tipo atributocolumn\n                | PRIMARY KEY PAR_A lnombres PAR_C\n                | FOREIGN KEY PAR_A lnombres PAR_C REFERENCES ID PAR_A lnombres PAR_Ctipo : smallint\n             | integer\n             | bigint\n             | decimal\n             | numeric\n             | real\n             | double precision\n             | moneyatributocolumn : atributocolumn atributo\n                       | atributoatributo : DEFAULT valoresdefault\n                 | CONSTRAINT ID\n                 | NOT\n                 | NULL\n                 | UNIQUE\n                 | PRIMARY KEY\n                 | emptyvaloresdefault : CADENA1\n                       | CADENA2\n                       | DECIMAL\n                       | ENTERO\n                       | BOOLEANlnombres : lnombres COMA ID\n                 | IDempty : '
    
_lr_action_items = {'PTCOMA':([0,2,3,4,5,6,7,8,9,10,23,35,37,38,39,40,42,43,44,45,46,47,55,65,66,67,69,80,86,87,88,89,90,91,92,93,94,95,96,98,99,100,112,114,118,120,121,123,138,143,],[3,15,-4,-3,-5,-6,-7,-8,-9,-10,-2,-35,-16,-17,-18,-19,-31,-32,-33,-34,-30,-81,-30,-20,-13,-81,-43,-81,-12,-21,-22,-23,-24,-25,-26,-27,-28,-29,-36,-47,-42,-44,-37,-51,-11,-46,-48,-45,-49,-50,]),'CREATE':([0,15,],[11,11,]),'INSERT':([0,15,],[12,12,]),'UPDATE':([0,15,],[13,13,]),'DELETE':([0,15,],[14,14,]),'$end':([1,2,3,4,5,6,7,8,9,10,23,35,37,38,39,40,42,43,44,45,46,47,55,65,66,67,69,80,86,87,88,89,90,91,92,93,94,95,96,98,99,100,112,114,118,120,121,123,138,143,],[0,-1,-4,-3,-5,-6,-7,-8,-9,-10,-2,-35,-16,-17,-18,-19,-31,-32,-33,-34,-30,-81,-30,-20,-13,-81,-43,-81,-12,-21,-22,-23,-24,-25,-26,-27,-28,-29,-36,-47,-42,-44,-37,-51,-11,-46,-48,-45,-49,-50,]),'TABLE':([11,],[17,]),'OR':([11,35,40,42,43,44,45,],[18,-35,57,-31,-32,-33,-34,]),'DATABASE':([11,16,19,26,],[-81,24,-39,-38,]),'INTO':([12,],[20,]),'ID':([13,17,20,22,24,28,30,32,33,41,46,54,55,56,57,58,59,60,61,62,63,64,68,70,81,101,105,116,117,119,133,141,145,147,],[21,25,27,29,-81,35,47,-41,49,35,35,35,35,35,35,35,35,35,35,35,35,35,100,-40,49,123,131,135,135,35,139,144,146,135,]),'FROM':([14,],[22,]),'REPLACE':([18,],[26,]),'SET':([21,],[28,]),'IF':([24,],[31,]),'PAR_A':([25,34,82,83,113,146,],[33,54,116,117,133,147,]),'VALUES':([27,],[34,]),'NOT':([28,31,46,54,55,71,72,73,74,75,76,77,79,102,103,106,107,108,110,111,119,124,125,126,127,128,129,130,131,132,],[41,48,41,41,41,106,-57,-58,-59,-60,-61,-62,-64,106,-66,-69,-70,-71,-73,-63,41,-65,-67,-74,-75,-76,-77,-78,-68,-72,]),'WHERE':([28,29,35,36,37,38,39,40,42,43,44,45,65,87,88,89,90,91,92,93,94,95,],[-30,46,-35,55,-16,-17,-18,-19,-31,-32,-33,-34,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'ENTERO':([28,41,46,54,55,56,57,58,59,60,61,62,63,64,97,104,119,122,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,121,129,42,138,]),'DECIMAL':([28,41,46,54,55,56,57,58,59,60,61,62,63,64,104,119,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,128,43,]),'CADENA1':([28,41,46,54,55,56,57,58,59,60,61,62,63,64,104,119,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,126,44,]),'CADENA2':([28,41,46,54,55,56,57,58,59,60,61,62,63,64,104,119,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,127,45,]),'PRIMARY':([33,71,72,73,74,75,76,77,79,81,102,103,106,107,108,110,111,124,125,126,127,128,129,130,131,132,],[52,109,-57,-58,-59,-60,-61,-62,-64,52,109,-66,-69,-70,-71,-73,-63,-65,-67,-74,-75,-76,-77,-78,-68,-72,]),'FOREIGN':([33,81,],[53,53,]),'AND':([35,40,42,43,44,45,],[-35,56,-31,-32,-33,-34,]),'IGUAL':([35,40,42,43,44,45,68,97,],[-35,58,-31,-32,-33,-34,101,122,]),'DESIGUAL':([35,40,42,43,44,45,],[-35,59,-31,-32,-33,-34,]),'DESIGUAL2':([35,40,42,43,44,45,],[-35,60,-31,-32,-33,-34,]),'MAYORIGUAL':([35,40,42,43,44,45,],[-35,61,-31,-32,-33,-34,]),'MENORIGUAL':([35,40,42,43,44,45,],[-35,62,-31,-32,-33,-34,]),'MAYOR':([35,40,42,43,44,45,],[-35,63,-31,-32,-33,-34,]),'MENOR':([35,40,42,43,44,45,],[-35,64,-31,-32,-33,-34,]),'PAR_C':([35,37,38,39,40,42,43,44,45,50,51,54,65,71,72,73,74,75,76,77,79,84,85,87,88,89,90,91,92,93,94,95,102,103,106,107,108,110,111,115,119,124,125,126,127,128,129,130,131,132,134,135,136,137,139,140,144,148,149,],[-35,-16,-17,-18,-19,-31,-32,-33,-34,80,-53,-30,-20,-81,-57,-58,-59,-60,-61,-62,-64,118,-15,-21,-22,-23,-24,-25,-26,-27,-28,-29,-54,-66,-69,-70,-71,-73,-63,-52,-30,-65,-67,-74,-75,-76,-77,-78,-68,-72,140,-80,142,-14,143,-55,-79,149,-56,]),'COMA':([35,37,38,39,40,42,43,44,45,50,51,54,65,71,72,73,74,75,76,77,79,84,85,87,88,89,90,91,92,93,94,95,102,103,106,107,108,110,111,115,119,124,125,126,127,128,129,130,131,132,134,135,136,137,140,144,148,149,],[-35,-16,-17,-18,-19,-31,-32,-33,-34,81,-53,-30,-20,-81,-57,-58,-59,-60,-61,-62,-64,119,-15,-21,-22,-23,-24,-25,-26,-27,-28,-29,-54,-66,-69,-70,-71,-73,-63,-52,-30,-65,-67,-74,-75,-76,-77,-78,-68,-72,141,-80,141,-14,-55,-79,141,-56,]),'OWNER':([47,],[68,]),'MODE':([47,67,69,99,100,123,],[-81,97,-43,-42,-44,-45,]),'EXISTS':([48,],[70,]),'smallint':([49,],[72,]),'integer':([49,],[73,]),'bigint':([49,],[74,]),'decimal':([49,],[75,]),'numeric':([49,],[76,]),'real':([49,],[77,]),'double':([49,],[78,]),'money':([49,],[79,]),'KEY':([52,53,109,],[82,83,132,]),'DEFAULT':([71,72,73,74,75,76,77,79,102,103,106,107,108,110,111,124,125,126,127,128,129,130,131,132,],[104,-57,-58,-59,-60,-61,-62,-64,104,-66,-69,-70,-71,-73,-63,-65,-67,-74,-75,-76,-77,-78,-68,-72,]),'CONSTRAINT':([71,72,73,74,75,76,77,79,102,103,106,107,108,110,111,124,125,126,127,128,129,130,131,132,],[105,-57,-58,-59,-60,-61,-62,-64,105,-66,-69,-70,-71,-73,-63,-65,-67,-74,-75,-76,-77,-78,-68,-72,]),'NULL':([71,72,73,74,75,76,77,79,102,103,106,107,108,110,111,124,125,126,127,128,129,130,131,132,],[107,-57,-58,-59,-60,-61,-62,-64,107,-66,-69,-70,-71,-73,-63,-65,-67,-74,-75,-76,-77,-78,-68,-72,]),'UNIQUE':([71,72,73,74,75,76,77,79,102,103,106,107,108,110,111,124,125,126,127,128,129,130,131,132,],[108,-57,-58,-59,-60,-61,-62,-64,108,-66,-69,-70,-71,-73,-63,-65,-67,-74,-75,-76,-77,-78,-68,-72,]),'precision':([78,],[111,]),'INHERITS':([80,],[113,]),'BOOLEAN':([104,],[130,]),'REFERENCES':([142,],[145,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'sentencias':([0,],[2,]),'sentencia':([0,15,],[4,23,]),'sentencia_ddl':([0,15,],[5,5,]),'sentencia_dml':([0,15,],[6,6,]),'crear':([0,15,],[7,7,]),'insertar':([0,15,],[8,8,]),'actualizar':([0,15,],[9,9,]),'eliminar':([0,15,],[10,10,]),'reemplazar':([11,],[16,]),'empty':([11,24,47,67,71,80,102,],[19,32,69,98,110,114,110,]),'verificacion':([24,],[30,]),'exp':([28,46,54,55,119,],[36,66,85,86,137,]),'exp_log':([28,46,54,55,119,],[37,37,37,37,37,]),'exp_rel':([28,46,54,55,119,],[38,38,38,38,38,]),'exp_ar':([28,46,54,55,119,],[39,39,39,39,39,]),'E':([28,41,46,54,55,56,57,58,59,60,61,62,63,64,119,],[40,65,40,40,40,87,88,89,90,91,92,93,94,95,40,]),'columnas':([33,],[50,]),'columna':([33,81,],[51,115,]),'propietario':([47,],[67,]),'tipo':([49,],[71,]),'lista_exp':([54,],[84,]),'modo':([67,],[96,]),'valorowner':([68,],[99,]),'atributocolumn':([71,],[102,]),'atributo':([71,102,],[103,124,]),'herencia':([80,],[112,]),'valormodo':([97,],[120,]),'valoresdefault':([104,],[125,]),'lnombres':([116,117,147,],[134,136,148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> sentencias','inicio',1,'p_ini','Gramatica.py',94),
  ('sentencias -> sentencias PTCOMA sentencia','sentencias',3,'p_lista_instrucciones','Gramatica.py',97),
  ('sentencias -> sentencia','sentencias',1,'p_lista_instrucciones','Gramatica.py',98),
  ('sentencias -> PTCOMA','sentencias',1,'p_lista_instrucciones','Gramatica.py',99),
  ('sentencia -> sentencia_ddl','sentencia',1,'p_instruccion','Gramatica.py',102),
  ('sentencia -> sentencia_dml','sentencia',1,'p_instruccion','Gramatica.py',103),
  ('sentencia_ddl -> crear','sentencia_ddl',1,'p_sentencia_ddl','Gramatica.py',106),
  ('sentencia_dml -> insertar','sentencia_dml',1,'p_sentencia_dml','Gramatica.py',109),
  ('sentencia_dml -> actualizar','sentencia_dml',1,'p_sentencia_dml','Gramatica.py',110),
  ('sentencia_dml -> eliminar','sentencia_dml',1,'p_sentencia_dml','Gramatica.py',111),
  ('insertar -> INSERT INTO ID VALUES PAR_A lista_exp PAR_C','insertar',7,'p_insertar','Gramatica.py',114),
  ('actualizar -> UPDATE ID SET exp WHERE exp','actualizar',6,'p_actualizar','Gramatica.py',117),
  ('eliminar -> DELETE FROM ID WHERE exp','eliminar',5,'p_eliminar','Gramatica.py',120),
  ('lista_exp -> lista_exp COMA exp','lista_exp',3,'p_listaexp','Gramatica.py',123),
  ('lista_exp -> exp','lista_exp',1,'p_listaexp','Gramatica.py',124),
  ('exp -> exp_log','exp',1,'p_expresiones','Gramatica.py',127),
  ('exp -> exp_rel','exp',1,'p_expresiones','Gramatica.py',128),
  ('exp -> exp_ar','exp',1,'p_expresiones','Gramatica.py',129),
  ('exp -> E','exp',1,'p_expresiones','Gramatica.py',130),
  ('exp_log -> NOT E','exp_log',2,'p_expresion_logica','Gramatica.py',133),
  ('exp_log -> E AND E','exp_log',3,'p_expresion_logica','Gramatica.py',134),
  ('exp_log -> E OR E','exp_log',3,'p_expresion_logica','Gramatica.py',135),
  ('exp_rel -> E IGUAL E','exp_rel',3,'p_expresion_relacional','Gramatica.py',138),
  ('exp_rel -> E DESIGUAL E','exp_rel',3,'p_expresion_relacional','Gramatica.py',139),
  ('exp_rel -> E DESIGUAL2 E','exp_rel',3,'p_expresion_relacional','Gramatica.py',140),
  ('exp_rel -> E MAYORIGUAL E','exp_rel',3,'p_expresion_relacional','Gramatica.py',141),
  ('exp_rel -> E MENORIGUAL E','exp_rel',3,'p_expresion_relacional','Gramatica.py',142),
  ('exp_rel -> E MAYOR E','exp_rel',3,'p_expresion_relacional','Gramatica.py',143),
  ('exp_rel -> E MENOR E','exp_rel',3,'p_expresion_relacional','Gramatica.py',144),
  ('exp_ar -> <empty>','exp_ar',0,'p_expresion_aritmetica','Gramatica.py',147),
  ('E -> ENTERO','E',1,'p_expresion','Gramatica.py',150),
  ('E -> DECIMAL','E',1,'p_expresion','Gramatica.py',151),
  ('E -> CADENA1','E',1,'p_expresion','Gramatica.py',152),
  ('E -> CADENA2','E',1,'p_expresion','Gramatica.py',153),
  ('E -> ID','E',1,'p_expresion','Gramatica.py',154),
  ('crear -> CREATE reemplazar DATABASE verificacion ID propietario modo','crear',7,'p_crear','Gramatica.py',157),
  ('crear -> CREATE TABLE ID PAR_A columnas PAR_C herencia','crear',7,'p_crear','Gramatica.py',158),
  ('reemplazar -> OR REPLACE','reemplazar',2,'p_reemplazar','Gramatica.py',165),
  ('reemplazar -> empty','reemplazar',1,'p_reemplazar','Gramatica.py',166),
  ('verificacion -> IF NOT EXISTS','verificacion',3,'p_verificacion','Gramatica.py',171),
  ('verificacion -> empty','verificacion',1,'p_verificacion','Gramatica.py',172),
  ('propietario -> OWNER valorowner','propietario',2,'p_propietario','Gramatica.py',177),
  ('propietario -> empty','propietario',1,'p_propietario','Gramatica.py',178),
  ('valorowner -> ID','valorowner',1,'p_valorownero','Gramatica.py',183),
  ('valorowner -> IGUAL ID','valorowner',2,'p_valorownero','Gramatica.py',184),
  ('modo -> MODE valormodo','modo',2,'p_modo','Gramatica.py',189),
  ('modo -> empty','modo',1,'p_modo','Gramatica.py',190),
  ('valormodo -> ENTERO','valormodo',1,'p_valormodoo','Gramatica.py',195),
  ('valormodo -> IGUAL ENTERO','valormodo',2,'p_valormodoo','Gramatica.py',196),
  ('herencia -> INHERITS PAR_A ID PAR_C','herencia',4,'p_herencia','Gramatica.py',201),
  ('herencia -> empty','herencia',1,'p_herencia','Gramatica.py',202),
  ('columnas -> columnas COMA columna','columnas',3,'p_columnas','Gramatica.py',206),
  ('columnas -> columna','columnas',1,'p_columnas','Gramatica.py',207),
  ('columna -> ID tipo atributocolumn','columna',3,'p_columna','Gramatica.py',210),
  ('columna -> PRIMARY KEY PAR_A lnombres PAR_C','columna',5,'p_columna','Gramatica.py',211),
  ('columna -> FOREIGN KEY PAR_A lnombres PAR_C REFERENCES ID PAR_A lnombres PAR_C','columna',10,'p_columna','Gramatica.py',212),
  ('tipo -> smallint','tipo',1,'p_tipo','Gramatica.py',215),
  ('tipo -> integer','tipo',1,'p_tipo','Gramatica.py',216),
  ('tipo -> bigint','tipo',1,'p_tipo','Gramatica.py',217),
  ('tipo -> decimal','tipo',1,'p_tipo','Gramatica.py',218),
  ('tipo -> numeric','tipo',1,'p_tipo','Gramatica.py',219),
  ('tipo -> real','tipo',1,'p_tipo','Gramatica.py',220),
  ('tipo -> double precision','tipo',2,'p_tipo','Gramatica.py',221),
  ('tipo -> money','tipo',1,'p_tipo','Gramatica.py',222),
  ('atributocolumn -> atributocolumn atributo','atributocolumn',2,'p_atributo_columna','Gramatica.py',227),
  ('atributocolumn -> atributo','atributocolumn',1,'p_atributo_columna','Gramatica.py',228),
  ('atributo -> DEFAULT valoresdefault','atributo',2,'p_atributo','Gramatica.py',231),
  ('atributo -> CONSTRAINT ID','atributo',2,'p_atributo','Gramatica.py',232),
  ('atributo -> NOT','atributo',1,'p_atributo','Gramatica.py',233),
  ('atributo -> NULL','atributo',1,'p_atributo','Gramatica.py',234),
  ('atributo -> UNIQUE','atributo',1,'p_atributo','Gramatica.py',235),
  ('atributo -> PRIMARY KEY','atributo',2,'p_atributo','Gramatica.py',236),
  ('atributo -> empty','atributo',1,'p_atributo','Gramatica.py',237),
  ('valoresdefault -> CADENA1','valoresdefault',1,'p_valores_default','Gramatica.py',243),
  ('valoresdefault -> CADENA2','valoresdefault',1,'p_valores_default','Gramatica.py',244),
  ('valoresdefault -> DECIMAL','valoresdefault',1,'p_valores_default','Gramatica.py',245),
  ('valoresdefault -> ENTERO','valoresdefault',1,'p_valores_default','Gramatica.py',246),
  ('valoresdefault -> BOOLEAN','valoresdefault',1,'p_valores_default','Gramatica.py',247),
  ('lnombres -> lnombres COMA ID','lnombres',3,'p_lnombres','Gramatica.py',252),
  ('lnombres -> ID','lnombres',1,'p_lnombres','Gramatica.py',253),
  ('empty -> <empty>','empty',0,'p_empty','Gramatica.py',258),
]
