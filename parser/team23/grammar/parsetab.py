
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPAR_ABREPAR_CIERRAALL ALTER AND AS ASC ASTERISCO BETWEEN BIGINT BOOLEAN BY CADENA CASE CASTEO CHAR CHARACTER CHECK COMA CONSTRAINT CORCHE_ABRE CORCHE_CIERRA COUNT CREATE DATABASE DATE DAY DECIMAL DELETE DESC DIFERENTE DIVISION DROP ELSE END ENTERO ENUM EXISTS FALSE FIELDS FIRST FOREIGN FROM FULL GREATEST GROUP HAVING HOUR ID IF IGUAL ILIKE IN INHERITS INNER INSERT INTEGER INTERSECT INTERVAL IS ISNULL JOIN KEY LAST LEAST LEFT LIKE LIMIT MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MINUTE MODE MODULO MONEY MONTH NOT NOTNULL NO_IGUAL NULL NUMERIC OFFSET OR ORDER OUTER OWNER PAR_ABRE PAR_CIERRA POTENCIA PRIMARY PUNTO PUNTOCOMA REAL REFERENCES RENAME REPLACE RIGHT SECOND SELECT SET SIMILAR SMALLINT SUM TABLE TEXT THEN TIME TIMESTAMP TO TRUE TYPE UNION UPDATE VALUES VARCHAR VARYING WHEN WHERE WITH WITHOUT YEAR ZONEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : crear_statement PUNTOCOMAcrear_statement  : CREATE TABLE ID PAR_ABRE contenido_tabla PAR_CIERRAcrear_statement  : CREATE DATABASE IDcontenido_tabla  : contenido_tabla COMA manejo_tablacontenido_tabla  : manejo_tablamanejo_tabla     : declaracion_columnadeclaracion_columna : ID type_columntype_column      : SMALLINT\n                        | INTEGER\n                        | BIGINT\n                        | DECIMAL\n                        | NUMERIC\n                        | REAL\n                        | MONEY\n                        | VARCHAR\n                        | CHAR \n                        | TEXT\n                        | DATE'
    
_lr_action_items = {'CREATE':([0,2,3,6,7,],[5,5,-3,-2,-4,]),'$end':([1,2,3,6,7,],[0,-1,-3,-2,-4,]),'PUNTOCOMA':([4,11,29,],[7,-6,-5,]),'TABLE':([5,],[8,]),'DATABASE':([5,],[9,]),'ID':([8,9,12,30,],[10,11,13,13,]),'PAR_ABRE':([10,],[12,]),'SMALLINT':([13,],[18,]),'INTEGER':([13,],[19,]),'BIGINT':([13,],[20,]),'DECIMAL':([13,],[21,]),'NUMERIC':([13,],[22,]),'REAL':([13,],[23,]),'MONEY':([13,],[24,]),'VARCHAR':([13,],[25,]),'CHAR':([13,],[26,]),'TEXT':([13,],[27,]),'DATE':([13,],[28,]),'PAR_CIERRA':([14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,],[29,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,]),'COMA':([14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,],[30,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,6,]),'crear_statement':([0,2,],[4,4,]),'contenido_tabla':([12,],[14,]),'manejo_tabla':([12,30,],[15,31,]),'declaracion_columna':([12,30,],[16,16,]),'type_column':([13,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','sql_grammar.py',227),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','sql_grammar.py',231),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','sql_grammar.py',236),
  ('instruccion -> crear_statement PUNTOCOMA','instruccion',2,'p_instruccion','sql_grammar.py',240),
  ('crear_statement -> CREATE TABLE ID PAR_ABRE contenido_tabla PAR_CIERRA','crear_statement',6,'p_crear_statement_tbl','sql_grammar.py',244),
  ('crear_statement -> CREATE DATABASE ID','crear_statement',3,'p_crear_statement_db','sql_grammar.py',250),
  ('contenido_tabla -> contenido_tabla COMA manejo_tabla','contenido_tabla',3,'p_contenido_tabla','sql_grammar.py',257),
  ('contenido_tabla -> manejo_tabla','contenido_tabla',1,'p_aux_contenido_table','sql_grammar.py',262),
  ('manejo_tabla -> declaracion_columna','manejo_tabla',1,'p_manejo_tabla','sql_grammar.py',266),
  ('declaracion_columna -> ID type_column','declaracion_columna',2,'p_declaracion_columna','sql_grammar.py',270),
  ('type_column -> SMALLINT','type_column',1,'p_type_column','sql_grammar.py',276),
  ('type_column -> INTEGER','type_column',1,'p_type_column','sql_grammar.py',277),
  ('type_column -> BIGINT','type_column',1,'p_type_column','sql_grammar.py',278),
  ('type_column -> DECIMAL','type_column',1,'p_type_column','sql_grammar.py',279),
  ('type_column -> NUMERIC','type_column',1,'p_type_column','sql_grammar.py',280),
  ('type_column -> REAL','type_column',1,'p_type_column','sql_grammar.py',281),
  ('type_column -> MONEY','type_column',1,'p_type_column','sql_grammar.py',282),
  ('type_column -> VARCHAR','type_column',1,'p_type_column','sql_grammar.py',283),
  ('type_column -> CHAR','type_column',1,'p_type_column','sql_grammar.py',284),
  ('type_column -> TEXT','type_column',1,'p_type_column','sql_grammar.py',285),
  ('type_column -> DATE','type_column',1,'p_type_column','sql_grammar.py',286),
]
